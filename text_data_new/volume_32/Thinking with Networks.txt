UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
Thinking with Networks

Permalink
https://escholarship.org/uc/item/6b1854tc

Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 32(32)

Authors
Nickerson, Jeffrey V.
Tversky, Barabara
Corter, James E.
et al.

Publication Date
2010-01-01
Peer reviewed

eScholarship.org

Powered by the California Digital Library
University of California

Thinking with Networks
Jeffrey V. Nickerson (jnickerson@stevens.edu)
Stevens Institute of Technology, Castle Point on Hudson,
Hoboken, NJ 07030

Barbara Tversky
Teachers College, Columbia University,
525 West 120th Street, New York, NY 10027

James E. Corter
Teachers College, Columbia University,
525 West 120th Street, New York, NY 10027

Lixiu Yu
Stevens Institute of Technology, Castle Point on Hudson,
Hoboken, NJ 07030

Yun Jin Rho
Teachers College, Columbia University,
525 West 120th Street, New York, NY 10027

David Mason
Teachers College, Columbia University,
525 West 120th Street, New York, NY 10027
Abstract
Many planning tasks involve complex reasoning about time:
what must happen in sequence and what may happen in
parallel. One hundred ten online participants were provided
with a simple planning scenario (to design a calling tree) and
asked to manipulate different diagrammatic representations of
the problem. More important than the initial representation
was the participants’ transformed representations: if time was
encoded in the lengths of tree links then inference was more
accurate. This finding suggests that diagram transformation
may be a useful way to elicit representation strategies, and
that such transformations from different starting conditions
may be useful as diagnostics and as design aids.
Keywords: diagram understanding, design, topological
diagrams, representation of time, distributed computing

Introduction
To solve problems or to simply organize information,
people often make diagrams. Diagrams can aid problem
solving and information organization by spatializing the
essential concepts and relations among them. One of the
most abstract kinds of diagrams is a network, where nodes
are concepts and links are relations. Because of their
generality, network diagrams appear in many diverse
domains.
The advantage of networks, their ability to represent so
many different relations, is also a disadvantage, because
they may not make problem constraints apparent. Often,
problems and information have more constraints than the

simple binary relations used in networks, constraints that
would allow inferences, for example, asymmetric relations.
Certain variants of networks can represent such constraints.
Trees, for example, are commonly used to represent
asymmetric or hierarchical relations, notably for structural
relations such as organization charts or phylogenetic
relations.
They are also used to represent temporal
relations, as in decision trees or flow diagrams. For
structure, the links indicate an asymmetric structural
relation, such as control in corporations or kind of in
phylogenies. For time, the links indicate asymmetric
temporal relations, at an ordinal level: this, then this, then
this.
However, there are situations where representing both
structural and temporal relations is desired, for example, in
coordination situations where a set of agents carry out a
temporally constrained set of actions. Representing both
structural and temporal organizations simultaneously
presents a challenge. The structure – who contacts whom –
needs to be represented. Also the timing – the temporal
ordering of contacts – must be shown. Links can be used for
the structural information, but some other aspect of the
diagram needs to be used for the temporal. Representing
both structure and time simultaneously can be all the more
challenging when metric properties of time are important
because links in networks are typically used to indicate a
relationship, but not the degree of a relationship.
These problems of representation are, more broadly,
problems of cognition: as the data will show, reasoning
1

2662

about coordination is difficult. Given the high cost of
coordination failure in a number of different fields, and the
everyday importance of coordination in computational
fields, the problem deserves attention. Previously, studies
have been performed on the way network diagrams convey
information. For example, it has been shown that distance
along network links is used to evaluate content similarity
(Fabrikant, Montello, Ruocco, & Middleton, 2004). That
study focused on the way distance and topology map to
similarity; here we focus on the way distance and topology
map to structure and time.
We turned to users to see how they would represent space
and time simultaneously. Often, users turn out to be good
designers, inventing clever devices to represent abstract
information (e. g., Kessell and Tversky, 2008; Tversky, in
press). Furthermore, their visualizations of thought are a
window to thought (e. g., Tversky and Lee, 1999). The other
side of successful design is comprehension. We have begun
exploring how people design and comprehend diagrams and
solutions for a class of problems that requires representing
both structure and time (see Figure 1).
The paradigm we have been using is based on a
distribution tree. Because the problem is a general one of
transmission of something from one party to many, it
applies to many situations when information or goods are
distributed. For example, a telephone tree can be used to
distribute information about a school closing due to weather
conditions. For speed of transmission, it is better to
distribute the callers; for reliability, it is better to minimize
the number of callers. Solutions, then, depend both on
structure and on time. Although some forms of trees, such
as decision trees and flow diagrams, are used to represent
time, they only represent temporal order. In contrast,
optimizing a distribution tree depends on metric properties
of time as well. Thus, diagramming a distribution tree
solution not only requires representing both structure and
time, it also requires representing time metrically. An added
difficulty for designers and for users in producing or
interpreting designs for distribution trees is that several calls
can happen at the same time. That is, both sequence and
parallelism need to represented and understood.
In extensive pilot work, we have found that people
spontaneously create trees to solve these problems, but that
their trees usually represent structure, that is, who contacts
whom, and rarely represent time. In fact, representing or
grasping structure from diagrams is easier and more
straight-forward than representing or grasping changes in
structure, such as changes in time (e. g., Suwa & Tversky,
1997; Tversky, Heiser, Lozano, Mackenzie, & Morrison,
2008). More generally, space seems to serve as a metaphor
for time more readily than time for space (Boroditsky,
2000).
For the telephone tree problem, structure is ordinal, but
time is metric. There are several ways to superimpose time
onto a network representing structure. Telephone trees are
tricky because a single agent can make only one call at a
time, but several agents can call simultaneously. One way to

represent time, illustrated in Figure 2, is to use length of
link, as in additive similarity trees (Sattath & A. Tversky,
1977; Corter, 1996). In this representation, the lengths of
the links emanating from any one agent indicate the
sequence of that caller’s calls. For large trees, this can be
visually confusing. Another method to represent time is a
combination of using levels of a tree to distinguish when a
caller is first notified, and within levels, showing the
sequence of calls made by a caller using a left-to-right firstto-last convention; this is visually more organized but
requires keeping track of two spatial mappings to assess
time. Both methods have been invented by our participants.
Here, we investigate solution success when time is or is not
represented by length of line.
As noted, users can be effective designers of
visualizations of problems. Does the very process of
designing visualizations facilitate using them? Architects
and other designers sketch designs, study their sketches, get
new insights, and revise them, a positive, productive cycle
that has been likened to a conversation (Schon, 1983).
Creating and revising visualizations of a range of complex
concepts, for example, scientific ones, has been shown to
increase depth of understanding (e. g., diSessa, Hammer,
Sherin, & Kolpakowski, 1991; Schwartz, 1995).
The present experiment examines the dual roles of kind of
design and act of designing for solving telephone tree
problems. Participants were given a problem analogous to
the guard problem and then asked to provide an optimal
diagram and to compute the amount of time it should take to
notify everyone. They were given an initial diagram, one
they could alter, to create a diagram they regarded as
optimal. For some participants, the initial diagram
represented structure but not time. For others, the initial
diagram represented time using proportional length of line.
For a third group, the initial diagram varied in line length
but not proportionally to time; thus this diagram provides a
hint that line length might be helpful, but not how.
This design allows asking a set of questions. We can ask
whether representing time explicitly in a visualization
makes for a more effective diagram that better helps users to
solve a telephone tree problem. We can ask whether time is
more likely to be explicitly represented in user diagrams
when the starting diagram provided to them uses variable
line lengths, either compatible with time or incompatible
with time.

Method
One hundred ten participants accepted and completed an
assigned task in return for payment on Amazon’s
crowdsourcing marketplace. The participants in Amazon’s
pool have been characterized extensively in several previous
studies: the pool is 55% female with a mean age of 31
(Kittur, Chi, & Su, 2008; Ross, Irani, Silberman, Zaldivar,
& Tomlinson, 2010). Participants were presented with the
following textual description:
2

2663

Please read the following question and then make
changes to the diagram.
Hart has the job of notifying 4 other parents in the event
that school is called off due to weather conditions. Hart
has created a plan for a sequence of phone calls:
Hart calls Dean and then Lane. Dean calls Boyd and
then Ward.
Assuming that each phone call lasts one minute, please go
to the website below to make changes to the diagram to
meet the plan description.
Once they had saved the diagram, they were asked:
Assuming that each call lasts one minute, how many
minutes will elapse before all parents know about the
school cancellation?
Participants were randomly assigned one of the following
three diagrams shown in Figures 1, 2 and 3. Figure 1 is a
typical tree structure. The connections indicate who calls
whom, using uniform line lengths. In a pilot study, most
participants drew such a diagram.

In Figure 2, time has been encoded into the lengths of the
connections between nodes. That is, after one minute, Hart
has managed to talk to Dean. After two minutes, Hart has
also managed to talk to Lane, and Dean has talked to Boyd.
The lengths of the connections reflect the constraint of the
problem, that a person can only have one phone
conversation, and so time has elapsed after each
conversation. We found in a paper and pencil pilot study
that some participants invented or at least used this
representation. It is similar to diagrams used in
transportation systems called space-time networks, in which
nodes are lined up according to elapsed time (e.g., Pallottino
& Scutella, 1998).
In Figure 3, variable edge lengths are used, but the
vertical position of a node is not consistent with elapsed
time in the problem. For example, in the problem statement,
Dean calls Boyd before calling Ward, and the vertical
arrangement of Figure 3 implies the opposite order. Thus,
the diagram may cue individuals to the possibility of using
connection length to represent time, but is not useful in
representing the problem (and may even be misleading)
unless it is transformed.

Figure 1: A uniform tree with no time encoding

Figure 3: A time-encoded tree with edges inconsistent with
the problem description
After being randomly assigned one of the three diagrams
above, participants were provided instructions on how to use
a customized web-delivered vector-based drawing tool to
move nodes, thereby manipulating spacing in the diagram.
In the tool, the connections between the nodes are preserved
as the nodes are moved. The participants’ mouse
movements were recorded. Thus, the experiment allows us
to study the effect of the initial diagram provided, the cuing
representation. In addition, the participants’ transformed
diagrams can be classified, and the relationship between
these produced diagrams and the accuracy of problem
solving shown.
Figure 2: A time-encoded tree with edge lengths consistent
with the problem description
3

2664

Results
A total of 32 participants were cued with the uniform tree of
Figure 1, 38 with the consistent time tree of Figure 2, and 40
with the inconsistent time tree of Figure 3. The overall
accuracy of their answer to the time question as a function
of cuing diagram is shown in Figure 4 as a proportion. The
consistent time tree was associated with the highest
accuracy (.66), and the inconsistent time tree with lowest
accuracy (.48); the uniform tree produced an intermediate
level of accuracy (.53). In a logistic regression model
comparing accuracy for these three conditions, cuing with
the time tree yielded marginally higher accuracy than the
uniform tree (Wald = 2.618, .05<p<.10, one-tailed) and
cuing with an inconsistent time tree produced marginally
lower accuracy than the other two trees (Wald = 1.983,
.05<p<.10, one-tailed)

showed no attempt to encode time through distance, while
those producing Time Trees did. Classifying the trees was
straightforward, because the uniform trees tended to have
uniform distances, and in particular equal distances between
parents and direct descendants. We checked inter-rater
reliability of the coding of the produced graphs by training
two raters on 15 graphs and then testing on 43 graphs:
Cronbach's alpha = .99. Figure 6 shows examples of the
produced trees.

Figure 6: On the left, a produced uniform tree transformed
from a given consistent time tree, and on the right, a
consistent time tree transformed from a uniform tree.
Figure 7 shows accuracy, as a proportion of participants’
time estimates by type of produced diagrams. For example,
the left-most blue and tan bars show that 73% of those who
produced time trees when provided with uniform trees
calculated the correct answer, whereas 50% of those who
produced a uniform tree in that same condition calculated
the correct answer.

Figure 4: Accuracy of the answer depending upon the
randomly provided starting diagram
The final tree diagrams produced by the participants were
then classified into three sets: Uniform Trees, Time Trees,
and Wrong Trees. Wrong trees could only result if
participants used the drawing tool to change the topology of
the graphs by adding or subtracting nodes. For example, one
participant directly linked Dean to Lane, as in Figure 5.

Figure 7: Accuracy of the answer depending upon the
diagram produced by the participant, grouped by the starting
diagram.
Figure 5: A topologically incorrect tree (Wrong Tree)
The rest of the participants created two kinds of
topologically valid trees. Those producing Uniform Trees

The number of participants in each category can be found
in Table 1, which lists the accuracy for each category, the
number of participants in each category, and the totals. The
4

2665

accuracy of those who produced Time Trees was
significantly greater than those who produced Uniform
Trees, χ 2 1 = 7.58 , p < .01.

()

Table 1: Mean accuracy (and frequency) for combinations
of given and produced trees

Produced diagram

€

Uniform
Tree
Consistent
Time Tree
Inconsistent
Time Tree
Wrong
Tree
Overall
(Total)

Starting diagram
Uniform
Consistent
Tree
Time Tree
.50 (18)
.46 (13)

Inconsistent
Time Tree
.29 (17)

Overall
(Total)
.42 (48)

.73 (11)

.76 (21)

.85 (13)

.78 (45)

-- (0)

-- (0)

.00 (4)

.00 (4)

.00 (3)

.75 (4)

.50 (6)

.46 (13)

.53 (32)

.66 (38)

.48 (40)

Even when presented with a consistent time tree, six
participants altered the tree into a uniform tree. That is,
some participants went out of their way to reconfigure the
most effective diagram type to a simpler type. On the other
hand, eleven participants changed the inconsistent time tree
to a consistent time tree, and these participants achieved the
highest accuracy shown in the table: 85% got the problem
right.
Starting from the inconsistent time tree condition, four
subjects produced inconsistent time trees. An example is
shown in Figure 8: The tree is inconsistent because Boyd is
called before Ward, yet Boyd is placed farther away from
Dean than is Ward. These inconsistent trees occurred in no
other condition. More broadly, from an examination of the
drawing logs, we found that participants will sometimes just
modify a diagram slightly, as opposed to drastically or not
at all.

Figure 8: An inconsistent time tree, transformed from an
inconsistent time tree.

assess the effects of cuing, participants were given one of
three starting diagrams representing the structure of the
plan: one that did not represent time; one that represented
time with line lengths proportional to time; one that
represented time with line lengths inversely proportional to
time. There were two critical questions. Would diagrams
that represent time lead to better solutions? Would cuing
with a time diagram improve designs and solutions?
Those participants who created a diagram that represented
time with line length were far more successful at computing
the total time to call all agents than those who produced
diagrams that did not represent time. Although diagrams not
representing time and even some that represented time in a
confusing way could be used to compute the correct
solution, explicitly representing time led to large increases
in correct solutions. Thus, using a diagram that directly
represents all the information needed to compute the answer
facilitates computation and performance.
Cuing participants with starting diagrams that did or did
not represent time in a compatible way, that is, using line
length proportional to time, had effects, if small, on
successful solution, mediated by the final diagram
participants produced.
The results show that reasoning about parallel and
sequential events is difficult. Presented with a simple
example involving a small number of nodes, participants in
the study failed to infer the total time of a process about half
the time. Presenting a diagrammatic representation that
encodes time helped some, as did manipulating a diagram
into a representation that encoded time.
There are implications for diagram design as well as
diagram use. First, people do not always design diagrams
that capture all the essential components of a situation or a
problem. The present project elucidates one reason for the
failure: some features of situations or problems are more
readily spatialized than others. Importantly, space and
structure, static relations, are more likely to be represented
in diagrams and more likely to interpreted correctly than
more abstract features such as time. Representing structure
and time simultaneously is especially difficult, all the more
so because independently, each would select the same
diagrammatic feature, lines linking nodes to nodes. Finding
a second diagrammatic feature to represent the second
variable, in this case time, is a challenge if only because
time is unidimensional, best represented as a single line.
Producing the right diagram, just like producing the right
mental representation, facilitates problem solving.

Acknowledgments

Discussion
One hundred and ten participants were asked to diagram
and solve a telephone tree problem, that is, determine the
structure of a call tree that would notify everyone the fastest,
and then to use the call tree to compute the total time to call
everyone. The implicit challenge was to design a diagram
that simultaneously represented both the structure of the
telephone tree and the time to accomplish the plan. To

Portions of this research were supported by grants from
National Science Foundation IIS-0725223, IIS-0855995,
and REC-0440103, the Stanford Regional Visualization and
Analysis Center, and Office of Naval Research NOOO14PP-1-O649, N000140110717, and N000140210534.

5

2666

References
Boroditsky, L. (2000). Metaphoric structuring: understanding
time through spatial metaphors. Cognition, 75, 1-28.
Corter, J. E. (1996). Tree Models of Similarity and
Association. (Sage University Papers, series: Quantitative
Applications in the Social Sciences, series no. 07-112).
Thousand Oaks CA: Sage.
diSessa, A. A., Hammer, D., Sherin, B., & Kolpakowski, T.
(1991). Inventing graphing:
Meta-representational
expertise in children. Journal of Mathematical Behavior,
10, 117-160.
Fabrikant, S. I., Montello, D. R., Ruocco, M., & Middleton,
R. S. (2004). The distance-similarity metaphor in
network-display spatializations. Cartography and
Geographic Information Science, 31, 237-252
Kessell, A. M. & Tversky, B. (2008). Cognitive methods for
visualizing space, time, and agents. In G. Stapleton, J.
Howse, and J. Lee (Editors), Theory and application of
diagrams. Dordrecht, NL: Springer.
Kittur, A., Chi, E.H., & Suh, B. (2008). Crowdsourcing user
studies with Mechanical Turk. Proc. CHI 2008, ACM
453-456.
Pallottino, S. & Scutella, M. F. (1998). Shortest Path
Algorithms in Transportation Models: Classical and
Innovative Aspects. In Marcotte, P. and Nguyen, S.
(Eds), Equilibrium and Advanced Transportation
Modelling, Boston: Kluwer.

Ross, J., Irani, L., Silberman, M.S., Zaldivar, A., &
Tomlinson, B. (2010). Who are the Crowdworkers?
Shifting Demographics in Mechanical Turk. In: alt.CHI
session of CHI 2010 Extended Abstracts on Human
Factors in Computing Systems.
Sattath, S., & Tversky, A. (1977). Additive similarity trees.
Psychometrika, 42, 319-345.
Schon, D. A. (1983). The reflective practitioner. New York,
NY: Basic Books.
Schwartz, D. L. (1995). The emergence of abstract
representations in dyad problem solving. The Journal of
the Learning Sciences, 4, 321–354.
Suwa, M. & Tversky, B. (1997). What do architects and
students perceive in their design sketches? A protocol
analysis. Design Studies, 18(4), 385-403.
Tversky, B. (In press). Visualizing thought. TopiCS in
Cognitive Science.
Tversky, B., Heiser, J., Lozano, S., MacKenzie, R., &
Morrison, J. (2007). Enriching animations. In R. Lowe
and W. Schnotz (Editors). Learning with animation.
Cambridge: Cambridge University Press.
Tversky, B., & Lee, P. U. (1999). Pictorial and verbal tools
for conveying routes. In Freksa, C., & Mark, D. M.
(Eds.). Spatial information theory: cognitive and
computational foundations of geographic information
science. Berlin: Springer.

6

2667

