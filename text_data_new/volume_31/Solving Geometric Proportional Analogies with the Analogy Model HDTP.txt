UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
Solving Geometric Proportional Analogies with the Analogy Model HDTP

Permalink
https://escholarship.org/uc/item/8114f0tx

Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 31(31)

Authors
Gust, Helmar
Krumnack, Ulf
Kuhnberger, Kai-Uwe
et al.

Publication Date
2009-01-01
Peer reviewed

eScholarship.org

Powered by the California Digital Library
University of California

Solving Geometric Proportional Analogies with the Analogy Model HDTP
Angela Schwering, Helmar Gust, Kai-Uwe Kühnberger, Ulf Krumnack
(aschweri|hgust|kkuehnbe|krumnack@uni-osnabrueck.de)
Institute of Cognitive Science, Albrechtstr. 28, 49076 Osnabrück, Germany
Institute for Geoinformatics, Weselerstr. 258, 48151 Münster, Germany

Abstract
Intelligence tests often use geometric proportional analogies
to examine the intelligence quotient of humans. Completing
such a series of geometric figures can be a cognitively
demanding task, because the solution requires a suitable
conceptualization of the geometric figures. Furthermore, there
might exist several, equally correct solutions depending on
the conceptualization. In this paper, we demonstrate how the
symbolic analogy model HDTP solves such analogies: HDTP
uses Gestalt principles and qualitative spatial reasoning to
compute a psychologically preferred representation of the
figures, adapts these representations if necessary, and
constructs a solution based on an analogical mapping.
Keywords: analogy; geometric proportional analogies;
re-representation

Introduction and Motivation
Analogical reasoning is considered to be fundamental in
human cognition and human problem solving (Gust et al.,
2008; Hofstadter, 2001). Geometric proportional analogies
(GPA) are a special form of analogous problems: A GPA
consists of a serious of four geometric figures A, B, C, and
D, where the same relation holds between figure A and B as
between figure C and D. Such analogies are commonly used
in intelligence tests to measure the intelligence quotient.
Figure 1 shows an example for a GPA where the figure D is
missing. One has to establish an analogous mapping
between figures A and C and analyze the relation between A
and B, which is afterwards transferred and applied to figure
C to construct the missing figure D.

The black elements of figure C are repeated in the middle.
The second solution can be explained by grouping the top
elements in figure A (respectively C) and construct B
(respectively D) by moving the top elements one unit down
along the y-axis. Solution 3 can be explained by grouping
the middle elements and repeating them with flipped colors.
A

B

C
solution 1:
35% of participants

:

::

:

solution 2:
31% of participants
solution 3:
17% of participants

Figure 2: Human subject tests have revealed several
different solutions for figure D, of which three preferred
solutions are shown in the picture.
In this paper, we extend earlier work (Schwering et al.,
2007) and present a computational model to analyze and
detect different plausible solutions to GPAs. We show how
the analogy model Heuristic-Driven Theory Projection
(HDTP) uses Gestalt principles and qualitative spatial
reasoning to detect cognitively preferred representations of
geometric figures, adapts these representations if necessary,
and constructs a solution based on an analogical mapping.
The paper is structured as follows: after this introduction,
we give an overview of related work on analogy models for
GPAs. In section three we explain the basics of HDTP and
show how geometric figures are formally represented in
HDTP. In section four we give details on the analogymaking process illustrated with an example. We conclude
the paper with a discussion and directions for future work.

Related Work
Figure 1: Example for a geometric proportional analogy
(GPA) with several possible solutions for figure D.
The difficulty in solving this analogy lies in its ambiguity.
It is possible to construct several, equally correct solutions
depending on the conceptualization of the geometric figures.
We investigated experimentally different solution strategies
(Schwering et al., 2008). Figure 2 illustrates three preferred
solutions for the running example: Solution 1 can be
explained by grouping the black elements in figure A and C.
Figure B repeats the black elements of figure A in the
middle. Applying the analogous strategy leads to figure D:

Proportional analogies were studied in various domains
such as the natural-language domain (Indurkhya, 1989,
1992), the string domain (Hofstadter & Mitchell, 1995),
analogical spatial arrangement at a table top scale (French,
2002), and in the domain of geometric figures.
In (1962), Evans developed a heuristic program to solve
GPAs. Before the actual mapping process, the program
computes meaningful components consisting of several line
segments in each figure. Evan’s analogy machine
determines the relation between A-B, computed a mapping
between A-C based on rotation, scaling, or mirroring, and
selected an appropriate solution from a list of possible
solutions. In contrast to our approach, the representation and
the mapping phase are sequentially separated from each

1780

other. While we use structural criteria, Evans uses
mathematical similarity to detect a suitable mapping
between figure A and C. O’Hara & Indurkhya (1992; 1993)
worked on an algebraic analogy model which is able to
adapt the representation of line drawing figures during the
analogy-making process. Dastani et al. developed a formal
language for this algebraic model to describe elements in
geometric figures and compute automatically a structural,
Gestalt-based representation (Dastani & Scha, 2003). This
approach accounts also for context effects, i.e. figure C has
an effect on the conceptualization of figure A (Dastani &
Indurkhya, 2001). Both ideas strongly influence our work.
We reuse many ideas developed for this algebraic model
and apply them to our logic-based framework.
Mullally, O’Donoghue et al. (2006; 2005) investigated
GPAs in the context of maps. They used structural
commonalities to detect similar configurations in maps and
to automatically classify geographic features. Due to the
limitation to maps, they did not support the complex spatial
analysis required for our GPAs. Tomai, Forbus et al. (2004)
extended the Structure Mapping Engine to compute spatial
relations between geometric figures and solve GPAs.
However, this approach does not include re-representation
and requires a set of possible solutions to select from.
Davies and Goel investigate the role of visual analogies in
problem solving (Davies et al., 2008). In this approach, they
don’t focus on GPAs and their special structure.

HDTP as Computational Model for GPA
We describe the basics of HDTP shortly and explain how
HDTP is used as a computational model for GPAs. For
further details we refer to (Schwering et al., 2009)
concerning the syntactic principles of HDTP and
(Krumnack et al., 2008) regarding re-representation.

The Analogy Model HDTP
HDTP is a symbolic analogy model where the source and
the target domain are formalized as first-order logic
theories. HDTP distinguishes between domain knowledge
(facts and laws holding for the source or the target domain)
and background knowledge, which is true across domains.

Figure 3 shows a rough overview of the architecture:
Knowledge about the geometric figures is captured by
domain knowledge, while general principles of perception
are captured in the background knowledge. An analogy is
established by aligning elements of the source with
analogous elements of the target domain. In the mapping
phase, the source and the target are compared for structural
commonalities. HDTP uses anti-unification to identify
common patterns in the source and target domain. AntiUnification is the process of comparing two formulae and
identifying the most specific generalization subsuming both
formulae.

Figure 4: Anti-unification compares two formulae and
creates the least general generalization.
We use anti-unification to compare the source theory with
the target theory and construct a common, general theory
which subsumes possibly many common structures of the
source and the target domain. Figure 4 gives examples for
anti-unification: formulae are generalized to an anti-instance
where different constants or function symbols are replaced
by a variable. In (a) and (b), first-order anti-unification is
sufficient. The formulae in (c) differ in the function
symbols: While first-order anti-unification fails to detect
structural commonalities, higher-order anti-unification
generalizes function symbols to a variable and retains the
structural commonality.
The generalized theory with its substitutions specifies the
analogical relation between source and target. Additional
information about the source domain (in the case of GPAs,
this information is how to construct figure B from A) is
transferred to the target domain and applied to figure C to
construct figure D.

Formalization of Unstructured Geometric Figures
HDTP starts with an unstructured description of the input
geometric figures: all primitive objects are captured and
described by their properties.
Primitive Elements:

Figure A:
o5

o6

o3

o4

o1

o2

Figure 5: Examples for some primitive elements.

Figure 3: HDTP as computational model for GPA.

Figure 5 shows primitive elements as used in our GPAs.
These primitive elements are described by their shape
(circle, square, triangle), their color (black, white, grey), and
their position in a grid. It is possible to extend the

1781

description by other properties such as size or rotation
angle. Table 1 shows the formalization of the left bottom
object in figure A of our running GPA example (Figure 1).
The description of the complete analogy, i.e. figure A, B,
and C, is a list of all primitive objects identified uniquely
and described by listing their properties.
Table 1: Formal description of the left bottom object in
figure A of the GPA shown in Figure 1.
object(o1,[
shape(circle),
position(p(1,1)),
color(white)
]).

Formalization of Structural Patters
When the human sensory system observes a geometric
figure, it transforms the unstructured information into a
structured representation of a pattern or a set of objects. In
order to solve a GPA, the observer has to understand the
visual information, make sense of the overall pattern she
sees. She identifies common structures between figure A
and C to establish a mapping between those elements
playing the same role in A and C.
Human perception tends to follow a set of Gestalt
principles of organization (Wertheimer, 1912). A model for
computational cognition of GPAs requires the ability to
detect the same structural patterns as humans do. If we
restrict the pattern detection strategies to the above
mentioned perceptual properties (shape, position, color), the
amount of possible structural patterns has a manageable
complexity. HDTP captures general rules for pattern
detection and human perception in the background
knowledge, which is general knowledge and not limited to a
particular GPA.
Gestalt Perception. Our experiment (Schwering et al.,
2008) has shown that many solutions can be explained by
Gestalt principles. We identified several dominant pattern
detection strategies:
• Grouping based on similarity. People tend to group
objects which share one or several common properties,
e.g. grouping of black elements as in the GPA example.
• Repeated groups of objects are perceived as iterations of
one group, e.g. the three left circles in figure A in the
running example are perceived as one group repeated two
times.
• Grouping based on proximity. People tend to organize
spatially close elements or elements on one (typically
horizontal or vertical) axis into units.
• Grouping based on spatial commonalities. Objects with a
special position are grouped together, e.g. in the running
example people tend to group the top or the middle
elements. In this case, spatial nearness as well as common
spatial attributes play a role.
Several grouping strategies leading to the same result - in
the running example grouping black and grouping top

elements result in the same set of objects - usually increase
the degree of preference.
Table 2: Grouping based on similarity (common color).
group(g1,List):filter(figA,color,black,List).
List = [o5,o6].
group(g2,List):filter(figA,color,¬black,List).
List = [o1,o2,o3,o4]
Table 2 shows a formalization of grouping strategies as
they are found in the HDTP background knowledge: First, a
group of elements filtered with respect to the property black
and then the complement group of non-black objects is
formed (we could use white color as equally good grouping
criteria).
Qualitative Spatial Relations. Qualitative spatial relations
play an important role for the analysis of geometric
analogies (Tomai et al., 2004). The absolute position of
elements as well as the position relative to other elements in
the geometric figure are very important for some pattern
detection strategies.

Figure 6: (a) shows the applied spatial calculus, (b)
illustrates elements being distinguished by their relative
position, and (c) illustrates points with a particular position.
For our analysis we apply a single cross calculus
distinguishing the relations of above, below, right and left as
shown in Figure 6a. This allows us to distinguish elements
by their relative position (Figure 6b), which is important for
groupings based on position. Transformations between
figure A and B often operate on coordinates of points with a
relative position as shown in Figure 6c. Depending on the
geometric figure, outstanding points or elements are
computed either on a vertical axis (as shown in the figure), a
horizontal axis, or in 2 dimensions. The middle element
does not necessarily have the same coordinates as the
middle point.
Table 3: Gestalt grouping based on position.
group(gTop,List):filter(figA,position,top,List).
List = [o5,o6]
Table 3 shows a formal description of a grouping of
elements based on the top position. All other groupings are
formalized analogously.

1782

Formalization of Structural Patters in Figure A and C.
The most preferred solution in our example is a grouping of
black elements and moving these elements to the (vertical)
middle. Table 2 shows the formalization of figure A in a
structured way: Figure A consists of a group g1 with black
elements and a group g2 with white elements. g1 is used
in the transformation to construct figure B. At this stage,
figure C is formalized as a list of primitive elements o9,
o10, and o11. Structural patterns in C are only detected in
the re-representation process described later.

Formalization of Transformations from A to B
After a description of structural patterns in A and C, one has
to analyze the relation between geometric figure A and B, to
transfer the AB-relation and construct D. The AB-relation is
represented by describing the transformations applied to
either the complete figure A or only a subset of its elements.
Based on the findings in our experiment, we implemented
the following set of transformations:
• The move transformation changes the position of
elements: moveTo moves elements to an absolute point
determined by coordinates or to a relative point such as
top, middle or bottom of the figure and moveBy moves
elements by a certain vector.
• The rotate transformation changes the orientation of an
element or a group of elements.
• The reflect transformation mirrors an element or a
group of elements along an axis.
• The change attribute transformation changes the
value of an attribute such as color. There is also the
possibility to determine two properties being switched:
the transformation colorFlip flips the colors black and
white. This was often used in our experiment.
• The add transformation adds new elements to figure B.
In this case, all transformations refer to changes in the
position and changes in the attributes, however this set is
extendable to other transformations such as topological.
Table 4 shows the transformation between figure A and B in
our running GPA example. It is applied to a subgroup g1 in
figure A, which contains only the black elements.
Table 4: Transformation between figure A and B.
group(figATOfigB,List):transform(g1,[moveTo(middle)],List).
List = [o7,o8]

The Analogy-Making Process
In the previous chapter, we explained how to represent
geometric figures, structural patterns, and transformations
between geometric figures. In the following, we discuss the
analogy-making process with its different phases: HDTP
first determines structural patterns in figure A, computes a
structured representation to establish a mapping between
figure A and C, and detects the solution of the analogy by
transferring the relation between AB to C.

The determination of structural patterns in figure A, the
re-representation of figure C and the mapping are not
sequentially separated processes, but interact with each
other. It may be, that only in the mapping it is recognized,
that the current structure does not lead to any good analogy.
In this case, HDTP has to search for a new representation.

Determining Structural Patterns
Determining the preferred structured representation of
figure A is a highly complex problem determined by the
observer’s perception. Attribute similarity, spatial nearness
and an iteration of identical groups have been the major
grouping criteria in our experimental data (compare
heuristics described above). In some analogies, all elements
of a figure were considered as a single group. That was
often the case when figures consisted of a small amount of
elements. Furthermore, the perception of figure A is
determined by its context, i.e. figure C as you can see in our
running example: In the third preferred solution, the middle
elements of figure A are grouped, because the middle
element in C differs from the other elements in C. Therefore
our algorithm of computing groups is also based on the
grouping criteria of figure C.

Figure 7: Groupings in figure A and C are determined by
clustering the objects according to their similarity.
The groupings as shown in Figure 7 are computed by
hierarchically clustering the objects based on their attribute
or spatial similarity. Not every grouping is equally
preferred1. We identify the following criteria to evaluate the
degree of preference:
• Grouping is preferred, if the ratio of distinguishing to
non-distinguishing criteria is high.
• Grouping is preferred, if the same grouping can be
established via different criteria (e.g. based on color and
based on position as in our running example).
• Grouping is preferred, if the same grouping is supported
in the context (i.e. is preferred in figure A and figure C).
The list of preferred groupings serves as input for the rerepresentation and mapping phase.

Re-Representation and Mapping
Given one structured representation of figure A, the rerepresentation process aims at finding a structured
1

There were developed several complexity measures (Dastani &
Scha, 2003; Van der Helm et al., 1992), but they originated rather
from computational than from psychological ideas.

1783

representation of figure C that a good match can be
established between both figures. HDTP uses rules in the
background
knowledge2
to
compute
alternative
representations for a geometric figure. The re-representation
benefits from HDTP’s logical basis: since the domain
descriptions are understood as logical theories, different
representations can be inferred from the basic description. It
leads to a syntactically different, but semantically equivalent
description of the geometric figures.
figure A and B

figure C

generalized axioms

:
source
domain

: ?

generalized theory
anti-unification

group(figA, [o1,o2,...,o6].
group(g1,L):-filter(g1,color,black,L).
group(g2,L):-filter(g1,color,¬black,L).
group(figATOfigB,L):transform(g1,[moveTo(middle)],L).

anti-unification

target
domain

object(o9,[shape(circle),
position(p(1,1)), color(white)])
....
group(g1,L) :filter(g1,color,black,L).

all possible representations that can
be inferred

Figure 8: Re-Representation of figure C in HDTP.
The algorithm sketched in Table 5 describes the rerepresentation and mapping of geometric figures in GPA. It
is based on the general HDTP algorithm described in
(Krumnack et al., 2008), but is adapted and optimized for
GPAs. In the first step, the algorithm selects the preferred
groupings as computed in the previous phase determining
structural patterns. As Figure 7 shows, in our running
example this is a group consisting of objects o5 and o6
called g1 and the complement group g2 consisting of
object o1, o2, o3, o4. The first group shares the properties
black color, circular shape and the top position. The second
group shares the properties white color, circular shape and
the “not top” position. Step A3 computes the preference
degree of these groups based on the grouping criteria (in this
case a high preference degree because the groups share
many properties). In step A4, a suitable transformation is
computed (in this case, moveTo(middle)) and evaluated.
Step A6 tries to regroup the objects in figure C. In the
example, it succeeds only if the grouping criteria of group
g1 are reduced to either color black or position top. A new
group (called g3) is created in figure C. In step A7, HDTP
establishes a mapping between figure A and figure C via
anti-unifying groupings from figure A with groupings from
figure C. Higher-order anti-instances and a mapping of
different structures with different complexity (e.g. a group
mapping on a single element) are generally avoided. Step
A9 computes the transfer and stores the solution with its
preference degree as well as the generalizations with the
substitutions. Particularly in GPAs, all objects in figure A
and C should be included in the match. Mappings where
2
In principle, rules in the domain knowledge can be used as
well, however, the descriptions of GPAs do not contain rules.

objects do not have a counterpart usually lead to nonpreferred analogies.
Table 5: Algorithm for determining structural patterns.
Input: Unstructured representation of figure A, B, and C,
list of preferred groupings in A and C.
A1 (select starting group): Select preferred and not yet
tested group from list, select all common properties as
grouping criteria. If no such group is left, terminate.
A2 (grouping): Form groups according to grouping criteria.
A3 (preference degree): Evaluate each group based on
number of properties common to group and distinct to
complement group(s) or based on number of common
complementary properties of complement group(s).
A4 (transformation): Compute all alternative minimal
transformations from figure A to B based on groups. If not
all elements in A or B are covered by the transformation, go
to step A1.
A5 (preference degree): Evaluate complexity based on
number of transformations.
A6 (re-represent): Prove groupings with same criteria on
target side. If resulting group is empty, reduce or change
grouping criteria without changing the group and go to A2.
A7 (try AU): Find (non-deterministically) the best matching
clauses from figure C according to the heuristic
• same operation and same arguments
• else: same operation and different arguments
Mark anti-unified objects as directly covered and objects
used in the re-representation process (step A6) as
(indirectly) covered.
A8 (preference degree): Evaluate anti-unification based on
quality of structural match (i.e. equally complex substitutions on both sides). Furthermore, the mapping should
cover all elements in figure A and C.
A9 (transfer): Apply AB-transformation to aligned groups
in figure C. If result is non-empty, save solution with degree
of preference. Go to step A1.
Output: Possible solutions with degree of preference and
structured figure A and C and AB-transformation.
The following mappings are established in the example:
group(g1,L):-filter(figA,color,black,L)
from the source domain and the re-represented group
group(g3,L):-filter(figC,color,black,L)
from the target domain are aligned and generalized to
group(Z,L):-filter(X,color,black,L)
with
the substitutions X→figA/fiC and Z→g1/g3.

Transfer of Relation AB to Solve GPA
Once there exists a mapping between the structured figures
A and C, the AB-transformation must be transferred and
applied to figure C (step A9). All existing mappings are reused: g1 is replaced by g3 and the transformation
transform(g3,[moveTo(middle)],List) is then

1784

applied to the target domain. The resulting figure is a black
square with the position (1,2) in the middle of the figure. It
is one possible solution for figure D.

Conclusions and Future Work
In this paper, we show how the analogy-making framework
HDTP can be used to solve geometric proportional analogy
problems. GPAs can be considered as special cases of
analogies, because of their particular structure A:B::C:D.
The analogy is solved by analyzing structural commonalities
between figure A and C, transferring the AB-transformation,
and applying it to C to construct the missing figure D.
We have shown in detail how to describe geometric
figures formally with a limited set of properties, how to
detect structural patterns in geometric figures using Gestalt
principles and qualitative reasoning mechanisms, and how
to detect transformation between figures. Afterwards, we
have shown how our framework is used during the analogymaking process, i.e. how figures A and C are re-represented
until an analogous structure is found, how a mapping is
established and how the transfer works. The algorithm and
the heuristics follow the same basic idea as the general
version of HDTP. Only small modifications have been
necessary to adapt HDTP to solve GPAs. Future work will
concentrate on the refinement of suitable heuristics to
determine the degree of psychological preference.

References
M. Dastani, & B. Indurkhya. (2001). Modeling context effect
in perceptual domains. Paper presented at the 3rd
International and Interdisciplinary Conference on
Modeling and Using Context.
M. Dastani, & R. Scha. (2003). Languages for Gestalts of
line patterns. Journal of Mathematical Psychology, 47,
429-449.
C. Davies, A. K. Goel, & P. W. Yaner. (2008). Proteus:
Visual analogy in problem solving. Knowledge-Based
Systems.
T. G. Evans. (1962). A heuristic program to solve geometric
analogy problems (No. Technical Report: AIM-46).
Cambridge, MA, USA: Massachusetts Institute of
Technology
R. M. French. (2002). The computational model of analogymaking. Trends in Cognitive Sciences, 6(5), 200-205.
H. Gust, U. Krumnack, K.-U. Kühnberger, & A. Schwering.
(2008). Analogical reasoning: A core of cognition.
Zeitschrift für Künstliche Intelligenz (KI), Themenheft KI
und Kognition(1), 8-12.
D. R. Hofstadter. (2001). Analogy as the Core of Cognition.
In D. Genter, K. J. Holyoak & B. Kokinov (Eds.), The
Analogical Mind: Perspectives from Cognitive Science
(pp. 499-538). Cambridge MA: The MIT Press/Bradford
Book.
D. R. Hofstadter, & J. C. Mitchell. (1995). The copycat
project: A model of mental fluidity and analogy-making.
In D. R. Hofstadter & F. A. R. group (Eds.), Fluid

Concepts and Creative Analogies (pp. 205-267): Basic
Books.
B. Indurkhya. (1989). Modes of analogy. Paper presented at
the International Workshop on Analogical and Inductive
Inference (AII).
B. Indurkhya. (1992). Metaphor and cognition. Dodrecht:
Kluver.
U. Krumnack, H. Gust, K.-U. Kühnberger, & A. Schwering.
(2008). Re-representation in a logic-based model for
analogy making. Paper presented at the 21st Australasian
Artificial Intelligence Conference (AI-08), New Zealand.
E.-C. Mullally, & D. P. Donoghue. (2006). Spatial inference
with geometric proportional analogies. Artificial
Intelligence Review, 26(1-2), 129-140.
E.-C. Mullally, D. O'Donoghue, A. J. Bohan, & M. T.
Keane. (2005). Geometric proportional analogies in
topographic maps: Theory and application. Paper
presented at the 25th SGAI International Conference on
Innovative Techniques and Applications of Artificial
Intelligence, Cambridge, UK.
S. O'Hara. (1992). A model of the "redescription" process in
the context of geometric proportional analogy problems.
Paper presented at the International Workshop on
Analogical and Inductive Inference.
S. O'Hara, & B. Indurkhya. (1993). Incorporating (re)interpretation in case-based reasoning. Paper presented at
the First European Workshop on Topics in Case-Based
Reasoning.
A. Schwering, U. Krumnack, K.-U. Kühnberger, & H. Gust.
(2007). Using Gestalt principles to compute analogies of
geometric figures. Paper presented at the 29th Annual
Conference of the Cognitive Science Society (CogSci07),
Austin: TX.
A. Schwering, U. Krumnack, K.-U. Kühnberger, & H. Gust.
(2008). Investigating Experimentally Problem Solving
Strategies in Geometric Proportional Analogies (Report).
Osnabrueck, Germany: University of Osnabrueck
http://www.cogsci.uos.de/~ai/analogy_project.html.
A. Schwering, U. Krumnack, K.-U. Kühnberger, & H. Gust.
(2009). Syntactic principles of Heuristic-Driven Theory
Projection. Special Issue on Analogies - Integrating
Cognitive Abilities. In: Journal of Cognitive Systems
Research, 10(3).
E. Tomai, K. D. Forbus, & J. Usher. (2004). Qualitative
spatial reasoning for geometric analogies. Paper
presented at the 18th International Qualitative Reasoning
Workshop, Evanston, Illinois.
P. Van der Helm, R. Van Lier, & E. Leeuwenberg. (1992).
Serial pattern complexity: Irregularity and hierarchy.
Perception, 21, 517-544.
M. Wertheimer. (1912). Experimentelle Studien über das
Sehen von Bewegung. Zeitschrift für Psychologie, 61,
161-265.

1785

