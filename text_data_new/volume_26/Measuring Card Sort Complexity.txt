UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
Measuring Card Sort Complexity

Permalink
https://escholarship.org/uc/item/24m558f3

Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 26(26)

Authors
Fossum, T.V.
Haller, S.M.

Publication Date
2004-01-01
Peer reviewed

eScholarship.org

Powered by the California Digital Library
University of California

Measuring Card Sort Complexity
T. V. Fossum (fossum@cs.uwp.edu)
Computer Science Department, University of Wisconsin-Parkside
Kenosha, WI 53141 USA

S. M. Haller (haller@cs.uwp.edu)
Computer Science Department, University of Wisconsin-Parkside
Kenosha, WI 53141 USA

A background questionnaire given to each card sort
subject provided information on the subject’s gender,
age, and self-rating of familiarity with programming languages from a specified list (Java, C, C++, Ada, Scheme,
Pascal, Visual Basic). At each participating institution,
the institution’s workshop participant ranked each of the
institution’s student card sort subjects on a scale from 1
to 5, with 1 representing low-performance and 5 representing high-performance.
The NSF workshop study addressed several questions,
including the following:
• Do students and experts organize concepts differently?

Abstract
Card sorts can be used to study the way human subjects
organize conceptual knowledge. In this paper we define
three measures of complexity of card sorts produced by
human subjects. These measures are applied to a particular data set of subjects (students and experts) collected
in a large, multi-institutional study where the concepts
are taken from a first-year programming course. We
show that certain of these measures are statistically significant in discriminating between students and experts
and among students based on their performance levels.

Introduction

• Are there differences between low- and highperforming students? similar to the differences between students and experts?

Card Sort [5] is a technique that seeks to elicit individual
conceptual frameworks by giving a subject a collection
of cards – each pre-printed, for example, with a word
or phrase – and asking the subject to partition (sort)
the cards into subsets based on the subject’s own criteria. The subject is asked to repeat the process anew
with different criteria until the subject can think of no
additional sorts.
As part of a National Science Foundation (NSF) workshop (Grant DUE-0122560, awarded to the Institute of
Technology at the University of Washington–Tacoma),
workshop participants conducted a card sort study [4] on
“first-competency” programmers: those who have typically completed a second-semester programming course
for computer science majors. This study surveyed 243
student subjects and 33 “expert” subjects drawn from
22 institutions represented by the workshop participants.
The “experts” were chosen for their proven programming
maturity and experience. Both the student and expert
subjects were given twenty-six cards used as stimuli.
Each card was printed with a one-word programmingrelated term from the following table:

• Are there differences between male and female students? Between male and female experts?
In this paper, we describe how to compute numerical
values that measure the “complexity” of the collection of
all the sorts produced by a given card sort subject. These
measures are based solely on how the subject partitions
the cards into different categories and not on the names
the subject gives to the categories nor on the criterion
the subject used to sort the cards. We show that, for the
NSF workshop study, certain of these measures can be
used to distinguish (in a statistically significant sense)
experts from novices and high-performing students from
low-performing ones. We show that there are no significant differences between males and females.

The Measures
Following [1], we use the “edit distance” metric to define the distance between two card sorts. Specifically, if
S1 and S2 are two partitions of the set of 26 cards into
subsets, we define the edit distance d(S1 , S2 ) to be the
minimum number of edit operations on S1 (moving a
card from one partition subset to another, possibly creating an empty subset and moving a card into it) that
will transform it into the same set of subsets of S2 .
As shown in [1], the value of d(S1 , S2 ) can be computed
using an algorithm for finding the maximum matching
weight sum in a bipartite graph [3]: each subset in the
partitions S1 and S2 is a node in the graph, and an
edge between a subset in partition S1 and a subset in
partition S2 has weight equal to the number of cards in

procedure
method
function
decomposition
object
dependency
boolean
abstraction if-then-else
recursion
list
scope
encapsulation
state
choice
constant
variable
parameter
expression
loop
type
iteration
thread
tree
event
array
The data set gathered by the workshop participants
includes 1199 card sorts produced by 276 subjects.

404

the intersection of the two subsets. If w is the maximum
matching weight sum in this graph, the edit distance
d(S1 , S2 ) is equal to 26 − w.
The edit distance function d satisfies the usual properties of a metric except that two sorts S1 and S2 can
have a zero edit distance without being the “same” sort
from the point of view of the subject (the subject may
have used different criteria to carry out the two sorts
even though the resulting partitions are identical):

6

10
10

10

0

0

4

4

6

6
4

0

Figure 1: Example graphs

d(S1 , S2 ) >= 0 for all S1 , S2
d(S, S) = 0 for all S
d(S1 , S2 ) = d(S2 , S1 ) for all S1 , S2
d(S1 , S2 ) ≤ d(S1 , S3 ) + d(S3 , S2 ) for all S1 , S2 , S3

if the sorts produced by a subject are represented by
the sequence X = (S1 , S2 , ¢ ¢ ¢ Sk ), the number of sorts
(NSORT) measure is k, and we define n(X) = k.

Definition. Suppose a card sort subject has produced
k sorts represented by the sequence X = (S1 , S2 , ¢ ¢ ¢ Sk ).
Construct the complete graph where each node is a sort
from the list X and where the edit distance metric d gives
the weight of the edge between any two nodes (sorts) in
the graph. The minimum spanning tree (MST) measure
µ(X) of X is the sum of the weights of a minimum spanning tree of this graph.
This MST measure is based on all the sorts for a given
subject. If a subject produces sorts that are largely similar, the pairwise edit distances will be relatively small.
If one sort produced by the subject is quite distant from
all the others, for example, this distance will appear only
once in the minimum spanning tree. We regard the MST
measure as evaluating the complexity of the collection of
sorts produced by a subject. If a subject has produced
a number of sorts that represent sort criteria having a
high degree of “pairwise orthogonality”, we would expect
that two sorts produced by this subject would exhibit
relatively small overlaps and thus a large edit distance.
Consequently the MST measure of the sorts produced
by the subject would be large. Observe that if a subject
identifies two different sort criteria but produces sorts
that are identical (the same number of piles and the
same cards in the piles, up to permutation), the edit
distance between these two sorts will be zero, which will
contribute a zero term in the sum of the weights in the
minimum spanning tree.
As an alternative to the MST measure, we considered
the sum of all the pairwise edit distances between the
sorts of a given subject. However, adding all the pairwise edit distances can result in a large value even if there
is just one sort that is distant from several of the others.
For example, consider two graphs representing two possible configurations of edit distances between four sorts,
illustrated in Figure 1.
The sum of the edit distances in both of these graphs is
30. However, the MST measure of the left-hand graph is
10 while the MST measure of the right-hand graph is 14.
(Minimum spanning trees for these graphs are illustrated
with heavy lines for the edges.) We consider the righthand graph in Figure 1 as having more “complexity”
than the left-hand graph, and the MST measure captures
this better than summing all the edit distances.
Definition. Another measure of card sort complexity is
the number of sorts produced by a subject. Specifically,

Since each new sort produced by a subject adds one
edge to the minimum spanning tree used to compute the
MST measure, the MST measure will normally increase
as the number of sorts increases. We regard the NSORT
measure as significantly less informative than the MST
measure in taking into account card sort complexity for
a given subject.
Note that if a subject produces just one sort, the underlying graph will have just one node and its spanning
tree will have no edges, so the MST measure will be zero.
Definition. As n(X) increases, we have remarked that
µ(X) generally increases as well (see section ). We define a measure that “factors out” the number of sorts as
a contribution to the complexity of the set of sorts produced by a subject. The normalized minimum spanning
tree (NMST) measure is
ν(X) = µ(X)/n(X)
.

Example
We illustrate our MST measure with two subjects in the
study, both of whom produced three sorts. We will call
them A and B (not their real names).
The sorts A1 , A2 , and A3 produced by subject A have
the following partitions:
Sort
A1

A2

A3

Partitions
1,3,4,5,6,7,13,14,15,22,23
2,8,9,10,11,12,16,17,18,19,20,21,24,25,26
1,3,4,6,7,10,13,14,15,18,23,26
2,5,8,9,11,12,16,17,19,20,21,22,24,25
1,2,5,8,9,11,12,16,17,18,19,20,21,22,24,25
3,4,6,7,10,13,14,15,23,26

For subject B, the sorts B1 , B2 , and B3 are

405

Sort
B1

B2

B3

n(X)
1
2
3
4
5
6
7
8
9
10
11
13
14

Partitions
9,17,18,25
1,3,5,8,12,13,20,26
2,6,7,10,11,15,19,22
4,14,16,21,23
24
12,20
18,25
3,13,19
5,10,15
1,17
8,9
2,4,6,7,11,14,16,21,22,23,24,26
1,3,5,6,7,9,10,11,12,14,15,16,18,19,20,21,25,26
2,4,8,13,17,22,23,24

freq.
2
30
63
67
40
33
17
12
5
3
2
1
1

min µ(X)
0
3
7
13
20
23
30
32
45
35
64
50
79

max µ(X)
0
19
33
46
58
69
66
77
72
72
98
50
79

This table shows that the MST measures µ(X) generally increase as the NSORT measures n(X) increase
and that for a given n(X), there can be large variations
among the values of µ(X).

Comparing Students to Experts
The edit distances between the sorts for each of these
subjects are given in the following tables:
x
A1
A1
A2

Subject A
d(x, y)
y
5
A2
5
A3
2
A3

x
B1
B1
B2

Subject B
d(x, y)
y
15
B2
18
B3
18
B3

We expect that the greater experience and knowledge
base of an expert will show up by experts producing larger NSORT values and that their sorts exhibit
greater “orthogonality” (i.e., larger pairwise edit distances) compared to non-experts, resulting in larger
MST measures.
We use the nonparametric Wilcoxon two-sample test
(also called the Wilcoxon-Mann-Whitney test) [2] to
compare observations from two populations, with the
null hypothesis being that the observations come from
the same distribution. We use a one-sided test when
a one-sided alternative hypothesis is supported by the
observed data.
We will examine three measures to compare observations for students and experts: NSORT, MST, NMST.

The above tables give the pairwise edit distances between sorts for each subject, from which it is easy to
determine the MST measures µ:
X
A
B

NSORT measure
We first examine the numbers of sorts n(X) produced
by students and experts, with 243 student observations
and 33 expert observations. The Wilcoxon two-sample
test using numbers of sorts yields a z score of 1.33. Since
the observed data suggests a one-sided alternative (the
observed number of sorts produced experts is generally
larger than the number of sorts produced by students),
we reject the null hypothesis at the 10% level.

µ(X)
7
33

Observe that the MST measure of subject B is much
larger than that of subject A. Visually comparing the
sorts produced by these two subjects, this is not surprising.

MST measure
We next examine the MST measures µ(X) produced by
students and experts. The Wilcoxon two-sample test using MST measure observations yields a z score of 2.48,
and we reject the null hypothesis with a one-sided alternative at the 1% level.

Comparison with number of sorts

NMST measure

The two subjects, A and B, were chosen because their
MST measures were the smallest and largest among all
subjects who produced exactly three sorts. Recalling
that n(X) represents the number of sorts produced by
subject X, the following table gives the range of values
of µ(X) for all values of n(X) in the study. This table
also includes the frequencies of subjects with the given
number of sorts.

Since the MST measure more strongly distinguishes students from experts compared to the NSORT measure, we
conjecture that the NMST measure ν(X) will factor out
the less powerful number of sorts and produce a stronger
difference between students and experts. Indeed, using
the NMST measure observations yields a z score of 2.61,
and we reject the null hypothesis at the 0.5% level.

406

Summary

by n(X)) and not by the complexity of their sorts (as
measured by ν(X)). We suggest that better students
are characterized as being more likely to take risks by
producing a larger number of sorts, but that they do not
have the depth of knowledge of an expert that would be
necessary for their sorts to be highly orthogonal to one
another.

The Wilcoxon-Mann-Whitney z scores for the three measures are given in the following table:
Students & Experts
z reject at
measure
10%
1.33
NSORT
1%
2.48
MST
0.5%
2.61
NMST

Comparing high performing students to
Experts

Student Performance Levels

If high-performing students tend to have a larger number
of sorts but with relatively little complexity, we predict
that high-performing students will be similar to experts
in numbers of sorts but that experts will have sorts that
are measurably more complex. The Wilcoxon-MannWhitney z scores for the three measures are given in
the following table:
High Performers & Experts
reject at
z
measure
0.35 not significant
NSORT
0.66 not significant
MST
5%
1.83
NMST
As predicted, the number of sorts for high performing
students and experts are similar, but the NMST measure – which captures best the complexity of the sorts –
statistically distinguishes experts from high performing
students.

The researchers in this study were asked to give each
student participant a performance ranking from 1 to 5,
where 1 represents an assessment of low performance and
5 an assessment of high performance. Only 217 of the
243 students appear in the study ranking data, so we
restricted our observations to this subset.
We used the nonparametric Mann-Kendall test (also
called the S-Test in [2]) to test for randomness against
a monotone trend. The “trend” is represented by an increase in student performance levels. Consider the MST
measure, for example. If there is no trend (i.e., a random
trend) relating MST measure and performance level,
then an MST measure for a lower-performing student
would be just as likely to be larger than the MST measure for a higher-performing student as to be smaller. If
there is a monotone, positive-going trend, then an MST
measure for a lower-performing student would be less
likely to be larger than the MST measure for a higherperforming student than to be smaller.
As with our comparison of students and experts, we
again examined three measures: NSORT, MST, and
NMST.

Comparing Females and Males
We conjecture that there are no differences between female (58) and male (184) subjects in our student populations. The Wilcoxon-Mann-Whitney z scores for the
three measures are given in the following table:
Females & Males
reject at
z
measure
0.34 not significant
NSORT
0.06 not significant
MST
0.87 not significant
NMST
While the statistical results are not conclusive, the
actual observations show that females in the study produced fewer sorts than their male counterparts, but the
sorts they did produce were more complex. This is an
area of interest for further study.
Since the data available to us did not include gender
information on experts, we were unable to compare females and males among the experts.

NSORT measure
Using NSORT measures to test for a monotone trend,
the Mann-Kendall test produced a z score of 3.40, and
we reject the null hypothesis at the 0.03% level.

MST measure
Using the MST measure µ, the Mann-Kendall test produced a z score of 3.21, and we reject the null hypothesis
at the 0.06% level.

NMST Measure
Using the NMST measure ν, the Mann-Kendall test produced a z score of 0.37, which does not support rejecting
the null hypothesis.

Summary and Analysis

Random sorts

The Mann-Kendall z scores for the three measures are
given in the following table:
Monotone Trend
reject at
z
measure
0.03%
3.40
NSORT
0.06%
3.21
MST
0.37 not significant
NMST
These results show that differences among performance levels seem to correlate best with the numbers
of sorts produced by the student subjects (as measured

We can expect a human to put cards into categories
based on a sort criterion in a way that is very different
from just throwing cards randomly into piles. On average, we would expect much larger edit distances between
two random sorts than between two sorts produced by
human subjects. In this section, we show that our MST
and NMST measures distinguish human subjects from
“random” subjects in a statistically significant way.
We first built a table giving the frequency distribution
of the number of sorts for our human subjects. The fre-

407

pect that the NSORT measures of these two populations
should not be significantly different. Our statistics show
that this is the case. However, the MST and NMST measures of human subjects are clearly different from those
of the random subjects.

quency data has already been given in a table in section
.
For a given sort, we defined the sort footprint as the list
of the sizes of each of the piles in the sort, in increasing
order. (In mathematical terminology, this list is called a
partition.) We then built a frequency distribution of all
the sort footprints for the human subjects. The following
table illustrates the distribution, displaying only part of
the entire footprint data:

Conclusions
We conclude that our MST measure µ appropriately
quantifies the combination of number of sorts and the
complexity of these sorts for a subject. Subjects with
larger MST values exhibit greater numbers of sorts with
greater complexity. Since the MST measure, to some
extent, includes a measure of the number of sorts of a
subject, the NMST measure ν factors out the number of
sorts, giving a value that distills the complexity of the
sorts.
Comparing experts to students in the NSF workshop population, all the measures (NSORT, MST, and
NMST) are significantly larger for experts compared to
students. The NSORT measure is the least significant
measure, and the NMST measure is the most significant.
Comparing students based on performance level, both
the NSORT and MST measures have significant positivegoing trends compared to performance level, but the
NMST measure is not significant. This suggests that
higher-performing students produce more sorts, but that
because of their lack of experience (in this study, the
student subjects were at the CS2 level), their sorts did
not exhibit greater complexity. High-performing students and experts had similar NSORT measures, but the
experts had significantly larger NMST measures, which
gives further evidence to our observations about higherperforming students in the student population.
Comparing females to males in the student population,
the three measures (NSORT, MST, and NMST) showed
no significant differences. Examining the data, however,
shows that the NSORT values appear to be smaller for
females than males, but that the NMST values appear
to be larger. This is an area that warrants further study.
We have shown that the MST and NMST measures
of card sort complexity are statistically significant in
discriminating between experts and non-experts. These
measures may have broader applicability to other experiments requiring complexity measures.

footprint freq.
1
111111111111111112223
1
1 1 1 1 1 1 1 1 1 5 12
1
1 1 1 1 1 1 1 1 5 13
1
11111112222245
¢¢¢
¢¢¢
2
1122333335
1
112233356
2
112233446
¢¢¢
¢¢¢
10
8 8 10
7
899
26
9 17
Using these frequency distributions, we generated 100
“subjects”. For each generated subject, we randomly
generated the number of sorts for the subject using the
frequency distribution in section from our sample population. To generate a random sort for this subject, we
randomly selected a sort footprint using the frequency
distribution given in this section. Once we identified
a randomly generated footprint, we randomly assigned
cards to piles so that the sizes of the piles matched the
selected footprint. In this way, the “subjects” we generated have a distribution of number of sorts similar to
that of the human population, and each “subject” has
a distribution of sort footprints similar to that of the
human population.
Because the sorts for the generated “subjects” are randomly generated, we hypothesize that they will exhibit
significant “complexity”, in the sense that their pairwise edit distances will be large. Consequently, we expect that the randomly generated “subjects” will produce MST measures (both un-normalized and normalized) that are significantly larger than the human subjects.
After generating one such set of “subjects”, we compared them to human subjects using the NSORT, MST,
and NMST measures. The following table summarizes
the results:

References
[1] R. Anderson, R. Anderson, and K. Deibel. Analyzing concept groupings of introductory computer programming students. In submission.
[2] G. Noether. Introduction to Statistics: A Nonparametric Approach. Houghton Mifflin Company, 2nd
edition, 1976.

Human Subjects & Random Subjects
reject at
z
measure
not significant
0.62
NSORT
off the charts
11.07
MST
off the charts
14.79
NMST
Observe that the random population of subjects was
generated in such a way that their distribution of number
of sorts should be similar to the distribution of number of
sorts from the human population. Consequently, we ex-

[3] C. H. Papadimitriou and K. Steiglitz. Combinatorial
Optimization: Algorithms and Complexity. PrenticeHall, 1982.
[4] M. Petre, S. Fincher, J. Tenenberg, et al. ”My criterion is: Is it a Boolean?”: A card sort elicitation
of students’ knowledge of programming constructs.
Technical report, University of Kent, 2003.

408

[5] G. Rugg and P. McGeorge. The sorting techniques:
A tutorial paper on card sorts, picture sorts, and
item sorts. Expert Systems, 14(2):80–93, 1997.

409

