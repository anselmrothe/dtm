UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
Shared Knowledge in Collaborative Problem Solving: Acquisition and Effects

Permalink
https://escholarship.org/uc/item/3740980t

Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 26(26)

Authors
Thalemann, Susanne
Strube, Gerhard

Publication Date
2004-01-01
Peer reviewed

eScholarship.org

Powered by the California Digital Library
University of California

Shared Knowledge in Collaborative Problem Solving: Acquisition and Effects
Susanne Thalemann (thaleman@cognition.uni-freiburg.de)
Gerhard Strube (strube@cognition.uni-freiburg.de)
Institut für Informatik und Gesellschaft, Friedrichstr. 50
79098 Freiburg, Germany

Abstract
Whenever heterogeneous experts work together, shared
knowledge comes into play. In recent years, two important
research questions have emerged that we will address in the
present paper. First, we analyzed if collaborative problem
solving leads to the construction of shared knowledge. The
second goal of this study was to demonstrate the assumed
positive effect of shared knowledge on collaborative problem
solving. Following Newell and Simon’s (1972) classic view
of problem solving, we distinguish shared knowledge about
the initial situation, the goals, and the operators. The kind and
amount of prior shared knowledge was varied as an
independent variable in four experimental conditions. We
showed that participants acquired shared knowledge during
the cooperation and that most of this information was correct.
Further results indicate that if collaborating partners have
knowledge in common, their overall problem solutions are
better than if they lack any kind of shared information.
However, this effect seems to be mostly due to shared
knowledge about initial situation and goals, as this leads to
better solutions than shared knowledge about operators.

Introduction
Complex tasks often require the collaboration of experts
with heterogeneous background knowledge. If we refer to
this kind of collaborative problem solving, the construct of
shared knowledge plays a very important role. Two lines of
research dealing with the role of shared knowledge can be
distinguished. On the one hand, there are studies that
address the acquisition of shared knowledge in collaborative
activities, especially in collaborative learning. On the other
hand, many researchers focus on the effects of shared
knowledge as a prerequisite for effective collaborative
problem solving. In the present paper, we will address both
issues in a net-based scenario.
Concerning the acquisition, it is mostly assumed that
collaborative learning leads to the construction of shared
knowledge (e.g. Pfister, Wessner, Holmer & Steinmetz,
1999; Roschelle & Teasley, 1995) through interaction and
communication (Clark & Brennan, 1991). Although there is
evidence for this assumption, this issue is seldom addressed
quantitatively. In addition, the possibility of the emergence
of false shared knowledge is often neglected. Only a few
studies try to quantify the amount of shared knowledge (e.g.
Fischer & Mandl, 2000; Jeong & Chi, 2000) and to analyze
the way of its emergence (either through individual but
similar experience with the learning material or by coconstruction). There are several possibilities of coconstructing shared knowledge. One is that two interacting

partners mutually build a piece of shared knowledge that
contains novel information, which none of them possessed
in full before (e.g. Roschelle & Teasly, 1995). Another
possibility, analyzed here, is that one person communicates
some of his specific information to his partner, so that the
latter learns and understands it, which constitutes shared
knowledge between the two. One goal of this article is to
analyze and quantify if collaborative problem solving leads
to the acquisition of shared knowledge and to determine if it
is correct or not. As collaborative problem solving also
requires participants to communicate and interact in order to
find a solution and, furthermore, in this experiment, to
represent it in a common whiteboard, we hypothesize that
participants will acquire some sort of shared knowledge.
Concerning its’ effects, shared knowledge is supposed to
be an important variable determining the functioning of
groups consisting of members with heterogeneous
background knowledge (e.g., expert groups; Hinsz, Tindale
& Vollrath, 1997, Smith, 1994). Shared knowledge about
the distribution of information within the group is regarded
as a major constituent of the group’s transactive memory
system, which guides information encoding and retrieval on
the group level (Wegner, 1987). This shared metaknowledge augments the group’s memory capacity and
enables effective retrieval of information held by the group
members when needed for problem solving (Moreland,
Argote & Krishnan, 1996). Shared mental models
comprising shared knowledge about task, team, equipment
and situation have been found crucial for effective expert
team decision making, problem solving and co-ordination in
complex dynamic environments (Cannon-Bowers, Salas &
Converse, 1993; Rouse, Cannon-Bowers & Salas, 1992).
Furthermore, effective communication requires common
ground and shared vocabulary (Clark & Brennan, 1991;
Waern, 1992). As shown by this brief summary, the
importance of shared knowledge for collaborative activities
is widely acknowledged throughout the literature, although
the term ‘shared knowledge’ refers to rather different things.
Empirical studies on problem solving that demonstrate the
effectiveness of shared knowledge are still rare. In the
present paper, we therefore want to develop a taxonomy of
shared knowledge that is applicable to problem solving
activities in general. Furthermore, we will analyze it’s
facilitating effects in collaborative problem solving and find
out whether some components of shared knowledge are
more effective than others.

1333

4.

A Taxonomy of Shared Knowledge for
Collaborative Problem Solving
In line with Stasser and Titus (1985, 1987) we define shared
knowledge as the kind of information two or more persons
have in common, i.e., possess and understand in essentially
the same way. Information available to only one person is
called individual or distributed knowledge. Based on this
definition our taxonomy of shared knowledge follows
Newell and Simon’s (1972) classic view of problem solving.
According to Newell and Simon, knowledge about the
initial situation, goals and operators is needed to solve a
problem. Expanding this view to collaborative problem
solving, shared knowledge can be conceptualized as shared
knowledge about the initial situation, the goals and the
operators. This taxonomy provides a more detailed
description of shared knowledge and allows for the testing
of differential effects of its components. Moreover, it is
applicable to any problem without undue commitments
concerning specific initial situations, goals and operators.

Analyzing the Effectiveness of Shared Knowledge
Design tasks are a widely used but scarcely investigated
example of problem solving (Smith & Browne, 1993;
Strube, Garg & Wittstruck, 2002). For our study, we chose
the domain of web design with its heavy use of net-based
communication between multiple experts as our
experimental task: Dyads of subjects adopting the role of an
information technology advisor (IT expert) and a
representative of a fictitious company (company expert)
have to design an online-shop that meets the company’s
needs. From the perspective of problem solving, the
company expert’s knowledge is characterized by
information about the company’s initial situation and goals.
The expertise of the IT expert comprises knowledge about
operators, i.e., rules to transform the company’s goals and
constraints into technical solutions.
As hypothesized above, shared knowledge is needed and
facilitates collaborative problem solving whenever
heterogeneous experts work together. Following this
hypothesis and taking into account that individual problem
solving requires individual knowledge about initial
situation, goals and operators (Newell & Simon, 1972), we
assume that collaborative problem solving requires shared
knowledge about the initial situation, goals and operators.
Therefore, we state the following hypotheses:
1.

2.

3.

Shared knowledge, in general, leads to better
problem solving performance than a total lack of
shared knowledge.
Sharing knowledge about all components, the initial
situation, goals and operators, is more effective than
just sharing knowledge about the initial situation and
goals.
Shared knowledge about the initial situation, goals
and operators is more effective than sharing
knowledge about operators alone.

Finally, we are interested in the particular difference
of shared knowledge about the initial situation and
goals as compared to shared knowledge about
operators. Information about the initial situation and
goals frame the problem and help to decide when a
solution is reached. In contrast operators are means
to transform one state into another, so we expect that
sharing knowledge about the initial situation and
goals has different effects than sharing knowledge
about operators.

Method
Tasks and Materials
Design Task. Information needed for the design task was
provided in two introductory texts, one for the role of the
company expert and one for the role of the IT advisor.
After having acquired their task-relevant information (see
next section), two participants worked on the design
problem, one as the company expert and the other as the IT
advisor. They were instructed to discuss solution features of
the online-shop in preparation, via chat. Features which
were chosen as part of the final solution were to be noted on
a common whiteboard.
The introductory text for the company expert comprised
36 knowledge elements, 27 about the company’s initial
situation (IS) and goals (G), and 9 containing either shared
knowledge or irrelevant filler information (depending on the
experimental condition). Knowledge about IS and G was
considered as a whole because a) this resembles the natural
expertise of a company expert, e.g. a manager and b)
knowledge elements about IS and G were of the same form,
with the only difference that the goals were formulated as a
request, e.g. “The company wants their customers to find
the desired products quickly and easily”. The introductory
text for the IT advisor consisted of 27 knowledge elements
about operators (O) and 9 shared elements or fillers. The
operators had the form of if-then clauses with the ‘then’ part
specifying a technical feature of the solution, and the ‘if’
part describing constraints to be fulfilled by the company. If
the company’s initial situation and goals match the ‘if’ part,
the solution feature provided in the ‘then’ part should be
marked as a desirable feature (DF) of the online-shop. If
not, the solution feature should be marked as not being part
of the online-shop’s functionality (No DF). By integrating
the 27 knowledge elements about initial situation and goals
with the 27 operators, a total of 24 solution features (15 to
be part of the shop and 9 to be rejected) were
unambiguously determined. The following example should
illustrate the task and a filler item (FI) for the company
expert:
IS: Products cost between 7 and 180 Euro.
O1: If medium payments (5-1000 Euro) are expected,
then the online-shop should provide the opportunity to
pay by check or credit card.
O2: If micro payments (0.1-5 Euro) are expected, the
online-shop should use systems like e-Cash.

1334

DF: The online-shop should provide the possibility to
pay via check and credit card.
No DF: E-Cash should be used for payments.
FI: The well known designer Philippe Starck designed
the layout of the stores.
As participants were not true experts in the domain
assigned to them, materials had to be simplified as
compared to reality. Despite this simplification, the
knowledge elements and solution features provided should
be correct. Therefore, three experts on matters of the
internet rated the correctness of the knowledge elements and
the resulting solutions. As a result, several items were
changed or eliminated.
Memory Test. To make sure that information provided in
the introductory texts was acquired sufficiently, participants
performed a memory test, similar to a recognition test. (The
difference was that test items were not identical verbatim,
but instead in meaning, to items presented during the
learning phase.) The following example shows target (T)
and distractor (D) for a knowledge element concerning the
company’s initial situation (IS). Items were presented in
random order and should be classified as correct or false.
IS: Online sales should be integrated into the current
business practices of the company, as it would be too
costly to add additional personnel to process the
online shop’s orders by hand.
T: Due to personnel and administrative
considerations online sales should be integrated into
the business practices.
D: Due to personnel and administrative
considerations online sales should be separated from
the current business practices.
If the criterion of 95 percent correct responses was not
reached, text and the subsequent test were presented again.
This procedure was repeated until both subjects reached the
criterion, or a time limit of 80 minutes was exceeded.
Further Tasks. In addition to the design task, participants
had to complete two additional tasks. Prior to the
experiment, they answered a questionnaire about relevant
aspects of the IT advisor’s knowledge. In order to make the
experimental manipulation effective, only naive participants
were accepted. As a fictitious company was used, there was
no need to control for prior knowledge concerning the
company. The final task was an unexpected repetition of the
memory test already applied after reading the introductory
texts. As opposed to the first time, the test now comprised
all information relevant to the task for both subjects so that
the amount of acquired shared knowledge can be
determined.

Experimental Design
The kind and amount of prior shared knowledge (SK) was
manipulated as an independent variable in four experimental

conditions. In the first condition, no shared knowledge is
available prior to collaboration (No SK). The company
expert’s introductory text only contains the 27 knowledge
elements about the initial situation and goals (IS+G), as well
as 9 fillers. Accordingly, the IT-expert is provided with 27
operators (O) and 9 fillers. In the second condition, SK
(IS+G), knowledge about IS+G is shared. Prior knowledge
of the company expert remains unchanged, whereas the 9
fillers of the advisor’s prior knowledge are replaced by 9
knowledge elements about initial situation and goals. These
9 elements form the dyad’s shared knowledge. Similarly,
condition 3 with shared operators is realized, SK (O): Fillers
in the company expert’s introductory text are replaced by 9
operators, whereas the advisor’s prior knowledge stays the
same as in the first condition. Condition 4, SK (IS+G+O),
provides shared knowledge about both components, starting
situation and goals, as well as operators. Like in conditions
SK (IS+G) and SK (O), the company expert receives 9
knowledge elements about operators, and the advisor 9
elements about initial situation and goals, in addition to the
27 knowledge elements of their own expertise.
By sharing either 9 IS+G elements or 9 operators in
conditions SK (IS+G) and SK (O), 9 solution features can
be determined by the advisor (condition IS+G) or by the
company expert (condition O) alone, since the shared
knowledge elements provide all the information they need
in addition to their own expertise. Although each participant
is provided with some shared information in condition SK
(IS+G+O), the number of solution features that do not
require any collaboration remains 9 because the shared
knowledge is distributed redundantly. Both partners are able
to find the same 9 solution features on their own in
condition SK (IS+G+O). In sum, the maximum possible
correct solution features is 24 in all conditions.
The variation of shared knowledge as described above
focuses on task-relevant shared information such as
operators or goals. However, as many of the knowledge
elements contained technical terms, providing some of the
same knowledge elements to both participants might also
have encouraged participants to develop a shared
vocabulary around the terms both were exposed to.
Furthermore, shared meta-knowledge is another aspect of
what is meant by shared knowledge in the present
experiment: In conditions SK (IS+G), SK (O) and SK
(IS+G+O) participants were told that there is some
information they both have in common.

Dependent Variables
Acquisition of Shared Knowledge. The amount of shared
knowledge that was acquired during the collaboration was
measured by the relative number of items that were
recognized in the same way by both cooperation partners in
the final recognition test. Initially shared items in the
conditions with shared knowledge were excluded as well as
all items that had not been discussed during the cooperation

1335

task1. This measure also allowed to differentiate between
correct (items that were recognized correctly by both
partners like a ‘hit’) and false shared knowledge (items
recognized in the same way by both partners, but falsely like
a ‘miss’).

Table 1: Mean relative number and standard deviations
of correct and false shared knowledge (SK).
Condition
No SK

Effects of Shared Knowledge. As an indicator of the
effectiveness of shared knowledge, we chose solution
quality as our dependent variable. It was measured by the
amount of correctly noted solution features, ranging from 0
to 24. All features in the whiteboard were analyzed, only
features mentioned more then once were excluded. Solution
features were scored as correct if they corresponded to the
ideal solution, as determined through the integration of the
company expert’s and the IT advisor’s knowledge.
Conversely, solution features contradicting the ideal
solution were scored as false. Features that were neither
correct nor false, were coded as irrelevant, e.g., intrusions or
underspecified features.
In order to detect eventual differences in the difficulty of
learning the knowledge supplied about IS+G and O, we
measured the time required to read the introductory texts
and to acquire the information, until the learning criterion
was reached.

Subjects and Procedure
64 participants (47 females, 17 males) were randomly
assigned to the 4 experimental conditions, as well as to the
role of company expert or IT advisor. None of them had
task-relevant prior knowledge as controlled by the first
questionnaire. After having acquired the information
presented in the introductory text according to the learning
criterion, participants performed the design task for 50
minutes. This limit seemed to be appropriate as subjects
finished their task quite easily within this timeframe.
Afterwards, they completed the net-based questionnaire.
The only task not expected by the participants was the final
memory test. The experiment took between 2.5 and 3 hours
all together.

SK (IS+G)
SK (O)
SK (IS+G+O)

As the 24 solution features were unambiguously determined
by combining the company expert’s and the IT advisor’s
knowledge, solution features noted on the whiteboards had
to be compared to this ideal solution. Because the features
that subjects noted were often incorrectly formulated and
thus ambiguous, criteria were defined to determine what
variations could be accepted as correct. For example, if a
solution feature was called ‘eMoney’ instead of ‘eCash’ this
was counted in the same way. To control for objectivity, a
second rater, blind to the hypotheses of the experiment,
assessed all solution features again. 94 percent of all
features were rated identically.
Table 2: Mean number and standard deviations of
correct, false and irrelevant features.
Condition
No SK
SK (IS+G)
SK (O)
SK (IS+G+O)

As expected the hypothesis stating that collaborative
problem solving leads to the acquisition of shared
knowledge could be accepted for correct (t(31) = 23.25,
p < .05) as well as for false shared knowledge elements
(t(31) = 4.71, p < .05).
As table 1 shows, about one third of the discussed
knowledge elements enter the pool of subject’s shared
knowledge. The amount of shared knowledge did not differ
significantly between experimental conditions (F(3,56) < 1),
but participants acquired significantly more correct than
false shared items (F(1,56) = 447.86, p < .05).
1
Note that information in the partner’s domain can only be
acquired by communication within the dyad.

False
SK
.01
(.02)
.02
(.06)
.09
(1.0)
.03
(.04)

Effects of Shared Knowledge

Results
Acquisition of Shared Knowledge

Correct
SK
.37
(.07)
.36
(.06)
.38
(.12)
.33
(.09)

Correct
features
9.00
(3.46)
14.50
(3.16)
11.25
(2.71)
14.50
(2.39)

False
features
1.50
(1.41)
.88
(.35)
2.00
(1.20)
1.88
(1.25)

Irrelevant
features
4.50
(3.46)
6.38
(3.85)
4.88
(2.85)
3.75
(3.24)

ANOVA was carried out to compare the quality of the
solution in the four experimental conditions. Table 2 shows
the means in the 4 experimental conditions (main effect of
shared knowledge: F(3,28) = 6.59, p < .05). Linear contrasts
were carried out to assess overall effectivity of shared
knowledge (hypothesis 1), as well as the difference between
shared knowledge about initial situation and goals,
compared to shared knowledge about operators (hypotheses
4). Hypotheses 2 and 3 were tested by post hoc tests
(Scheffé).
The first hypothesis was tested via a linear contrast of
condition (No SK), in contrast to the average of conditions
SK (IS+G), SK (O) and SK (IS+G+O). As expected,
solution quality was poorer when shared knowledge was
missing, compared to conditions SK (IS+G), SK (O) and SK
(IS+G+O), which had different components of shared

1336

knowledge (t(28) = 3.65, p < .05). Concerning the relative
effectiveness of shared knowledge about IS+G (hypotheses
4), compared to shared knowledge about O, the former lead
to significantly better solutions than the latter
(t(28) = 2.20, p < .05). Hypothesis 2, stating better results
with shared knowledge about IS+G+O, compared to shared
knowledge about IS+G alone, was refuted. The same is true
for hypothesis 3, stating better results with shared
knowledge about IS+G+O, compared to shared knowledge
about O alone, although means pointed towards the
expected direction. All these analyses were computed for
the correct answers.
Only a few false solution features were noted on the
whiteboards, without significant differences between
experimental conditions (F(3,28) = 1.60, p > .05). The number
of irrelevant features was also unaffected by the amount of
prior shared knowledge (F(3,28) < 1).
Subjects needed significantly more time to read and learn
information about operators (M = 2420 m/sec, SD = 618),
than those about the initial situation and goals (M = 2025
m/sec, SD = 632; F(1,56) = 6.61, p < .05). There were no
differences between the experimental conditions (F(3,56) < 1).

Discussion
Concerning knowledge acquisition we assumed that the
interaction during the design task would lead to the
construction of shared knowledge. As results showed,
participants in fact acquired shared knowledge even if the
amount was smaller than it could have been. This result can
be conceived as a first indicator for the importance of shared
knowledge as it was acquired even though participants were
not instructed to do so and testing was unexpected.
Furthermore, most of this shared knowledge elements were
correct, so that they can really help participants to construct
a common representation of the task and the solution. In
contrast to other studies (Fischer & Mandl, 2000; Jeong &
Chi, 2000) we did not have problems in determining how
this shared knowledge came about, as participants had no
common learning or working material, so that the only way
this could have happened is through co-construction. We
also could be sure, that this shared knowledge did not exist
prior to collaboration as the company expert’s information
was fictitious and knowledge in the domain of online-shops
was controlled for.
Concerning the effectiveness, shared knowledge prior to
collaboration leads to better solutions in net-based
collaboration than working together without shared
knowledge. Overall, solution quality was higher if there was
shared knowledge (as in conditions IS+G, O and IS+G+O)
than if shared knowledge was lacking, as in condition No
SK. Although this general benefit of shared knowledge
could be demonstrated, certain kinds of shared knowledge
were more helpful in our task than others. Shared
knowledge about initial situation and goals seemed to be
more effective than shared operators, since the solution
quality did not improve when shared operators were added
in condition SK (IS+G+O). This result contradicted the
hypothesis that sharing information about both components

of shared knowledge, initial situation and goals on the one
hand, and operators on the other, is most effective. In the
present study, sharing initial situation and goals alone, was
as effective as additionally sharing operators. Apparently,
sharing operators did not seem to have a facilitating effect
on collaborative problem solving. Although the comparison
between conditions SK (IS+G+O) and SK (O) lacked
statistical significance, means were in line with the
assumption that sharing operators is not very effective in a
task like our experimental one. This interpretation is
strengthened by the results of directly comparing the
effectiveness of shared knowledge about the initial situation
and goals, with that about the operators. Shared knowledge
about IS+G clearly led to better performance than sharing
operators.
But how can this effect be explained? First, the structure
of the operators is more complex than that of the initial
situation and goal elements. While the latter are simple
sentences, the operators always combine an ‘if’ part with a
‘then’ part. This means that the operators contain technical
solution features (in the ‘then’ part), in addition to
information about possible situations and goals of the
company (in the ‘if’ part). Besides their more complex
structure, operators contained more information, framed in
technical terms, that was new to the participants. Finally,
information about the company provides company experts
with a more coherent view of the company, whereas
operators, in comparison, form a rather loose collection of
rules for possible situations. We may assume, therefore, that
operators are more difficult to process than knowledge
elements about IS+G. This assumption is supported by the
higher reading and learning time for operators than for
IS+G. As a consequence, understanding and applying
operators should be more difficult for the company expert
than understanding information about IS+G is for the ITadvisor. From this, it follows quite naturally that sharing
knowledge about IS+G should be more effective than
sharing knowledge about operators.
Secondly, the structure of the operators has an impact on
the ease of integrating information about IS+G into the ‘if’
part of the operators. As an operator’s ‘if’ part already
contains information about possible states of the company’s
initial situation and goals, it should be easy for the advisor
to integrate the shared IS+G information into his or her
operators, since it is just an instantiation of what is already
provided in the operators’ ‘if’ part. Thus IS+G information,
either shared, or newly received during collaboration, does
not provide information completely new to the IT advisor.
In contrast, if the company expert receives operators, the
solution provided in their ‘then’ part is completely novel
information to him, and not just a specification of what he
already knows. To deduce the resulting solution feature
might therefore be more difficult. In addition, the advisor is
able to realize (when he or she receives the shared
knowledge elements) that the task-relevant information
from the company expert is just a specification of the
knowledge already provided by his or her operators. Asking

1337

the right question to gather the information needed should
therefore be easier for the advisor than for the company
expert. Having shared knowledge about operators does not
allow the company expert to infer other possible solution
features, since knowledge about the initial situation and
goals does not contain underspecified information about
possible solution features. So in contrast to the IT advisor, it
should be more difficult for the company expert to develop
a coherent view of the partner’s expertise and thus ask for
the appropriate information.
In conclusion, shared knowledge is an effective variable
facilitating collaborative problem solving. In the present
paper, we show that sharing knowledge about operators is
less effective than sharing the initial situation and goals, as
the latter is easier to understand and integrate, and
additionally, allows making assumptions about the partners’
expertise. But shared knowledge is not only a facilitator for
collaborative problem solving that can be provided
externally or already exists but is also co-constructed during
the problem solving process. Of course, it should also be
noted that on the basis of the single experiment reported
here, it is an open question whether the results hold for other
problems and materials as well. Furthermore, the problem
reported here is a well-defined one with a clear solution.
Concerning ill-defined problems it can be assumed that the
positive effect of shared knowledge about IS+G is reduced.
In fact, operators will always be more complex, because per
definition they consist of an ‘if’ and a ‘then’ part. What is
said about the ease of integrating the IS+G information
compared to integrating operators and inferring the partner’s
knowledge will also hold true for ill-defined problems. But
it is questionable whether these factors will be as helpful in
finding a solution because in ill-defined problems several
solutions are possible. So, having all information to
integrate operators and IS+G information does not
unambiguously allow to deduce all solution features.
Therefore, we assume that sharing knowledge about IS+G is
still effective, given the structural differences explained
above, but that this effect is less strong.

Acknowledgements
We thank the Deutsche Forschungsgemeinschaft for funding
the work of the first author (DFG, Virtual Graduate
Program). We also thank Dietmar Janetzko for his helpful
comments on an earlier draft of this paper and Kristen
Drake for her language assistance.

References
Cannon-Bowers, J. A., Salas, E., & Converse, S. (1993).
Shared mental models in expert team decision making. In
Castellan, J. Jr. (Ed.), Individual and group decision
making. Current issues. Hillsdale, NJ: Lawrence Erlbaum.
Clark, H. H., & Brennan, S. E. (1991). Grounding in
Communication. In L. B. Resnick, J. M. Levin, & S. D.
Teasley (Eds.), Perspectives on socially shared cognition.
Washington: American Psychological Ass.

Fischer, F., & Mandl. H. (2000). The construction of shared
knowledge in face-to-face and computer-mediated
cooperation. Paper presented at the 81th Annual Meeting
of the American Educational Research Association
(AERA).
Hinsz, V. B., Tindale, R. S., & Vollrath, D. A. (1997). The
emerging conceptualization of groups as information
processors. Psychological Bulletin, 121(1), 43-64.
Jeong, H. & Chi, M. T. H. (2000). Does collaborative
learning lead to the construction of common knowledge?
In Proceedings of the Twenty-second Annual Conference
of the Cognitive Science Society. Hillsdale, NJ: Erlbaum.
Moreland, R. L., Argote, L., & Krishnan, R. (1996).
Socially shared cognition at work. Transactive memory
and group performance. In Nye, J. L., & Brower, A. M.
(Eds.), What's social about social cognition? Thousand
Oaks: SAGE.
Newell, A., & Simon, H. (1972). Human problem solving.
Englewoods Cliffs, NJ: Prentice-Hall.
Pfister, H.-R., Wessner, M., Holmer, T., & Steinmetz, R.
(1999). Negotiating about shared knowledge in a
cooperative learning envirnonment. In Proceedings of the
Third Confernce on Computer Support for Collaborative
Learning. California: Stanford University.
Roschelle, J., & Teasley, S. D. (1995). The construction of
shared knowledge in collaborative problem solving. In C.
O'Malley (Ed.), Computer Supported Collaborative
Learning (pp. 69-97). Berlin: Springer.
Rouse, W. B., Cannon-Bowers, J. A., & Salas, E. (1992).
The role of mental models in team performance in
complex systems. IEEE Transactions On Systems, Man,
And Cybernetics, 22(6), 1296-1308.
Smith, J. B. (1994). Collective intelligence in computerbased collaboration. Hillsdale, NJ: Lawrence Erlbaum.
Smith, G. F., & Browne, G. J. (1993). Conceptual
foundations of design problem solving. IEEE
Transactions On Systems, Man, and Cybernetics, 33(5),
1209-1219.
Stasser, G. & Titus, W. (1985). Pooling of unshared
information in group decision making: Biased information
sampling during discussion. Journal of Personality and
Social Psychology, 48, 1467-1478.
Stasser, G., Titus, W. (1987). Effects of information load
and percentage of shared information on the
dissemination of unshared information during group
discussion. Journal of Personality and Social Psychology,
53, 81-93.
Strube, G., Garg, K., & Wittstruck, B. (2002). Interfaces to
expert knowledge: Modelling communication of
knowledge in multi-expert teams. International
Conference on Cognitive Modeling (ICCM-2003), 303304.
Waern, Y. (1992). Modelling group problem solving.
Zeitschrift für Psychologie, 200, 157-174.
Wegner, D. M. (1987). Transactive memory: A
contemporary analysis of the group mind. In B. Mullen &
G. R. Goethals (Eds.), Theories of group behavior. New
York: Springer.

1338

