UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
Reflective Intentions: Philosophical Concepts of Intentionality
Permalink
https://escholarship.org/uc/item/8bh714c3
Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 36(36)
Author
Tobia, Kevin Patrick
Publication Date
2014-01-01
Peer reviewed
 eScholarship.org                                    Powered by the California Digital Library
                                                                     University of California

       Towards Understanding Expert Coding of Student Disengagement in Online
                                                             Learning
                                          Luc Paquette (paquette@tc.columbia.edu)
                                                Department of Human Development,
                                   Teachers College, Columbia University, New York, NY, 10027
                                    Adriana M.J.A. de Carvalho (adrianac@cs.cmu.edu)
                                               Human-Computer Interaction Institute,
                                         Carnegie Mellon University, Pittsburgh, PA, 15213
                                    Ryan S. Baker (baker2@exchange.tc.columbia.edu)
                                                Department of Human Development,
                                   Teachers College, Columbia University, New York, NY, 10027
                            Abstract                                 Heffernan 2006b) and understanding the relationship
                                                                     between gaming and other constructs, but they do not
   Gaming the system, a behavior where students disengage
   from a learning environment and attempt to succeed by             implement a deep understanding of the construct of gaming
   exploiting properties of the system, has been shown to be         the system and of the context of the student's actions as
   associated with lower learning. Machine learned and               experts do when coding gaming behaviors.
   knowledge engineered models have been created to identify            In particular, instead of studying how experts code
   gaming behaviors, but few efforts have been made to               gaming behaviors, knowledge engineered models have
   precisely identify how experts code gaming behaviors. In this     typically implemented simple versions of two types of
   paper, we used cognitive task analysis to elicit knowledge
   about how experts code students as gaming or not in
                                                                     behaviors related to gaming (Baker et al. 2008), help abuse
   Cognitive Tutor Algebra. We show how building a cognitive         (Aleven et al. 2006) and systematic guessing. Help abuse
   model of this process gave us insights about the behaviors        has mainly been modeled using behaviors that include
   gaming is composed of.                                            copying the answer from a hint (Gong et al. 2010; Johns, &
   Keywords: Gaming the system, Cognitive Tutor, cognitive
                                                                     Woolf 2006; Muldner et al. 2011) and repeated help
   modeling, expert coding.                                          requests (Beal, Qu, & Lee 2006; Walonoski, & Heffernan
                                                                     2006a), but few efforts have been made to understand how
                         Introduction                                expert coders determine when those behaviors are instances
                                                                     of gaming. Struggling students will often look at multiple
In recent years, there has been increasing awareness that
                                                                     help messages and might sometime copy answers from hints
students often disengage from interactive environments by
                                                                     as part of their learning process. As we will discuss, expert
"gaming the system", defined as "attempting to succeed in
                                                                     coders rely on the context in which those behaviors take
an educational environment by exploiting properties of the
                                                                     place to determine if the student is gaming or not.
system rather than by learning the material and trying to use
                                                                         Systematic guessing is usually defined as quickly
that knowledge to answer correctly" (Baker et al. 2008).
                                                                     answering after errors (Beal, Qu, & Lee 2006; Gong et al.
Gaming the system has been studied in multiple learning
                                                                     2010; Johns, & Woolf 2006; Muldner et al. 2011) and
systems (Baker et al. 2008; Baker et al. 2010; Baker,
                                                                     making successive errors (Walonoski, & Heffernan 2006a).
Mitrovic, & Mathews 2010; Beal, Qu, & Lee 2006; Johns &
                                                                     Similarly to help abuse, many instances of those behaviors
Woolf 2006; Muldner et al. 2011; Walonoski & Heffernan
                                                                     can be associated with normal use of the learning
2006a) and has been shown to be related to poorer learning
                                                                     environment. For example some minor errors can be very
outcomes (Cocea, Hershkovitz, & Baker 2009; Fancsali
                                                                     quickly corrected, a behavior that looks similar to guessing.
2013; Pardos et al. 2013), boredom (Baker et al. 2010), and
                                                                     In those situations, expert coders will once again look at the
poorer long-term academic success (San Pedro et al. 2013).
                                                                     context in which the actions were executed in order to
   Models of gaming the system have been created using
                                                                     determine if they are systematic guesses or not.
both knowledge engineering (Aleven et al. 2006; Beal, Qu,
                                                                        The machine learning approach, on the other hand,
& Lee 2006; Gong et al. 2010; Johns, & Woolf 2006;
                                                                     captures part of the context of the student's gaming
Muldner et al. 2011; Walonoski and Heffernan 2006a) and
                                                                     behaviors, but it is not easy to fully understand what context
machine learning (Baker et al. 2008; Baker, Mitrovic, &
                                                                     the models capture and to evaluate whether it corresponds to
Mathews 2010; Walonoski, & Heffernan 2006a)
                                                                     expert judgments. In other words, machine learning often
approaches. Both approaches have been successful at
                                                                     makes the same predictions as experts, but may be doing so
allowing educational systems to intervene when students are
                                                                     in different ways.
gaming the system (Arroyo et al. 2007; Walonoski &
                                                                 1126

   Studying the context used by experts when coding the
student's gaming behaviors would be a potentially valuable
step towards getting a deeper understanding of this construct
and modeling it better, whether using machine learning,
knowledge engineering or both. To achieve this, we used
cognitive task analysis (Cooke 1994; Clark et al. 2008) to
elicit the expert's process of coding gaming behaviors using
text replays from Cognitive Tutor Algebra (Koedinger, &
Corbett 2006). Using the knowledge we acquired, we built a
cognitive model of how an expert codes gaming behaviors
and validated it against the expert's judgment.
                           Method
                                                                           Figure 1: The last 2 actions of a 5-action text replay clip.
Data
                                                                          To elicit knowledge about the expert's process of coding
In order to study how experts code gaming behaviors, we
                                                                       gaming behaviors using text replays, we used a cognitive
used data obtained from 59 students using the Cognitive
                                                                       task analysis (Cooke 1994; Clark et al. 2008) approach in
Tutor Algebra system during an entire school year as part of
                                                                       which knowledge was elicited through observations and
their regular mathematics curriculum. The Cognitive Tutor
                                                                       interviews. The first author acted as elicitor and the second
environment offers mathematical problems broken down
                                                                       author was the domain expert. The second author, to the
into the steps of the process used to solve the problem. As
                                                                       best of our knowledge, has conducted more text replay
the student works through the problem, a cognitive model of
                                                                       coding of student behavior in intelligent tutoring systems
the task assesses whether the student's answers map to a
                                                                       than anyone else in the world, has conducted text replays for
correct step. Cognitive Tutors also offer multi-step hints. A
                                                                       a range of problems and learning environments, and has
student who is struggling can ask for help at anytime and
                                                                       trained others in the method.
the system will provide increasingly specific hints about
                                                                          We studied how the expert coded gaming behaviors when
what should be done next.
                                                                       using text replays from Cognitive Tutor Algebra. To elicit
   Data from 12 tutor lessons was obtained and segmented in
                                                                       the expert's knowledge, an "active participation" (Cooke
sequences of 5 actions, called clips, illustrating the student's
                                                                       1994; Meyer 1992) approach was used to collect
behavior. A total of 10,397 clips from this dataset were
                                                                       preliminary knowledge of the task. During those sessions,
randomly selected; the chance of a clip being selected was
                                                                       the expert explained to the elicitor how to identify gaming
weighted for each lesson according to the total number of
                                                                       behavior using text replays. The elicitor coded a few clips
clips in that lesson. Those clips were previously coded by an
                                                                       while thinking aloud as the expert commented and corrected
expert in order to develop machine-learned gaming models
                                                                       his thought process. This allowed the elicitor to acquire a
(e.g. Baker, & de Carvalho 2008), and contains 708
                                                                       good understanding of the process, enabling him to better
examples of gaming the system and 9,689 examples of
                                                                       communicate with the expert.
behaviors that were not coded as gaming.
                                                                          Once the elicitor had understood the process of coding
                                                                       clips, additional observations sessions were conducted in
Studying expert coding                                                 which the expert coded clips while thinking aloud (Van
In order to code clips of student behaviors as gaming the              Someren et al. 1994) with minimal inputs from the elicitor.
system or not, experts can use text replays (Baker, Corbett,           Using this method, we were able to observe and collect
& Wagner 2006; Baker, & de Carvalho 2008), clips of                    information about how the expert codes behaviors without
student behaviors in a textual form. A clip of a pre-selected          biasing her thought process by asking questions about it.
duration (in terms of time or length) is shown in a textual            Those sessions were recorded and were used by the elicitor
format giving information about the actions and their                  to elaborate an initial version of the cognitive model.
context. In the example shown in figure 1, the expert sees                This initial version of the model was implemented and
each action's time (relative to the first action in the clip), the     executed on a subset of our data. The complete set of 10,397
problem context, the input entered, the relevant skill                 clips was separated in a training and a test set. The training
(production) and how the system assessed the action (right,            set was composed of 75% of the clips coded as gaming and
wrong, a help request or a "bug"). The expert can then                 75% of the clips coded as non-gaming, and the test set was
choose whether the behavior is gaming or not, or indicate              composed of the remaining 25%. As such, the training set
that something has gone wrong in the text replay software or           contained 531 gaming and 7,267 non-gaming clips and the
logs, making the clip uncodeable. When coding gaming                   test set contained 177 gaming and 2,422 non-gaming clips.
behaviors using text replays, experts typically achieve an             Clips for each subset were chosen at random.
inter-rater reliability, measured using Cohen's Kappa,                    Separating the dataset into two subsets is essential to
around 0.60 (Baker, Corbett, & Wagner 2006).                           developing and validating a model. In order to elaborate the
                                                                       model, the knowledge elicitor and the expert need to look at
                                                                   1127

and analyze clips of student behaviors. Having two subsets          entered, the system provides the student with a message
allows them to look at a restricted part of the data (the           explaining the error.
training set) while the rest of the data (the test set) remains        Pauses before step attempts indicate whether the student
unseen. The unseen data can then be used to validate the            took the time to think about the step before attempting it or
performance of the model elaborated on the training set.            if it is more likely that he/she was guessing the answer. In
This ensures that the model is not overly specific to the data      cases where this pause is short, it is also possible that the
that was used to train it.                                          student planned one step ahead. In those cases, the previous
   An initial model was developed and applied to the                step attempt should have been right and should have a long
training set. Then, the clips that were misclassified by the        pause before it. When a step is assessed as incorrect, a pause
model were collected. Additional sessions were conducted            after that step indicates that the student is thinking about
with the expert to examine those specific clips. The expert         his/her mistake. A bug message for an incorrect step gives
coded them while thinking aloud and the knowledge elicitor          additional information that can be used to interpret the
asked questions to precisely identify what allowed the              student's action. Since bugs are expected mistakes, a long
expert to determine whether a clip was considered as                pause before the bug is usually an indicator of an
gaming or not. This allowed us to formalize information that        unsuccessful but sincere attempt to solve the problem,
might have been omitted by the expert while thinking aloud.         whereas a short pause is usually an indicator of students
These sessions were also recorded.                                  trying to guess the answer by entering values taken from the
   The knowledge acquired from those sessions was                   problem statement. In addition, bugs are followed by an
included in a new version of the model that was once again          error message and thus, as for help requests, a long pause
executed on the training set. This process was repeated             after a bug is an indicator that the student read the message
multiple times to iteratively improve our model by                  provided by the system.
identifying situations where the model was unable to                   In addition to interpreting the pauses before and after
correctly classify gaming behaviors (false negatives) and to        actions, the expert also identifies relevant constituents in the
make the model more stringent to prevent false positives            answers inputted by the student. We identified four such
(non-gaming behaviors classified as gaming by the model).           constituents. First, the student might reuse the same answer
                                                                    multiple times in different contexts of the user interface. For
                           Model                                    example, the student might input the answer 5 in every text
The cognitive process of an expert judging whether a clip of        field. Second, the student might stop working on a part of
actions is an example of gaming the system can be separated         the problem that he/she doesn't know how to solve and start
in two main parts: interpreting the student's actions and           working on a different part of the problem ([switched
identifying patterns of gaming. Although those two parts are        context before correct] in table 1). For example, attempting
usually done simultaneously by the expert, the cognitive            to answer part of the problem, getting an incorrect answer
model can do them separately without hindering the process.         and then asking for help on a different part of the problem.
                                                                    Third, the student might input an answer that is similar to
Interpreting the student's actions                                  his/her previous input. For example, entering the sequence
                                                                    of answers 10, 20, 30, etc. Finally, the student might repeat
The first thing the expert does when looking at a text replay       the exact same step. For example, entering the same answer
is to look at the pauses between each action to build a likely      in the same text field.
interpretation of the student's mental process. Each pauses            Two main elements of the process of interpreting the
before or after an action is an opportunity for the student to      student's actions remain ambiguous and difficult to
think about the problem he/she is currently solving. Table 1        accurately represent in the current version of our model: the
provides a list and a description of constituents of the            time thresholds used to determine whether a pause is short
students' behaviors that were identified during the                 or long and deciding whether two answers are similar. The
knowledge elicitation process with the expert.                      time thresholds for pauses were defined using numbers that
   In Cognitive Tutor Algebra, students can execute two             were often used by the expert as rules of thumb (table 1). An
types of actions: help requests and step attempts. Help can         alternate approach would be to try to determine time
be requested more than once consecutively to obtain                 thresholds empirically (cf. Baker et al. 2011).
increasingly specific help messages until the tutor provides           To decide whether two answers are similar, we computed
the answer (within a “bottom-out hint”). The length of the          the Levenshtein distance (Levenshtein 1966) between the
pause before an help request indicates whether the student          answer strings. This distance is defined by the number of
took the time to think about the next step before asking for        edits (deletion, insertion or substitution of individual
help. The length of the pause after receiving help indicates        symbols) required to transform an answer and make it
whether the student took the time to read the help message,         identical to the other one. Answers with a distance of 1 or 2
was scanning the help message for specific information or           were considered as being similar. This approach worked
was searching for a bottom-out hint.                                well for numerical answers, but had issues with other types
   Step attempts can be assessed by the system as being             of answers. For example, it does not allow the detection of
correct (right) or incorrect (wrong or bug). Bugs are               semantic similarities between text inputs such as seconds,
incorrect answers expected by the system. When a bug is
                                                                1128

minutes and hours. It also has issues dealing with equations.               student's behavior that the expert pays attention to, we
For this type of answer, "425x+150" will be considered                      implemented them in our model. Our model simply iterates
similar to "425x-150", but "150x-425" will not.                             through all of the student's actions and label each of them
   Once we had identified the different constituents of the                 using the rules defined in table 1.
            Table 1 : List of the interpretations considered by the coder. Time thresholds are selected by the expert coder.
                      Identifier                                                         Description
      [did not think before help request]       Pause smaller or equal to 5 seconds before a help request
         [thought before help request]          Pause greater or equal to 6 seconds before a help request
               [read help messages]             Pause greater or equal to 9 seconds per help message after a help request
            [scanning help messages]            Pause between 4 and 8 seconds per help message after a help request
        [searching for bottom-out hint]         Pause smaller or equal to 3 seconds per help message after a help request
             [thought before attempt]           Pause greater or equal to 6 seconds before step attempt
                  [planned ahead]               Last action was a correct step attempt with a pause greater or equal to 11 seconds
                       [guess]                  Pause smaller or equal to 5 seconds before step attempt
      [unsuccessful but sincere attempt]        Pause greater than or equal to 6 seconds before a bug
     [guessing with values from problem]        Pause smaller than or equal to 5 seconds before a bug
               [read error message]             Pause greater than or equal to 9 seconds after a bug
          [did not read error message]          Pause smaller than or equal to 8 seconds after a bug
               [thought about error]            Pause greater than or equal to 6 seconds after an incorrect step attempt
          [same answer/diff. context]           Answer was the same as the previous action, but in a different context
                  [similar answer]              Answer was similar to the previous action (Levenshtein distance of 1 or 2)
                                                Context of the current action is not the same as the context for the previous (incorrect)
        [switched context before right]
                                                action (referred to as “soft underbelly” in Baker, Mitrovic, & Mathews 2010)
                   [same context]               Context of the current action is the same as the previous action
                   [repeated step]              Answer and context are the same as the previous action
     [diff. answer AND/OR diff. context]        Answer or context is not the same as the previous action
    Table 2 : Action patterns considered gaming the system. Constituents associated with each action are between brackets.
                                                                                     Training                              Test
  Pattern
                                                                             TP         FP        Kappa         TP          FP     Kappa
                                                                              92        66                      47          20
  incorrect → [guess] & [same answer/diff. context] & incorrect                                    0.243                           0.219
                                                                          17.33%      0.91%                  26.55%       0.83%
  incorrect → [similar answer] [same context] & incorrect →                  112       173                      25          62
                                                                                                   0.238                           0.151
  [similar answer] & [same context] & attempt                             21.09%      2.38%                  14.12%       2.56%
  incorrect → [similar answer] & incorrect → [same answer/diff.               33        19                      10           6
                                                                                                   0.102                           0.093
  context] & attempt                                                       6.21%      0.26%                   5.65%       0.25%
  [guess] & incorrect → [guess] & [diff. answer AND/OR diff.
                                                                              55        92                      22          33
  context] & incorrect → [guess] & [diff. answer AND/OR diff.                                      0.137                           0.163
                                                                          10.36%      1.27%                  12.43%       1.36%
  context & attempt
                                                                             118       204                      33          70
  incorrect → [similar answer] & incorrect → [guess] & attempt                                     0.237                           0.195
                                                                          22.22%      2.81%                  18.64%       2.89%
  help & [searching for bottom-out hint] → incorrect → [similar               23        52                      11          24
                                                                                                   0.060                           0.083
  answer] & incorrect                                                      4.33%      0.72%                   6.21%       0.99%
  incorrect → [same answer/diff. context] & incorrect →                       49        72                      24          19
                                                                                                   0.201                           0.197
  [switched context before correct] & attempt/help                         9.23%      0.99%                  13.56%       0.78%
                                                                              20        16                       9           5
  bug → [same answer/diff. context] & correct → bug                                                0.062                           0.085
                                                                           3.77%      0.22%                   5.08%       0.21%
  incorrect → [similar answer] & incorrect → [switched context                50        52                      16          16
                                                                                                   0.146                           0.135
  before correct] & incorrect                                              9.42%      0.72%                   9.04%       0.66%
  incorrect → [switched context before correct] & incorrect →                 58        55                      20          17
                                                                                                   0.151                           0.167
  [similar answer] & incorrect                                            10.92%      0.76%                  11.30%       0.70%
  incorrect → [similar answer] & incorrect → [did not think
                                                                              47        57                      10          24
  before help] & help → incorrect (with first or second answer                                     0.129                           0.074
                                                                           8.85%      0.78%                   5.65%       0.99%
  similar to the last one)
  help → incorrect → incorrect → incorrect (with at least one                 45        83                      15          32
                                                                                                   0.113                           0.108
  similar answer between steps)                                            8.47%      1.14%                   8.47%       1.32%
  incorrect → incorrect → incorrect → [did not think before                   83       154                      23          60
                                                                                                   0.182                           0.140
  help request] & help (at least one similar answer between steps)        15.63%      2.12%                  12.99%       2.48%
                                                                      1129

Identifying patterns of gaming the system                           the training set. Although some patterns detect a higher
Once the expert has interpreted the student's actions, she          number of FP than TP, each pattern detects a higher
uses the interpretation's constituents to judge whether the         percentage of the TP than of the FP (as there are many more
student is gaming the system. Although some constituents,           non-gaming clips than gaming clips in this dataset). Some of
such as searching for bottom-out hints and guessing the             the patterns with a low number of TP were included in the
answer, are usually associated with gaming and others, such         model as they still contributed to the performance of the
as getting the right answer, are usually associated with non-       model when all patterns were combined. This is usually an
gaming behaviors, looking at each constituent individually          indicator that they capture a different subset of gaming
is not sufficient to code the student's behavior. The expert        behaviors than the other patterns.
instead tries to find a pattern of actions and constituents that       When the complete model was applied to the training set,
acts as strong evidence that the student is gaming.                 it accurately detected 340 (64.03%) gaming clips,
   Some patterns might involve sequences of incorrect               misdiagnosed 551 (7.07%) non-gaming clips and obtained a
actions -- for example, reusing the same number in multiple         Kappa of 0.430. For the test set, the model accurately
different contexts of the interface to try to guess where the       detected 93 (52.54%) gaming clips, misdiagnosed 210
number goes. This can also be combined with bottom-out              (8.67%) non-gaming clips and obtained a Kappa of 0.330.
hints -- for example, searching for a bottom-out hint, getting         The performance of our cognitive model was similar to
the wrong answer and then trying a similar answer.                  the best machine learned model of gaming that was
   It is also possible for gaming patterns to include               developed for the same dataset (Baker, & de Carvalho
constituents that are usually associated to non-gaming              2008). The machine learned model obtained a Kappa of 0.40
behaviors. For example, getting the right answers is not            when the model was trained and tested on the same dataset.
evidence of gaming, but a student who enters a bug, fixes it        This is a little below the Kappa of 0.430 that was achieved
by trying the same answer in a different context, and enters        by our model on the training set. To further validate our
a second bug, may be considered as gaming. In this pattern,         model, we applied it to an unseen test set and obtained a
the first action might have been a small mistake that was           Kappa of 0.330. Although performance decreased, the
easily corrected by entering the same answer in a different         Kappa we obtained indicates that an important part of our
context, but the second bug makes it a strong indicator that        model generalizes to new data. In as yet unpublished work,
the correct step was a guess rather than an intentional             the modeling approach used by Baker, & de Carvalho
correction and that the student is trying to game the system.       (2008) achieved a Kappa of 0.24 when applied to held-out
   During the knowledge elicitation process, we identified          data, suggesting that our cognitive model is mildly better
13 patterns (table 2) that the expert considers sufficient to       than the one from Baker, & de Carvalho (2008).
code a clip as an example of gaming the system. Additional
patterns were developed, but were not included in the final                        Discussion and conclusion
model if: 1) they were only found in a small number of              In this paper, we used cognitive task analysis (Cooke 1994;
gaming clips, 2) they had too much overlap with other               Clark et al. 2008) to understand how an expert codes
patterns or 3) they produced too many false positives.              sequences of actions (clips) in an interactive learning
   Our final model uses a sliding window approach iterating         environment as gaming the system or not. This allowed us
over the student's actions to identify gaming clips. Every          to acquire a better understanding of what experts include in
sequence of 2, 3 or 4 actions in a clip are examined to             their definition of this disengaged behavior. We used the
determine if they match any of the 13 patterns from table 2.        knowledge elicited from the expert to implement a cognitive
If at least one such match is found, the clip is classified as      model of the process of coding gaming behaviors using text
gaming, otherwise it is classified as non-gaming.                   replays from Cognitive Tutor Algebra.
                                                                       The patterns that we identified when building our model
                         Validation                                 provided insights about what behaviors experts consider as
The performance of our model was assessed using Cohen's             gaming the system. Gaming has been defined by two main
Kappa (Cohen 1960), a metric that assesses the degree to            types of behaviors: systematic guessing and help abuse. In
which the model is better than chance at identifying gaming         previous knowledge engineered models (Beal, Qu, & Lee
clips. A Kappa of 0 indicates that the model performs at            2006; Gong et al. 2010; Johns, & Woolf 2006; Muldner et
chance and a Kappa of 1 indicates that it performs perfectly.       al. 2011), systematic guessing has mainly been defined as
   We validated our model by computing its performance for          short pauses between step attempts. Although this behavior
both the complete model composed of the 13 patterns and             was included in our model, we also found that entering the
sub-models that matched only one pattern. Table 2 lists the         same answer in multiple contexts and entering similar
performance for each patterns by indicating their Kappa,            answers are two key aspects of the students' guessing
how many clips containing this pattern had been coded by            behaviors that have often been overlooked.
the expert as gaming (true positives or TP) and how many               Surprisingly few of our gaming patterns included
had been coded as non-gaming (false positives or FP).               searching for bottom-out hints. As our model currently
   Each individual pattern has an above chance performance          correctly classifies 61.15% of the instances of gaming from
at detecting gaming clips, with a Kappa of 0.060 or better on       our dataset, it is possible that additional gaming behaviors
                                                                1130

that include searching for bottom-out hints could be               Clark, R. E., Feldon, D., van Merriënboer, J., Yates, K.,
discovered in the future. Other occurrences of help requests         Early, S. (2008). Cognitive Task Analysis. In J. M.
we observed in our patterns included quickly asking for help         Spector, M. D. Merrill, J. J. G. van Merriënboer, & M. P.
without thinking about the step and entering multiple                Driscoll (Eds.), Handbook of Research on Educational
incorrect answers despite asking for help.                           Communications and Technology (3rd ed.), 575-593.
   Our current model was built using data from only one            Cocea, M., Hershkovitz, A., Baker, R. S. J. d. (2009). The
system (Cognitive Tutor Algebra) and the insights of only            Impact of Off-Task and Gaming Behaviors on Learning:
one expert. As such, it will be important to study whether           Immediate or Aggregate? Proc of AIED 2009, 507-514.
different experts consider different behaviors to be gaming        Cohen, J. (1960). A Coefficient of Agreement for Nominal
the system and whether our model is effective when applied           Scales. Educational and Psychological Measurement, 20
to data from other systems. Examining the performance of             (1), 37-46.
our complete model and of individual patterns on those new         Cooke, N. J. (1994). Varieties of Knowledge Elicitation
systems would provide us with interesting insights about             Techniques. Int'l Journal of Human-Computer Studies,
differences in how students game in different systems.               41, 801-849.
Similarly, our model could be used as a tool for studying the      Fancsali, S. E. (2013). Data-Driven Causal Modeling of
cultural aspects of gaming the system by comparing the               "Gaming the System" and Off-Task Behavior in
frequency of each pattern of gaming in different cultures.           Cognitive Tutor Algebra. NIPS Workshop on Data Driven
                                                                     Education.
                      Acknowledgments                              Gong, Y., Beck, J., Heffernan, N. T., Forbes-Summers, E.
This research was supported by a Fonds de recherche du               (2010). The Fine-Grained Impact of Gaming (?) on
Québec - Nature et technologies post-doctoral fellowship             Learning. Proc of ITS 2010, 194-203.
and by National Science Foundation grant #SBE-0836012.             Johns, J., Woolf, B. (2006). A Dynamic Mixture Model to
                                                                     Detect Student Motivation and Proficiency. Proc of AAAI-
                                                                     06, 163-168.
                          References                               Koedinger, K. R., Corbett, A. T. (2006). Cognitive Tutors:
Aleven, V., McLaren, B. M., Roll, I., Koedinger, K. R.               Technology Bringing Learning Sciences to the
   (2006). Toward Meta-Cognitive Tutoring: A Model of                Classroom. In R. K. Sawyer (Ed.), The Cambridge
   Help Seeking with a Cognitive Tutor. Int'l Journal of             Handbook of the Learning Sciences, 61-77.
   Artificial Intelligence in Eduaction, 16, 101-130.              Levenshtein, A. (1966). Binary Codes Capable of
Arroyo, I., et al. (2007). Repairing Disengagement with              Correcting Deletions, Insertions and Reversals. Soviet
   Non-Invasive Interventions. Proc of AIED 2007, 195-202.           Physics Doklady, 10 (8), 707-710.
Baker, R. S. J. d., Corbett, A. T., Roll, I., Koedinger, K. R.     Meyer, M. A. (1992). How to Apply the Anthropological
   (2008). Developing a Generalizable Detector of When               Technique of Participant Observation to Knowledge
   Students Game the System. User Modeling and User                  Acquisition for Expert Systems. IEEE Transactions on
   Adapted Interaction, 18, 287-314.                                 Systems, Man, and Cybernetics, 22, 983-991.
Baker, R. S. J. d., Corbett, A. T., Wagner, A. Z. (2006).          Muldner, K., Burleson, W., Van de Sande, B., VanLehn, K.
   Human Classification of Low-Fidelity Replays of Student           (2011). An Analysis of Students' Gaming Behaviors in an
   Actions. Proc of EDM Workshop at ITS 2006, 29-36.                 Intelligent Tutoring System: Predictors and Impact. User
Baker, R. S. J. d., D'Mello, S. K., Rodrigo, M. M. T.,               Modeling and User Adapted Interaction, 21, 99-135.
   Graesser, A. C. (2010). Better to Be Frustrated than            Pardos, Z. A., Baker, R. S. J. d., San Pedro, M. O. C. Z.,
   Bored: The Incidence, Persistence, and Impact of                  Gowda, S. M., Gowda, S. M. (2013). Affective States and
   Learners' Cognitive-Affective States During Interactions          State Tests: Investigating how Affect Throughout the
   with Three Different Computer-Based Learning                      School Year Predicts End of Year Learning Outcomes.
   Environments. Int'l Journal of Human-Computer Studies,            Proc of LAK 2013, 117-124.
   68, 223-241.                                                    San Pedro, M. O. Z., Baker, R. S. J. d., Bowers, A., J.,
Baker, R. S. J. d., de Carvalho, A. M. J. A. (2008). Labeling        Heffernan, N. T. (2013). Predicting College Enrolment
   Student Behavior Faster and More Precisely with Text              from Student Interaction with an Intelligent Tutoring
   Replays. Proc of EDM 2008, 38-47.                                 System in Middle School. Proc of EDM 2013, 177-184.
Baker, R. S. J. d., Gowda, S., Corbett, A. T. (2011).              Van Someren, M. W., Barnard, Y. F., Sandberg, J. A. C.
   Towards Predicting Future Transfer of Learning. Proc of           (1994). The Think Aloud Method: A Practical Guide to
   AIED 2011, 23-30.                                                 Modeling Cognitive Processes.
Baker, R. S. J. d., Mitrovic, A., Mathews, M. (2010).              Walonoski, J. A., Heffernan, N. T. (2006a). Detection and
   Detecting Gaming the System in Constraint-Based Tutors.           Analysis of Off-Task Gaming Behavior in Intelligent
   Proc of UMAP 2010, 267-278.                                       Tutoring Systems. Proc of ITS 2006, 382-391.
Beal, C. R., Qu, L., Lee, H. (2006). Classifying Learner           Walonoski, J. A., Heffernan, N. T. (2006b). Prevention of
   Engagement Through Intergration of Multiple Data                  Off-Task Gaming Behavior in Intelligent Tutoring
   Sources. Proc of AAAI-06, 2-8.                                    Systems. Proc of ITS 2006, 722-724.
                                                               1131

