Exploring Functions of Working Memory Related to Fluid Intelligence:
Coordination and Relational Integration
Joel E. Bateman (jbat2136@uni.sydney.edu.au)1
Damian P. Birney (damian.birney@sydney.edu.au)1
Vanessa Loh (vanessa.loh@sydney.edu.au)1
1

School of Psychology, University of Sydney
Sydney, NSW, 2006, Australia

Abstract

Two Functions of Working Memory

Two hypothesized functions of working memory –
coordination (ability to maintain unrelated storage loads during
processing) and integration (ability to integrate multiple
elements into a relation) – were explored and compared to fluid
intelligence. In Experiment 1, 130 participants completed a
modified Latin-Square Task (LST) which experimentally
added or reduced storage load. Results suggested that pure
integration (with no storage load) could predict Gf, but no
difference was found between coordination and integration.
Experiment 2 employed the Arithmetic Chain Task (ACT),
again with modifications to storage load. Results support
replication of LST findings, though a distinction was found
between coordination and integration when storage material
could not be easily rehearsed. Findings from both experiments
support a distinction between coordination and integration
tasks in understanding the WM-Gf association.
Keywords: working memory; fluid intelligence; relational integration

Introduction
Working memory (WM) has consistently been linked to fluid
intelligence (Gf), yet the intricacies underlying this
relationship are not fully understood. This is in part because
neither WM nor Gf reflect a single cognitive process. Rather,
WM is a complex system responsible for processing and
maintaining information, attention, and multi-tasking. Gf is
similarly multi-dimensional, variously reflecting reasoning
and the capacity to deal with novelty. Many WM tasks (such
as complex-span tasks; CSPANs) draw on coordination, in
that information from one aspect of the task must be
maintained in storage while performing a simultaneous but
unrelated processing task. Conversely, many prototypical Gf
tasks require relational integration (henceforth ‘integration’;
Halford, Wilson, & Philips, 1998). Integration entails the
ability to combine multiple representations and is critical to
reasoning. In this report, we argue that advances in
understanding the WM-Gf link have been slowed by the
overrepresentation of coordination in WM tasks, and the
failure to consider integration as a component of WM.
We aim to redress this using two experiments. In
Experiment 1, we modify the integration-based Latin-Square
Task (LST; Birney, Halford, & Andrews, 2006) by adding or
removing storage load. In Experiment 2, we investigate the
same processes in an arithmetic task (Oberauer, Demmrich,
Mayr, & Kliegl, 2001). We begin with an exposition of
coordination and integration.

Coordination WM tasks typically involve some combination
of processing and storage, reflecting the two components of
WM. Coordination can be defined as the ability to coordinate
stored elements with unrelated processing. CSPANs, such as
the operation span, are examples of coordination tasks,
because storage capacity is the primary outcome (e.g., the
number of words that can be recalled) and processing (e.g.,
verifying the veracity of a math operation) is included to fulfil
the simultaneous processing-storage conceptualization of
WM (Baddeley & Hitch, 1974). While a failure of either
component does not represent a failure of the other, if both
components are not given equal priority, the extent that
CSPAN measures WM is brought into question. However,
even when processing is ensured (e.g., with an 85% threshold
for operation verifications), the only measure indexing WM
is the recall. Because the processing is somewhat trivialized,
it tells us little about how processing ability influences
performance on WM tasks. This does not, however, take away
from the fact that coordination tasks are excellent for linking
WM and Gf (Ackerman, Beier, & Boyle, 2005).
Integration Process-oriented accounts of WM have led to the
development of tasks that measure the ability to integrate
representations into higher-order relational structures
(Oberauer Süß, Wilhelm, and Wittman, 2008). All processing
subtasks typically require some form of integration (e.g.,
integrating two digits to derive a sum), though some
researchers have attempted to provide formalized accounts of
processing tasks. Oberauer et al. (2008) employed the finding
squares task, where participants monitored a 10x10 grid
filled with 10 dots. Every few seconds, some dots would
change position. The task was to monitor the dots and
respond if a collective set of dots formed a square. Although
tasks such as these have no storage requirements, they are still
good predictors of Gf (Oberauer et al., 2008). This has led to
the suggestion that integration forms the core of WM
(Oberauer, Süß, Wilhelm, & Sander, 2007); and that rather
than a ‘storage capacity’ limiting WM, constraints are instead
dictated by the strength of bindings between integrated
representations.
Halford and colleagues provide an alternate processoriented account of WM limitations in terms of relational
complexity (Halford et al., 1998), that formalizes individual

1598

capacity for integration. WM is framed not as a limitation in
the number of elements, but by the complexity of relations
between elements to-be-integrated. Complexity metrics have
been shown to capture constraints in processing capacity
(Birney et al., 2006).
Aims There is evidence that both coordination and
integration can be implicated in the WM-Gf association.
However, it is difficult to directly compare these functions,
as they are typically operationalised in different tasks. The
current research aims to compare coordination and
integration within single tasks, experimentally.

Experiment 1
One way to explore coordination and integration within a task
is to consider a variant of a typical processing task, with
reduced or additional storage load requirements. If the
reduced storage load condition still associates with Gf, it
would suggest a role of pure integration within the WM-Gf
link, as only the processing remains. Conversely, if the
additional storage load condition associates with Gf, it would
suggest a role of coordination. This is the approach we used
in Experiment 1, employing the LST as a processing task.
The LST was designed following the principles of
relational complexity theory (Birney et al., 2006). The LST
presents participants with an incomplete matrix of 4x4 cells
with the governing rule that each row and column may
contain only one element from a set of 4 elements.
Complexity is manipulated by the number of rows and
columns that must be considered in order to deduce a target
cell (see Figure 1). In some items, participants must also
solve interim cells, using information from those cells to
solve the target. Thus, although the task is processingA. Binary Problem Square
Options
focused, there is some storage costs
associated
Principle:
Integration in awith
single holding
A
interim cell information. Birneycolumn.
et al. (2006) found that
Given A3 is a circle, C3 is a square,
complexity
captures 64% of variability
intheitem
B
and D3 is a cross,
target cell,difficulty,
B3,
a triangle.
while the number of interim cellsiscaptures
16%. Thus, 80%
C
C3(o), D3(+)) à B3(r)
of difficulty variance is from AND(A3(O),
identified
processing and
D
storage
demands.
1

2

3

4

B. Ternary Problem Square
Principle: Integration across a
single column and single row.

A
B

Given A2 is a triangle, D2 is a circle,
and C4 is a cross, the target cell, C2,
is a square.

C

AND(A2(r), D2(o), C4(+)) à C2(o)

D
1

2

3

4

C. Quaternary Problem Square
Principle: Integration across
multiple columns and rows.

A

Given A1 is a triangle, C3 is a
triangle, and D4 is a cross, the
target cell, D2 is a triangle
(because a triangle has to be in
row D somewhere, and this is the
only place it can be).

B
C
D

AND(A1(r), C3(r), D4(+)) à D2(r)

1

2

3

4

Because we were employing a variance-partitioning
approach, it was possible to more directly compare the
coordination condition with integration by varying whether
the additional storage was processing-contingent or not. By
partitioning out variance associated with the baseline task, we
could derive variance associated solely with a coordination
load and compare it to variance associated with an integration
load, that were equivalent in task format and (potentially)
difficulty. Thus, our four conditions for the LST were: basic,
reduced storage, additional storage (coordination), and
additional storage (integration); which were crossed with the
standard manipulations of complexity and steps.
We hypothesized that the reduced storage condition would
reduce the difficulty of the task, but maintain the association
with Gf, because pure integration was still required of the
baseline task. We also hypothesized that the additional
storage conditions would increase the difficulty of the task to
similar degrees, and each would represent a unique
contribution to predicting Gf, as they represent the two
functions of coordination and integration.

Method
Participants and Procedure In total 130 first-year students
(83 females) at the University of Sydney participated in
exchange for course credit. The mean age was 19.04 (SD =
1.6) years. Participants were tested in groups in 60m sessions.
Measures Three LST sets, each with 12 unique items equally
distributed across complexity (2/3/4) and steps (1/2), were
adapted from Birney and Bowman (2009). Thus, all sets
included an equal distribution of complexity and steps. The
basic set consisted of 12 standard items (as in Figure 1).
The dynamic-completion (DC) set consisted of 12 items
which allowed participants to insert interim solutions. Instead
of simply selecting an answer, participants could place shapes
into empty cells of the matrix, before placing a shape into the
target cell to indicate their overall response. In this way,
participants were able to work through the problem,
offloading storage demands associated with interim cells.
The final set was additional load, consisting of 12 items.
Participants were randomly allocated to coordination or
integration items for this set. The actual items were identical,
but the procedures were different.
For coordination items, there was a 5s memory phase
where participants viewed the matrix without the target
indicated. During this phase, two shape-filled clue cells were
coloured to indicate that they must be remembered. After this
phase and a 2000ms interlude, the typical test phase began
with the target indicated. After responding to the item, the
recall phase began. In this phase, there was first a five-second
downtime with a black screen stating to “recall the cells”.
After this, a blank probe matrix appeared and the participant
had to indicate the shapes and locations associated with the
two marked cells (thus requiring coordination of stored
elements and unrelated processing).

Figure 1. Example LST items

1599

Table 1. LST and APM Descriptives

For integration items, a similar procedure was employed
for coordination items except that the two marked cells
during the memory phase were removed during the test phase.
In this way, if the participants forgot the shapes in these cells,
they would not be able to solve the problem (thus requiring
integration of stored elements with related processing).
After the LST, participants completed a 20-item Raven’s
Advanced Progressive Matrices (Raven, 1941; APM; odd
items + items 34 and 36). The use of a single task does define
Gf narrowly, because we cannot be certain that correlations
between the LST and APM are due to an overlap in WM
functions or due to task-specific factors, such as modality.
However, there is a large comparative literature base to draw
on to understand implications of this limitation.

Results
Difficulty Effects Descriptive results are presented in Table
1. The overall LST-APM correlation was r = .47, p < .001,
replicating prior work (Birney et al., 2012). Using a repeated
measures ANCOVA, a complexity effect was investigated
with APM entered as a moderator (covariate). Consistent
with prior research (Birney & Bowman, 2009), complexity
was a significant predictor of performance (F2,256 = 94.73,
mse = 0.485, p < .001, partial-η2 = .425), but APM did not
moderate the effect, suggesting increases in complexity does
not result in increased demand on Gf-like resources.
A set (basic/DC/load) by complexity (2/3/4D) repeatedmeasures ANOVA was conducted to determine whether set
affected performance. There was a significant main effect of
set (F2,242 = 43.17, mse = 0.56, p < .001, partial-η2 = .26). As
hypothesized, DC items were significantly easier (F1,121 =
35.14, mse = 0.76, p < .001) and load items were significantly
more difficult (F1,121 = 14.66, mse = 1.48, p < .001). A
significant set-complexity interaction (F4,484 = 13.28, mse =
0.36, p < .001, partial-η2 = .10) suggests complexity
moderates the set effects. Simple-effect analyses suggest the
difference between conditions, particularly the DC condition
(DC vs basic x quadratic complexity effect: F1,121 = 4.69, p =
.03), is more pronounced for more complex items. Finally,
separate analyses suggest that integration (M=3.12) and
coordination (M=3.31) conditions were not significantly
different, F1,128 = 2.81, p = .10. Although this was as
hypothesized, there was a trend towards integration items
being more difficult.
The results of these tests indicate the LST sets were
performing as expected. That is, the DC condition was aiding
participants and the load conditions were burdening. The next
set of analyses sought to test the hypotheses on the links of
set to predicting Gf.
LST-Gf A series of multiple regressions were performed,
regressing APM on LST set performance. Our first
hypothesis was that DC should maintain the association with
Gf, despite having reduced storage demands.
When basic and DC items were entered together, 14.2% of
variability in APM performance was accounted for (R2 =
.142, F2,127 = 10.49, p < .001). DC items explained 8% unique

Scale (Total Scores)

Mean

(SD)

Range

LST combined

31.17

(3.42)

17 - 36

2D Items

11.42

(1.02)

7 - 12

3D Items

10.96

(1.14)

8 - 12

4D items

8.78

(2.11)

2 - 12

Basic Set

10.35

(1.50)

5 - 12

DC Set

11.17

(1.19)

6 - 12

9.37

(1.98)

3 - 12

Load: Integration (n1 = 65)
Load: Coordination (n2 = 65)

9.92

(1.78)

4 - 12

Recall Cell 1 (Coordination, n2 only)

10.78

(1.60)

4 - 12

Recall Cell 2 (Coordination, n2 only)

10.69

(1.98)

0 - 12

APM

13.35

(3.88)

2 - 20

variance (b = .30, sr2 = .084, p = .001), whereas basic items
did not significantly account for any additional systematic
variance (b = .14, sr2 = .018, p > .05). As hypothesized, DC
did sustain the link with Gf; and in fact, captured a larger
proportion of variance in APM than basic items.
The final regression aimed to test the hypothesis that
additional coordination and integration conditions could
provide unique contributions to APM. The basic set was
entered first, followed by load (regardless of type), then a
load interaction variable distinguishing coordination from
integration. Load items did account for a significant
proportion of variance in APM performance, b = .39, sr2 =
.14, p = .001, over and above basic items, b = .16, sr2 = .02,
p > .05. However, contrary to hypotheses, the regression lines
were not different, b = .10, sr2 = .01, p > .05.

Discussion
In Experiment 1, we flipped the typical WM
operationalisation, which uses recall as a primary task, to
have processing as the primary task. Under these conditions,
a storage-loaded version of the LST, relative to basic items,
predicted a greater proportion of differences in Gf, providing
support for the notion that WM does not have to be restricted
to recall as an outcome, or processing as a distractor. The
inability to distinguish integration from coordination was
unexpected, though clashed with the results of the DC
condition, which implicated pure integration alone as the
strongest link between WM and Gf. It is possible the impact
of the additional load conditions was confounded by the use
of a primary task already highly loaded on integration
processes. The burden of performing novel integration may
have attenuated differences between the load conditions.
To address this limitation, Experiment 2 employed a
different experimental task, the Arithmetic Chain Task (ACT;
Oberauer et al., 2001). The ACT requires participants to solve
a series of simple equations using mental arithmetic under
additional load conditions, while mitigating the potentially
high integration present in the LST by having a constant level
of complexity. Furthermore, because the ACT is nonvisuospatial, it helps quell criticism that the modality overlap
between the LST and APM was the core determinant of
correlation. Although arithmetic is a form of integration

1600

(3+5=? entails establishing the relation, sums-to(3,5,?);
Halford et al., 1998), we argue that completing a chain of
simple arithmetic provides a cognitively simpler instantiation
of integration than the LST, thus allowing stronger
differences to emerge between additional load conditions.

Our primary hypothesis was that access and coordination
aspects of the ACT should provide independent contributions
to predicting APM variance. Further, we hypothesized that
access-random should provide the strongest unique
contribution, over-and-above other conditions, as it places
the highest theoretical demand on a binding-based relational
processing system of WM.

Experiment 2
Oberauer et al. (2001) provided evidence for a distinction
between coordination and integration in the ACT. They asked
participants to complete a mental arithmetic task in which
participants were shown an equation involving a number of
digits, three of which were replaced by symbols (e.g., X, Y,
and Z). In the control condition, participants were given a key
showing the numerical values of XYZ for use in the equation.
In the coordination condition, participants were briefly
shown three additional numeric values associated with other
symbols (A, B, and C). These variables were to be memorized
and recalled later, though they were not relevant to the
arithmetic. In the integration condition (dubbed ‘access’)
however, XYZ was equated to ABC, necessitating both
storage and integration (see Figure 2). The authors found that
although the number of stored value mappings had little
effect on performance in coordination; in the integration
condition, higher levels of storage load produced declines in
speed and accuracy. These diverging outcomes indicated the
manipulations may have indeed tapped different functions.
In the current study, the ACT entails equations of six
operations and seven addends. The format for control,
coordination, and access from Oberauer et al. (2001) was
used. We also introduced an additional condition, which
modified the access condition to include fixed (e.g.,
ABC=XYZ) as well as random (e.g., ABC=YZX) mappings.
Our complexity analysis (not reported here) suggests that
random access imposes constraints on conceptual chunking,
increasing the integration load, relative to access-fixed. In
summary, the convenience of the serially ordered fixed
mappings cannot be applied to random mappings, forcing
participants to deconstruct and reconstruct the bindings
holding the relation together – a critical source of demand in
Oberauer et al.’s (2007) architecture of WM.
In addition to the ACT and APM, we employed the
symmetry span as an additional criterion measure. We also
aimed to replicate Experiment 1 by including the LST. If the
LST-DC is indeed a measure of pure integration, it would
provide
a useful criterion measure.
C. Access-Fixed
Phase 2: Display Operands

Phase 1: Memory

A=6
B=3
C=1
6S

Method
Participants and Procedure The participants were 60 firstyear students (44 females) at the University of Sydney who
participated for course credit. The mean age was 19.22 (SD
= 2.77). Participants were tested in groups in 90m sessions.
Measures The ACT required participants to solve arithmetic
problems of six operations (additions/subtractions). Four
blocks of problems (control, coordination, access-fixed,
access-random) were generated such that all digits were
between 1 and 7, and final answers, between -9 and +9. There
were six items per block. Participants had practice with all
conditions, then received the blocks in random order.
Control items were basic problems that entailed
substituting variable-value mappings (e.g., X=2, Y=1, Z=4)
provided in the top half of the screen into equations where
each operand was displayed one-at-a-time at a pace
controlled by participants. After all 7 operands had been
displayed, a textbox would appear prompting the participant
for an answer. Feedback was then displayed.
Coordination items were identical to control items, with
the exception that participants were given 6s to memorize
three variable-value mappings (e.g., A=6, B=3, C=1) to be
recalled at the end of the trial.
Access-fixed items were similar to coordination items,
except the XYZ variable-value mappings were directly linked
to the ABC mappings (e.g., A=6, B=3, C=1; and always,
X=A, Y=B, Z=C). Again, participants were asked to
reproduce the digits corresponding to ABC after the equation
had been solved. Thus, unlike the coordination condition, the
ABC mappings were required for the arithmetic. Accessrandom items were similar but the XYZ mappings were
randomly linked to the ABC mappings (e.g., A=6, B=3, C=1;
and say, X=B, Y=C, Z=A).
Participants also completed the symmetry span, as in Kane
et al. (2004), with set sizes of two to five (two of each). The

Phase 3: Derive solu;on

Phase 4: Feedback

Phase 5: Recall

X=A
Y=B
Z=C

X=A
Y=B
Z=C

X=A
Y=B
Z=C

5 + 3 – 4 + X……..

5+3–4+X–2+Y+Z =?

5+3–4+X–2+Y+Z=9

Press spacebar to con;nue…

Enter answer…

Your answer was: Correct

Self-paced

Self-paced

2s

A=?
B=?
C=?
Self-paced

Figure 2. Example of Access condition of the Arithmetic Chain Task (adapted from Oberauer et al., 2001)

1601

score analyzed was total number of recalled squares (0-28).
The LST and APM were administered as in Experiment 1.

Results
Difficulty Effects A repeated-measures ANOVA indicated
differences in performance across conditions were significant
(F3,180 = 23.99, mse = 1.51, p < .001, partial-η2 = .29). Control
performance (M = 5.20, SD = 1.01) was not significantly
different to coordination performance (M = 5.00, SD = 1.34),
t59 = 1.07, p = .29. However, control performance was
significantly higher than the access conditions on average
(Access-fixed: M = 3.98, SD = 1.75; Access-random: M =
3.60, SD = 1.89), t59 = 7.58, p < .001. Although in the
expected direction, the difference between fixed and random
did not reach statistical significance, t59 = 1.60, p = .12.
In summary, the ordering of performance was as expected.
Recall was high for all conditions (coordination: 86.67%,
access-fixed: 92.59% and access-random, 90.37%), meeting
the criterion of the secondary task in CSPANs, though there
was some evidence to suggest recall under conditions where
the information was critical (access) is better than when it
was irrelevant (coordination).
ACT Correlates The ACT correlated well with the APM,
sharing 22% of variance (r = .47). The total ACT-recall
component correlated with the CSPAN (r = .46), but was not
related to either LST-DC or APM.
In efforts to understand the relationships among the data,
step-wise analyses regressing each criterion measure
(CSPAN, LST-DC, APM) on ACT were conducted. Results
suggest different sets of unique predictors for each criterion
in ways as might be expected. For CSPAN, the only ACT
predictor accounting for significant variance was
coordination recall. For both LST-DC and APM, control and
access-random performance were unique predictors. In
second models, the criterion measures not being predicted
were added, but the results remained unchanged.
In order to fully explicate the ACT-Gf model, a hierarchical
regression was conducted, with each condition predicting
APM. Model 1, with just control items, predicted 15.3% of

variance in APM. Contrary to expectations, the coordination
predictor did not account for additional unique variance in the
second model (DR2 = .009, F1,57 = .63, p = .431). Model 3
with access-fixed also failed to result in a significant change
(DR2 = .032, F1,56 = 2.19, p = .144), with control items and
shared variance taking the majority of the contribution.
However, model 4 with access-random added 6.4% of unique
APM variance predicted – a significant contribution overand-above all other variables, (DR2 = .064, F1,55 = 4.77, p =
.03).

Discussion
The findings for LST-DC and APM support the notion that
integration is a key component of each of these tasks, drawing
both on the control arithmetic (which is basic arithmetical
integration) and access-random (which has the highest
theoretical integration demands). CSPAN, which we have
argued as capturing coordination, was related to recall in the
coordination aspect of the ACT.

General Discussion
The extant literature makes a distinction between
coordination and integration functions of WM. We adopt a
conceptualisation of coordination as the WM function
underlying dual-task requirements, where a storage load must
be maintained despite ongoing, unrelated processing. This
paradigm remains by far the most common used in
investigations of the WM-Gf link (Ackerman et al., 2005).
Process-oriented accounts of WM instead focus on the
capacity for integration: combining multiple representations
into higher-order relational structures. Integration as a
concept has been linked conceptually and empirically to Gf
(Oberauer et al., 2008). The current work contributes to this
research by investigating coordination and integration
functions of WM and their relationship to Gf. A feature of our
approach has been to focus on measures where the primary
task is processing, rather than recall.
The LST provided mixed results on a distinction between
coordination and integration. While additional load overall
was incrementally predictive of Gf, the load effect did not

1602

depend on whether the recalled items were unrelated or
related to the LST solution. However, evidence for
integration was found in the DC condition, which exceeded
expectations as a predictor of Gf, improving performance
while also increasing the association with APM. We
replicated this in Experiment 2. This could be explained as a
means of ‘purifying’ the LST into an assessment of raw
integration, minimizing the impact of obfuscating storage
demands associated with holding interim processing
outcomes. DC may be a valuable tool for future use of
processing tasks, in order to amplify the effect of integration.
We argued that one issue with the LST was the high
integration load present in all manipulations, potentially
swamping our additional load conditions by task-specific
characteristics. This is especially plausible given the power
of DC. The ACT was selected for Experiment 2 because those
characteristics are less apparent. The ACT conditions were
predictive of the criterion measures consistent with an
account for a distinct coordination and integration. However,
the coordination link to CSPAN only became apparent when
using the recall portion of the ACT, indicating the
relationship may have more to do with the outcome measure
(i.e., recall) rather than a coordination function per se.
The results of the experiments support a compelling case
for differentiating a specific role of integration in Gf overand-above conceptualisations of WM defined by CSPANs.
The absence of storage in the LST-DC and other integrationbased tasks (Oberauer et al., 2008) contributes to the notion
that storage maintenance is not a pre-requisite for WM to be
associated with Gf, and supports process-oriented accounts of
WM (Halford et al., 1998; Oberauer et al., 2007). Further,
specific processing limits were alluded to in the results of
access-random. That is, consistent with a relational binding
approach (Oberauer et al., 2007), the random ordering forced
participants to quickly and flexibly deconstruct and
reconstruct the variable-value mappings from the way they
were first presented into an order consistent with the way they
were presented on the screen at the time of the equation.
Because only this single condition could indicate binding as
an ability, further research is needed to determine what
processes contribute to the capacity for relational binding.
One limitation with the current results was that the DC
variance could have represented a general task navigation
ability (i.e., to apply the advantages of DC), as opposed to
pure integration per se. It seems unlikely that such a strong
unique effect (equal to 8.4% of variance in APM) could be
attributed solely to DC (as opposed to any other condition),
though there is no way to disprove such an explanation with
the current data. Because participants could fill as many cells
as they wished, we could not distinguish which cells were
filled through trial-and-error and which were used as actual
planning steps. This task navigation component could be
explored using a variant of DC where participants are allowed
only a limited number of cells to fill.
Another limitation was the LST and ACT both being
integration-based tasks. While we have attempted to
reconcile this by holding processing load constant in the

ACT, it is worth considering alternatives for future work. For
one, it would be helpful to consider both a storage-based and
a processing-based primary task, each with coordination and
integration conditions. For instance, an integration version of
the operation span could use numbers for the storage
component, and these numbers could then be used in the
processing component. While this does remove the ability to
keep comparisons within a single task, it may at least provide
some evidence of a coordination-integration dichotomy not
restricted to processing-based tasks.
In conclusion, the current results offer mixed support for a
strict coordination-integration functional dichotomy within
WM. They do, however, provide evidence of a relational
integration ability implicated within Gf across multiple task
formats, with the storage-stripped DC set offering perhaps the
strongest support. Further work is needed to determine the
extent of integration across tasks; and to determine if
coordination can be distinguished from mere recall.

References
Ackerman, P.L., Beier, M.E., & Boyle, M.O. (2005). Working
memory and intelligence: The same or different constructs?
Psychological Bulletin, 131, 30-60.
Baddeley, A.D., & Hitch, G. (1974). Working memory. In G.H.
Bower (Ed.), The psychology of learning and motivation:
Advances in research and theory (Vol. 8, pp. 47-89). New York:
Academic Press.
Birney, D.P., & Bowman, D.B. (2009). An experimental-differential
investigation of cognitive complexity. Psychology Science
Quarterly, 51, 449-469.
Birney, D.P., Halford, G.S., & Andrews, G. (2006). Measuring the
influence of complexity on relational reasoning: The
development of the Latin Square Task. Educational and
Psychological Measurement, 66, 146-171.
Halford, G.S., Wilson, W.H., & Philips,S. (1998). Processing
capacity defined by relational complexity: Implications for
comparative, developmental, and cognitive psychology.
Behavioral and Brain Sciences, 21, 803-865.
Kane, M.J., Hambrick, D.Z., Tuholiski, S.W., Wilhelm,O.,
Payne,T., & Engle, R.W. (2004). The generality of working
memory capacity: A latent-variable approach to verbal and
visuospatial memory span and reasoning. Journal of
Experimental Psychology: General, 133, 189-217.
Oberauer, K., Demmrich, A., Mayr, U., & Kliegl, R. (2001).
Dissociating retention and access in working memory: An agecomparative study on mental arithmetic. Memory & Cognition,
29, 18-33.
Oberauer, K., Süß, H.M., Wilhelm, O., & Sander, N. (2007).
Individual differences in working memory capacity and reasoning
ability. In R.A. Conway, C. Jarrold, M.J. Kane, A. Miyake, & J.N.
Yowse (Eds.), Variation in Working Memory. New York: Oxford
University Press.
Oberauer, K. Süß, H.M., Wilhelm, O., & Wittman, W.W. (2008).
Which working memory functions predict intelligence?
Intelligence, 36, 641-652.
Raven, J. C. (1941). Standardisation of progressive matrices. British
Journal of Psychology, XIX, 137-150.

1603

