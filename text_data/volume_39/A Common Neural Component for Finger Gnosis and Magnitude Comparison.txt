A Common Neural Component for Finger Gnosis and Magnitude Comparison
Terrence C. Stewart (tcstewar@uwaterloo.ca)
Centre for Theoretical Neuroscience, University of Waterloo,
200 University Avenue W, Waterloo, ON, N2L 3G1, Canada
Marcie Penner-Wilger (mpennerw@uwo.ca)
Department of Psychology, King’s University College at Western University
266 Epworth Avenue, London, ON, Canada N6A 2M3a
Rylan J. Waring (waringr@uoguelph.ca)
Department of Psychology, University of Guelph, Guelph, Canada
Michael L. Anderson (michael.anderson@fandm.edu)
Department of Psychology, Franklin & Marshall College, Lancaster, PA 17604 USA
Institute for Advanced Computer Studies, University of Maryland, College Park, MD 20742 USA
Abstract
Finger gnosis (the ability to identify which finger has been
touched) and magnitude comparison (the ability to determine
which of two numbers is larger) are surprisingly correlated.
We present a spiking neuron model of a common component
that could be used in both tasks: an array of pointers. We
show that if the model's single tuned parameter is set to match
human accuracy performance in one task, then it also matches
on the other task (with the exception of one data point). This
provides a novel explanation of the relation, and proposes a
common component that could be used across cognitive tasks.
Keywords: finger gnosis; magnitude comparison; spiking
neurons; neural engineering framework, numerical cognition

Introduction
Finger gnosis, the ability to differentiate which finger has
been touched, in absence of visual feedback, is related to
math performance (Fayol, Barrouillet & Marinthe, 1998;
Noël, 2005; Penner-Wilger et al., 2007, 2009, 2014, 2015).
Finger gnosis is commonly measured using a finger
localization task (Baron, 2004; Noël, 2005), wherein the
participant’s hand is occluded from their view while a
finger, or two fingers, are touched. The participant is then
asked to indicate the touched finger(s). Performance is
measured in terms of number of fingers correctly identified.
Finger gnosis ability predicts performance on a variety of
math measures in children, both concurrently and
longitudinally (β’s range from .22 to .36; Fayol et al., 1998;
Noël, 2005; Penner-Wilger et al., 2007, 2009). Finger
gnosis ability also predicts performance on a variety of math
measures in adults (β’s range from .21 to .30; PennerWilger et al., 2014, 2015). The relation between finger
gnosis and math skill is reproducible across labs, different
samples, age groups, and measures of math skill, despite
controlling for many other variables (e.g., visuo-spatial
working memory, finger agility, processing speed, and nonverbal IQ).
The relation between finger gnosis and math skill is
partially mediated by symbolic number comparison
performance (Penner-Wilger et al., 2009, in prep.). In
symbolic number comparison tasks, participants are shown
two digits (e.g., 2 3) and asked to indicate which number is

more (or in some variants asked to compare a target digit to
a standard). One robust finding in number comparison is the
distance effect – performance is faster and more accurate
when numbers are father apart in magnitude (e.g., 2 7) than
when they are closer together (e.g., 2 3; Moyer &
Landauer, 1967). The distance effect is proposed to reflect
mapping between numerals and their associated magnitude,
with greater distance effects reflecting noisier mappings
(Dehaene, Dehaene-Lambertz & Cohen, 1998; cf. Lyons,
Nuerk & Ansari, 2015). Children who perform better in
finger gnosis, reflecting a more precise finger
representation, also demonstrate smaller distance effects in
number comparison, reflecting a more precise number
representation (Penner-Wilger et al., 2009).
Why are finger gnosis and math performance, specifically
a task indexing the precision/strength of number
representations, related? On the redeployment view (PennerWilger & Anderson, 2008, 2013), the relation between
finger gnosis and number representation arises because the
two tasks use overlapping neural substrates. On this view,
the relation is an example of neural reuse, the use of local
regions of the brain to support multiple tasks across
domains (Anderson, 2010, 2014). Neural reuse is a dynamic
process, impacting the functional organization of the brain
across both evolutionary and developmental time, whereby
individual regions of the brain contribute to multiple highlevel uses (e.g., finger representation and number
representation). There are two forms of neural reuse:
redeployment and neuromodulation. In redeployment, the
same brain region supports multiple uses, across
evolutionary and/or developmental time, while maintaining
the same operation (Anderson, 2014). In neuromodulation,
the same brain region supports multiple uses, at any given
point in developmental time, without maintaining the same
operation – its operation is modulated as a result of internal
or external variables (Anderson, 2014; Bargmann, 2012;
Marder, 2012). The redeployment view posits that the
behavioural link between finger and number representations
is at least partially explained by neural reuse, and that the
specific type of neural reuse involved is redeployment.
Thus, one (or more) local brain regions, over evolutionary

1150

and/or developmental time, has come to perform the same
operation in support of both uses.
In support of the redeployment view, regions associated
with finger gnosis are activated during tasks requiring the
representation of number (Andres, Michaux & Pesenti,
2012; Dehaene et al., 1996; Zago et al., 2001), rTMS and
direct cortical stimulation disrupt both finger gnosis and
tasks requiring the representation of number (Rusconi,
Walsh, & Butterworth, 2005; Roux et al., 2003), and there is
interference between tasks involving finger gnosis and tasks
requiring the representation of number (Brozzoli et al.,
2008). Zago et al. (2001) pinpointed a region of overlap
between finger and number representation in the leftprecentral gyrus (-42, 0, 38). Penner-Wilger and Anderson
(2011) conducted a meta-analysis of imaging data to
determine the full complement of tasks, across domains, that
this ROI was implicated in, with the goal of identifying
common requirements across tasks/uses to guide structurefunction mapping. In addition to number and finger
representation tasks, the ROI was implicated in generation,
inhibition and order tasks. Common requirements across
these uses were identified, including ordered storage and
mapping, and a candidate working that could implement
both these requirements was proposed – an array of
pointers. An array is an ordered group, meeting the
requirements for ordered storage, and a pointer is a data
structure that designates a memory location and can indicate
different data types. Thus, an array of pointers allows for
storage and access of ordered elements, which are able to
point to—or index—representations or locations in memory,
allowing for mapping between different representational
forms.
The neural overlap between finger and number
representation could reflect redeployment, wherein the brain
region is reused in both tasks while retaining the same
operation. Alternatively, the overlap could reflect
neuromodulation, wherein the operation of the region is
modulated. In the current paper, we use computational
modelling as a means of demonstrating whether the same
proposed working –an array of pointers— could contribute
to both number and finger representation. The goals of the
current research are to evaluate the redeployment view and
proposed shared working by (1) providing an in-principal
demonstration that the same working could contribute to
both uses, (2) determining the psychological plausibility of
the model by comparing it to human performance on finger
gnosis and number comparison tasks, and (3) differentiating
between support for redeployment (same ROI, same
working) over neuromodulation (same ROI, but different
working).
Common Component: A Cognitive Pointer
The core theoretical claim here is that both finger gnosis and
magnitude comparison could plausibly make use of a neural
system that is able to store a list of items, and each of those
items can be used to indicate other information. For
example, these items could mean a particular number (e.g.

ONE or THREE) or they could mean any other known
concept. For the purposes of this paper, we choose these
vectors randomly, but we could use other vector-based
representation methods such as LSA or word2vec.
To be explicit about what we mean by such a system, let
us define it mathematically. First, we need a (small) set of
numerical values which are our “pointers”: p1, p2, p3, p4, and
p5. For the purposes of this paper, we keep the size of this
set to 5 (the number of fingers on a hand). Each of these
pointers is a numerical vector, and different values can have
different meanings. For example, there could be one value
that means the number ONE, with other values meaning
other concepts like DOG.
In the absence of input, these pointers should not change
their value. However, we also need some way of changing
their value when needed. For this, we need two things: a
new input value x and a way to indicate which pointer
should be set to the new value. This input control we call a
mask m and it is a list of values indicating which pointer
should be set. For example, if m=[0,1,0,0,0], then the input
x will be set to the second pointer p2.
Mathematically, we can write this as follows, where i
indexes the different pointers:
(1)
We postulate that the two tasks use this component as
follows. For the finger gnosis task, consider what happens
if two fingers are touched, the index finger and the ring
finger. We can treat each pointer as a separate finger, and
load in a vector that means TOUCHED into the correct
pointers by setting x=TOUCHED and m=[0,1,0,1,0].
For the magnitude comparison task, we load the first
value into the first pointer and the second value in the
second pointer. For the case of comparing 5 and 7 this
means setting x=FIVE and m=[1,0,0,0,0], and afterwards
setting x=SEVEN and m=[0,1,0,0,0]. Over time, this
process proceeds stepwise as follows, and maintains its state
as shown:
Finger Gnosis Task
x
m
p1
p2
p3
p4
p5
-00000 -----TOUCHED 01010 -- TOUCHED -- TOUCHED --00000 -- TOUCHED -- TOUCHED -Magnitude Comparison Task
x
m
p1
p2
p3
p4
p5
-00000 -----FIVE
10000 FIVE
----SEVEN 01000 FIVE SEVEN
----00000 FIVE SEVEN
---Neural Implementation
While the above algorithm gives us a conceptual
understanding of this array of cognitive pointers, we also
want to determine how neurons could implement such an
algorithm. By examining this neural mechanism, we can

1151

gain insights into how accurate it would be in different
conditions, and hopefully gain insight into individual
differences and cognitive deficits.
For our neurons, we use standard leaky-integrate-and-fire
(LIF) neurons. These increase in voltage given their input,
and emit a spike and reset when the voltage reaches a
threshold. These spikes are transmitted to all neurons that
the spiking neuron is connected to, with synaptic weights
controlling how much current is added to (or subtracted
from) the target neuron each time a spike occurs. Each
connection also has a post-synaptic time constant that
controls the time it takes for a spike's effect to decay away.

Figure 1: Neural implementation of an array of pointers.
Only two pointers are shown.
Figure 1 shows the basic approach used to implement this
functionality. The groups of neurons on the right store the
individual pointer values p1, p2, etc. They are recurrently
connected such that they will have stable firing patterns over
time (i.e. whatever pattern of firing is present right now will
cause a similar firing pattern in the near future).
The connections from x to the channels and from the
channels to the pointers are all set such that the neurons
simply pass along the value without altering it. That is, if
we input a particular value x, this will cause a particular
(and unique) firing pattern in channel 1 and channel 2.
These in turn will cause particular firing patterns in pointer
1 and pointer 2. If x is removed (i.e. set to zero), then the
pointer patterns will stay as they were. Thus, they
implement a memory of previously presented patterns.
However, we also want to be able to selectively set one or
the other pointer. For this reason, we also include the m
(mask) input. This can selectively inhibit the channel
neurons. If these are inhibited, then they do not fire, and so
do not affect the pointer neurons. So, if we want to set the
value in pointer 2 only (and not change whatever is stored in
pointer 1), then we inhibit channel 1 when inputting x.
To actually create this network, we use the Neural
Engineering Framework (Eliasmith & Anderson, 2003) and
the software toolkit Nengo (Bekolay et al., 2014). In this
approach, we assume that x is a vector of some
dimensionality that is smaller than the number of neurons in
a group. This means that there is redundancy in the neural
code, and the value x is distributed across the neural
population. Here, for simplicity, we assume x is an 8dimensional vector. Previous work (Crawford, Gingerich &
Eliasmith, 2013) has shown that 512-dimensions should be
sufficient for high-level reasoning applications, but that is
not needed for the tasks considered here.

Within each group of 400 neurons, each individual neuron
has a randomly chosen preferred vector. That is, each
neuron will have some particular x value for which it fires
the fastest. This is a generalization of the standard preferred
direction vectors observed throughout cortex (e.g.
Georgopoulos et al., 1986).
To generate the actual connections between neurons, the
NEF uses least-squares minimization to directly solve for
the optimal synaptic connection weights that will do the best
job of transferring a value x from one group to the next.
This same process is used to generate the recurrent
connections for the pointers.
The synaptic time constants were set to 10ms for the feedforward connections (based on the fast AMPA synapses
found in cortex) and 100ms for the recurrent connections
(based on the slower NMDA synapses found in recurrent
connections in cortex).
It should be noted that there is nothing in the model so far
that is fit to a particular task. The optimization of the
connection weights is over all possible x values, not the
particular x values that mean ONE or TWO or TOUCHED
in the magnitude comparison and finger gnosis tasks
themselves. This is meant to be a generic component, not
one that is specialized for exactly these tasks.

Figure 2: Spiking activity for an example magnitude
comparison task. Top row shows input to the model. Other
rows show spiking neuron activity over time. The text
indicates which vector x is represented by the pattern of
activity. Note that pointer 1 and pointer 2 maintain their
pattern (approximately) after the input has been removed.
Figure 2 shows the neural activity when this array of
pointers is used to store two numbers. Initially, both pointer
1 and pointer 2 are firing with some random background
firing rate. At t=0.2s, we set the input x to be the vector for
FIVE (randomly chosen) and set the mask such that channel
1 is the only group not being inhibited. This drives the
neurons in pointer 1 to also fire with the pattern for FIVE.
At t=0.4s, we change the input to SEVEN and change the
mask so that channel 2 is not inhibited. This drives pointer
2 to represent SEVEN. Importantly, after x is removed, the
neurons in pointer 1 and pointer 2 retain their firing pattern.

1152

While the system described above behaves as desired,
note that it is not perfect. The neurons in channel 1 and
channel 2 are not perfectly inhibited. Also, the neurons in
pointer 1 and pointer 2 do not perfectly maintain exactly the
desired firing pattern. This is as expected, as neurons only
approximate the desired functions.
We can now test
whether the resulting model can still perform the two tasks,
and whether the errors made by the model due to these
imperfections are comparable to the errors made by people.
Task 1: Magnitude Comparison
The first task believed to make use of this component is
magnitude comparison. Two single-digit numbers are
presented, and the system must decide which is larger.
To implement this task neurally, we add two new neural
groups. First, a comparison group, which takes as input the
vectors in the first two pointer populations. This means that
the comparison group has a 16-dimensional input, with the
value from p1 as the first 8 dimensions and the value from p2
as the second 8 dimensions.
Second, we have an
accumulator. This takes as input a single number which
should be positive if the first number is larger, and should
be negative if the second number is larger. This is
recurrently connected to itself, so that even for small inputs,
it will eventually build up until it reaches a threshold,
making it a standard accumulate-to-threshold decisionmaking system.

Figure 3: The magnitude comparison model. The dotted
area indicates the array of pointers.
The connection between the comparison and accumulator
neurons needs to convert from 16 dimensions (the two
numbers being presented) to 1 dimension (which number to
choose). We implement this function by generating 2000
training examples of randomly chosen digits, along with the
correct answer of +1 if the first number is larger, and -1 if
the second number is larger. We then used Nengo to find
the optimal connection weights between these neurons to
best approximate this mapping.
To evaluate this model, we collected human participant
data from 88 undergraduate students at King’s University
College who received course-credit for their participation
(age: M=21.28 years, SD=3.8 years; 64 female). Two single
digit numbers (ranging from 1 to 9) were presented
simultaneously on an iPad screen. Participants were asked
to choose the numerically larger number as fast as they
could without making any errors. Stimuli remained on the
screen for 7800ms or until the participant made a choice,
and the time between trials was 1000ms. Participants
performed a total of 72 trials. Dependent measures were
reaction time and percent error.

Figure 4: Results from participants and from the model.
Standard errors of the mean are shown.
The participant data (Figure 4) displays the expected
distance effect: as the difference between the digits
increases, accuracies improve and reaction times are
quicker. For confirmation, a repeated measures ANOVA
with a Greenhouse-Geisser correction revealed that mean
RTs differed significantly between distances, F(4.41,
383.91) = 46.96, p < .01. A second repeated-measures
ANOVA revealed that mean percent error also differed
significantly between distances, F(7, 609) = 21.37, p < .01.
Importantly, the model data shows the same effects. To
achieve the quantitative fit for the accuracy measure (Figure
4, left side), we only fit one parameter: the strength of the
inhibition m. That is, rather than having it always be strong
enough to completely stop all neurons in the channel from
firing (sinhibition=1.0), we allowed this value to be reduced.
This causes some “leakage”, where values meant for one
pointer slightly affect the other pointers, since the other
channels are not perfectly inhibited. If there are more than 2
pointers, we assume that the inhibition gets proportionally
stronger for pointers farther from the target pointer. For the
data shown above, sinhibition=0.875. Surprisingly, this distance
effect occurs even though the neural activity pattern for each
digit is randomly chosen. See (Stewart & Penner-Wilger,
2017) for further analysis.
For the reaction time data (Figure 4, right side), two
additional parameters were fit. First, we added a fixed
reaction-time value (i.e. the amount of time needed for
perception and the motor action) Tfixed. Second, we allowed a
scaling factor on the connection from the comparison
neurons to the accumulator neurons. This controls the rate
of evidence accumulation sevidence. This is a common feature
of decision-making models. After fitting, Tfixed=290ms and
sevidence=5.9. All other parameters in the model were left at
their default values.
Task 2: Finger Gnosis
In the finger gnosis task, two fingers are touched on the
participant's hand while that hand is occluded from their
view. They must then report which fingers were touched.
To implement this task, we use the same array of pointers,
but connect it to a different set of neurons, as depicted in
Figure 5. The first group of neurons takes the input from all
the pointers and combines them together as one vector. The
second group stores the reported answer. As with the
previous task, we use Nengo to find the connection weights

1153

that best approximate the function between the combination
neurons and the answer neurons. In this case, however,
rather than determining which value is larger, here we do
not need to perform any complex operation as we just need
to extract the information that is already encoded in the
neurons. Thus, here we use Nengo to approximate the
identity function, where the output is the same as the input.

performance on one task and on the other. The fact that a
similar parameter value is needed in each task in order to fit
the human data lends support to the idea that there is a
shared working that is redeployed for these two tasks.

Figure 7: Effects of changing sinhibition in both tasks.
Figure 5: The finger gnosis model. Only 2 pointers are
shown, but the full model uses 5 pointers.
Importantly, if this same array of pointers is to be used in
two different tasks, a flexible neural routing system would
be needed, so that the output of the pointer array can be sent
to this combination system when doing the finger gnosis
task, and sent to the comparison system when doing
magnitude comparison. We have previously shown how to
implement such a routing system using a model of the
cortex-basal ganglia-thalamus loop (Stewart, Choo, &
Eliasmith, 2010), and so do not consider that here.
To evaluate this model, we used the same 88
undergraduates as for the first task. Participants first
performed the magnitude comparison task, followed by the
finger gnosis task as part of a larger study. As shown in
Figure 6, a repeated-measures ANOVA revealed that mean
percent error differed significantly between distances, F(3,
261) = 6.88, p < .01.
Figure 6 also shows the model performance. Importantly,
no parameters were tuned to achieve this result. We used
sinhibition=0.875, as that was the best fit value in the first task,
and all other parameters were left as they were. The model
is statistically significantly different at a distance of 1, but
does not statistically differ for distances 2, 3, and 4.

Figure 6: Results from participants and model for the finger
gnosis task. Standard errors of the mean are shown.
Since the only tuned parameter in the model is sinhibition, we
also examined how the model's performance changes on the
two tasks as this parameter is varied (Figure 7). From this,
we note that the error rates on these two tasks change
drastically, given small changes in this parameter. This
indicates a strong connection between the model's

Conclusions
On the redeployment view (Penner-Wilger & Anderson,
2008, 2013), finger gnosis and math ability are linked
because at least one local brain region, over evolutionary
and/or developmental time, has come to perform the same
operation in support of both finger and number
representation. The goal of the current research was to
evaluate the redeployment view and the proposed shared
operation – an array of pointers (Penner-Wilger &
Anderson, 2011). To this end, we built a computational
model to perform both the standard finger gnosis and
number comparison tasks. We then compared the
performance of this model to human performance data (RT
and accuracy) and showed a close match on both tasks with
one parameter (sinhibition) tuned to a common value.
First, our work provides an in-principal demonstration
that the same working – an array of pointers – could
contribute to multiple uses, as the same system successfully
performed two different tasks. Our previous meta-analysis
(Penner-Wilger & Anderson, 2011) also indicates this
region may be involved in a variety of other tasks, which we
intend to include in future research.
Second, given that the model could successfully perform
both tasks using the same operation, and that the model
performance mirrored that of human participants, it is a
psychologically plausible explanation, which lends support
for the view that the observed neural overlap between finger
and number representation reflects redeployment (same
ROI, same working) rather than neuromodulation (same
ROI, different working). It follows that damage to the ROI
should impact performance on both finger gnosis and
number comparison tasks. We are currently testing this in
our computational model and it could be tested in human
participants using rTMS applied to our ROI in the left
precentral gyrus. Previous work using rTMS applied to the
left angular gyrus has already been shown to disrupt
performance on both tasks (Rusconi et al., 2005).
Third, by offering another concrete instance of the reuse
of a basic operation in a high-level, abstract cognitive task,
the model does not just bolster the neural reuse framework,
but also serves the goal of enhancing our understanding of
the nature of and processes involved in numerical cognition.

1154

Finally, modeling efforts like this potentially enhance our
efforts to map the functional structure of the brain. We
currently lack the capacity to determine in vivo when
neuromodulation has changed the underlying configuration
of a local neural network, which hinders our ability to
attribute function to structure. This approach offers some
first steps toward developing reliable methods for detecting
changes to the underlying operation a given local region
supports, thereby refining our efforts to describe what the
brain is actually doing at any given time.
Acknowledgements
This research was supported by a grant from King’s
University College at Western University to MPW. TCS
and MPW contributed equally to the research.
References
Anderson, M.L. (2010). Neural reuse: A fundamental
organizational principle of the brain. (Target article)
Behavioral and Brain Sciences, 33(4): 245-66.
Anderson, M.L. (2014). After Phrenology: Neural Reuse
and the Interactive Brain. Cambridge, MA: MIT Press.
Andres, M., Michaux, N., & Pesenti, M. (2012). Common
substrate for mental arithmetic and finger representation
in the parietal cortex. Neuroimage, 62(3), 1520-1528.
Bargmann, C. I. (2012). Beyond the connectome. Bioessays,
34(6), 458-465.
Baron, I. S. (2004). Neuropsychological Evaluation of the
Child. New York, NY: Oxford University Press.
Bekolay, T., Bergstra, J., Hunsberger, E., DeWolf, T.,
Stewart, T.C., Rasmussen, D., Choo, X., Voelker, A., &
Eliasmith, C.. (2014). Nengo: a python tool for building
large-scale functional brain models. Frontiers in
Neuroinformatics.
Brozzoli, C., Ishihara, M., Göbel, S. M., Salemme, R.,
Rossetti, Y., and Farnè, A. (2008). Touch perception
reveals the dominance of spatial over digital
representation of numbers. Proc. Natl. Acad. Sci. U.S.A.
105, 5644–5648.
Crawford, E., Gingerich, M., & Eliasmith, C. (2013).
Biologically
plausible,
human-scale
knowledge
representation. 35th Cognitive Science Society, 412–417.
Dehaene, S., Dehaene-Lambertz, G., & Cohen, L. (1998).
Abstract representations of numbers in the animal and
human brain. Trends in Neuroscience, 21, 355–361.
Dehaene, S., Tzourio, N., Frak, V., Raynaud, L., Cohen, L.,
Mehler, J., & Mazoyer, B. (1996). Cerebral activations
during number multiplication and comparison: A PET
study. Neuropsychologia, 34, 1097-1106.
Eliasmith, C. & Anderson, C.. (2003). Neural engineering.
MIT Press, Cambridge, MA.
Fayol, M., Barrouillet, P., & Marinthe, C. (1998). Predicting
arithmetical achievement from neuro-psychological
performance. Cognition, 68, B63-B70.
Georgopoulos, A. P., Schwartz, A. B., and Kettner, R. E.
(1986). Neuronal population coding of movement
direction. Science 233, 1416–1419.

Lyons, I. M., Nuerk, H.C. & Ansari, D. (2015). Rethinking
the implications of numerical ratio effects for
understanding the development of representational
precision and numerical processing across formats. JEP:
General, 144 (5):1021-1035.
Marder, E. (2012). Neuromodulation of neuronal circuits:
back to the future. Neuron, 76(1), 1-11.
Moyer, R. S., & Landauer, T. K. (1967). Time required for
judgments of numerical inequality. Nature 15,1519–1520.
Noël, M.-P. (2005). Finger gnosia: A predictor of numerical
abilities in children? Child Neuropsychology, 11, 413430.
Penner-Wilger, M., & Anderson, M. L. (2013). The relation
between finger gnosis and mathematical ability: Why
redeployment of neural circuits best explains the
finding. Frontiers in Psychology, 4, 877.
Penner-Wilger, M., & Anderson, M. L. (2011). The relation
between finger gnosis and mathematical ability: Can we
attribute function to cortical structure with cross-domain
modeling? 33rd Cognitive Science Society, 2445-2450.
Penner-Wilger, M., & Anderson, M. L. (2008). An
alternative view of the relation between finger gnosis and
math ability. 30th Cognitive Science Society. 1647-1652.
Penner-Wilger, M., Fast, L., LeFevre, J., Smith-Chant, B.
L., Skwarchuk, S., Kamawar, D., & Bisanz, J. (2009).
Subitizing, finger gnosis, and the representation of
number. 31st Annual Cognitive Science Society, 520-525.
Penner-Wilger, M., Fast, L., LeFevre, J., Smith-Chant, B.
L., Skwarchuk, S., Kamawar, D., & Bisanz, J. (2007). The
foundations of numeracy: Subitizing, finger gnosia, and
fine-motor ability. 29th Cog. Science Society, 1385-1390.
Penner-Wilger, M., Waring, R. J., & Newton, A. T. (2014).
Subitizing and finger gnosis predict calculation fluency in
adults. 36th Cognitive Science Society, 1150-1155.
Penner-Wilger, M., Waring, R. J., Newton, A. T., & White,
C. (2015). Finger gnosis and symbolic number
comparison as robust predictors of adult numeracy. 37th
Conference of the Cognitive Science Society, 2963.
Roux, F.-E., Boetto, S., Sacko, O., Chollet, F., & Tremoulet,
M. (2003). Writing, calculating, and finger recognition in
the region of the angular gyrus: a cortical study of
Gerstmann syndrome. J. Neurosurgery, 99, 716-727.
Rusconi, E., Walsh, V., & Butterworth, B. (2005). Dexterity
with numbers: rTMS over left angular gyrus disrupts
finger gnosis and number processing. Neuropsychologia,
43(11), 1609-1624.
Stewart, T.C. & Penner-Wilger, M. (2017). Analysis of a
common neural component for finger gnosis and magnitude
comparison. Int. Conf. on Cognitive Modelling.

Stewart, T.C., Choo, X., & Eliasmith, C.. (2010). Symbolic
reasoning in spiking neurons: a model of the cortex/basal
ganglia/thalamus loop. 32nd Annual Meeting of the
Cognitive Science Society, 1100–1105.
Zago, L., Pesenti, M., Mellet, E., Crivello, F., Mazoyer, B.,
& Tzourio-Mazoyer, N. (2001). Neural correlates of
simple and complex mental calculation. NeuroImage, 13,
314-327.

1155

