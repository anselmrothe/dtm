UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
A Model of Fast Human Performance on a Computationally Hard Problem
Permalink
https://escholarship.org/uc/item/3zb8p945
Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 27(27)
Author
Best, Bradley J.
Publication Date
2005-01-01
Peer reviewed
 eScholarship.org                                 Powered by the California Digital Library
                                                                    University of California

        A Model of Fast Human Performance on a Computationally Hard Problem
                                                Bradley J. Best (bbest@maad.com)
                                       Micro Analysis & Design, 4949 Pearl E. Circle, Suite 300
                                                         Boulder, CO 80301 USA
                              Abstract                                 completed. Optimal solutions must connect points on the
                                                                       convex hull in order, so for problems such as this one where
   Human performance on the Traveling Salesperson Problem              the majority of the points fall on the convex hull, the convex
   (TSP) is of consistently high quality and scales approximately      hull provides a good basis for problem solution.
   linearly in time with problem size. A model leveraging
   parallel processing of perceptual grouping and a local serial
   search achieves both a comparable quality of performance and
   comparable time complexity.
       Human Performance on the Traveling
                   Salesperson Problem
The Traveling Salesperson Problem (TSP) consists of
attempting to find the shortest complete tour through a
series of points (cities), starting and ending with the same
point.      This problem is a member of the set of
computationally hard, or NP-complete, problems, for which
the best solutions known are obtained in exponential time
relative to the problem size.
   Michie, Oldfield, and Fleming (1968) performed one of
the earliest studies of human performance on the Traveling
Salesperson Problem (TSP). They found that human
performance approached, and in the case of one individual,
exceeded, that of a specialized graph traversal algorithm               Figure 1: Traveling Salesperson Problem with convex hull
designed for solving search problems.
   MacGregor and Ormerod (1996) described a set of                        To allow for discrimination between the various
experiments designed to test the hypothesis that the                   alternative theories of human performance on the TSP, Best
difficulty of a TSP is due to the number of points falling on          (2004) conducted a set of experiments collecting fine-
the interior of the problem as opposed to those falling on the         grained performance data describing human performance on
convex hull, or outer contour of the problem. In general               the TSP. In addition to recording the quality of individual
they found that human performance was, in fact, less good              solutions, detailed latency data were also collected. These
on those problems with more points in the interior.                    data encompassed all interactions with the task interface at
   Ormerod and Chronicle (1999) conducted experiments to               the level of individual mouse movements recorded at the
determine whether human solvers of the TSP were sensitive              time resolution of the operating system in a computer
to the global contour of individual problems, and found                version of the TSP task. Significant findings included
evidence confirming this hypothesis.                                   effects of problem size on accuracy and latency, individual
   Best and Simon (2000) described a solution method based             differences on accuracy and latency, and a distinct pattern of
on a spatially local search of alternative paths that attained         latency of movement within problems that provided insight
the quality of human solutions with low computational                  into the process used by solvers. The remainder of this
expense. Graham, Joshi, and Pizlo (2000) developed a fully             paper presents a summary of the Best (2004) studies.
parallel solution algorithm for the TSP based on a                        Human solvers were presented with blocks of TSP
hierarchical processing approach and proposed it as a                  problems of the following types: 1) the problem set from
candidate model of human performance on the task.                      MacGregor and Ormerod (1996) consisting of 10 and 20
MacGregor, Ormerod, and Chronicle (2000) advanced a                    point problems, 2) 10 and 20 point problems constructed
different model of human performance on the task,                      from a uniform random distribution, 3) 20 and 30 point
suggesting that the human solution process starts with the             problems constructed from a uniform random distribution,
convex hull, and iteratively adds points to the solution by            and 4) problems with definite contours (e.g., points selected
comparing costs among the remaining (unused) points, and               along intersecting lines). Solvers connected points in the
selecting the lowest cost insertion.                                   order of their choosing but were not permitted to backtrack.
   Figure 1 displays a TSP with the convex connected by                The performance of human solvers in percentage deviation
arcs and with one insertion of an interior point (point 3)             from the optimal solution is presented in Table 1.
                                                                   256

   Table 1: Quality of Human Solution by Problem Type                  latency performance for individual moves for random 10
                (% above optimal ± SD).                                point problems (similar results are obtained for other
                                                                       problem types but are omitted here due to space limitations).
   Problem type                   Human Performance
   MacGregor & Ormerod            2.7%±1.7%
   (1996) 10 Point                                                                            Latency by Move
                                                                                     7000
   MacGregor & Ormerod            8.2%±2.9%
   (1996) 20 Point
                                                                                     6000
   Random 10 Point                1.7%±1.2%
   Random 20 Point                4.1%±3.0%                                          5000
   Random 30 Point                5.0%±1.1%
   Shaped                         3.7%±2.5%                                          4000
   In addition to variation of problem type, solvers were also                       3000
presented with two other manipulations: 1) a repeated block
of 20 point problems to determine the impact of learning                             2000
(the improvement was non-significant; see Table 2), and 2)
                                                                            95% CI
                                                                                     1000
an interface manipulation where the problem was blurred
except for the area immediately around the mouse pointer.                                 0
The intention of this manipulation was to examine the                                         LAT01_1      LAT03_1     LAT05_1    LAT07_1   LAT09_1    LAT11_1
                                                                                                   LAT02_1      LAT04_1     LAT06_1    LAT08_1   LAT10_1
detrimental effects of obscuring the global display
information. Surprisingly, performance was actually better               Figure 2: Latency in ms for moves 1-11 during 10 point
in this condition (though non-significantly; see Table 3).                 random problem solution (with standard error bars).
Table 2: Quality of human solution on 20 point problems in                The mouse movement data from the task was analyzed to
         blocks 1 and 2 (% above optimal ± SD).                        provide a more complete picture of the TSP solution
                                                                       process. The initial moves during problem solution were
 Random 20 Point Block 1        Random 20 Point Block 2                characterized by a large number of individual mouse
 4.1%±3.0%                      3.1%±1.3%                              strokes, representing exploratory movements around the
                                                                       problem (Figure 3 presents results for random 20 point
 Table 3: Quality of human solution for random 10 and 20               problems; other problem types produced consistent results).
  point problems using the normal and obscured interface               Although it is normal to covertly shift attention without
                (% above optimal ± SD).                                moving the mouse, the converse is unlikely, and these
                                                                       individual mouse movements can be interpreted as shifts of
   Problem Set          Normal            Obscured
                                                                       attention. This indicates that there is significant scanning of
   Random 10 Point      1.7%±1.2%         0.7%±0.6%
                                                                       the problem during the initial stages of solution, and rules
   Random 20 Point      4.1%±3.0%         2.7%±2.0%
                                                                       out a purely “pop out” explanation of human performance.
   Human solutions were also characterized in terms of
latency to complete solutions (Table 4).                                                  Zero Crossings by Move
                                                                                     16
   Table 4: Latency of human solution by problem type
                                                                                     14
                (time in seconds ± SD).
                                                                                     12
   Problem type                   Human Performance
   MacGregor & Ormerod            23.8s±16.2s                                        10
   (1996) 10 pt
                                                                                     8
   MacGregor & Ormerod            39.6s±19.4s
   (1996) 20 pt                                                                      6
   Random 10 Point                15.2s±5.6s
   Random 20 Point                29.3s±10.3s                                        4
   Random 30 Point                52.3s±33.6s
                                                                            95% CI
                                                                                     2
   Shaped                         16.8s±6.7s
                                                                                     0
                                                                                      ZCRS01_1          ZCRS05_1     ZCRS09_1    ZCRS13_1   ZCRS17_1   ZCRS21_1
  Besides accuracy for complete solutions, the resolution of                                    ZCRS03_1     ZCRS07_1     ZCRS11_1    ZCRS15_1   ZCRS19_1
the data permits examining latency for moves within a
particular solution (i.e., for each move from the first move           Figure 3: Individual mouse movements taken for moves 1-
to the last move). Figure 2 shows a graph of the human                  21 during problem solution for 20 point random problems
                                                                                       (with standard error bars).
                                                                 257

   Summarizing the results of Best (2004), human                               Using Constraints from Human Performance
performance during the solution process is characterized by                        to Develop a Computational Model
the following findings: 1) Problem solution times are
approximately linearly proportional to the number of                      The constraints from empirical studies of human
problem points, with individual moves taking ~1.5 seconds;                performance on the TSP suggest that a computational model
                                                                          of human performance should incorporate the following
2) Solution accuracy is generally within ~5% of optimal
                                                                          elements: 1) a global, parallel process that produces the
path length for the majority of solvers and problems; 3)
                                                                          convex hull of the problem, 2) a hierarchical clustering
Accuracy is lower on more complex problems where                          process that decomposes the problem into sub-problems for
complexity is determined by factors including the number of               local solution, 3) a serial method of local search that
points in a problem, problem shape, and the number of                     considers a roughly constant-sized set of candidate points,
interior (non-convex hull) points; 4) Problem solving is                  and 4) a perceptual method for avoiding premature closure
preceded by 2-3 seconds during which the problem is                       of paths (which would produce crossed arcs).          The
scanned and a rough solution is developed; 5) Planning                    remainder of this paper describes the construction and
requires only low-frequency spatial information provided by               evaluation of such an algorithm, designated the GL-TSP
a blurred display; 6) The pattern of mouse movement                       (Global-Local TSP solver).
involved initial travel that was indirect, consisting of
multiple exploratory movements, while beyond the first two                Mechanisms for Clustering and Contour
moves, mouse movements become more direct and there is                    Perception
a reduction of distance traveled and time and strokes taken;              Compton and Logan (1993) described an extension to the
7) Evidence for learning is minimal indicating that the                   CODE theory of clustering which was developed to account
strategies and processes used by human solvers are innate or              for human behavior in grouping (clustering) of dot
well-practiced, and therefore general (e.g., perceptually                 diagrams. Although related to theoretical approaches such
based, weak methods, etc.).                                               as Kubovy and Wagemans (1995), and computational
                                                                          approaches based on hierarchical clustering methods, this
        Implications for Modeling Human                                   theory provides an added advantage by describing a
                  Performance                                             ‘strength of grouping’ surface which allows the direct
The experimental data presented above demonstrates that                   calculation of goodness of Figure (Best, 2004).
the human performance scales roughly linearly with                           The CODE theory specifies the construction of a ‘strength
problem size. This implies that the human solution is likely              of grouping’ surface where the value of the surface at any
to rely on either parallel processing, or a locally constrained           point is given by the sum of exponential intensity
serial search that only considers a constant sized subset of              distributions centered about the problem points. Each of
the problem as solutions progress, or some combination of                 these distributions has a standard deviation proportional to
these. In fact, the data is sufficiently detailed to rule out all         the distance to the nearest point. A two-dimensional cross
of the aforementioned computational accounts of human                     section of an example surface produced by three points is
performance on the problem.                                               shown in Figure 4 while a three dimensional depiction of a
   The model of Best and Simon (2000) does not consider                   CODE surface is shown in Figure 5.
the contour of the entire problem (the convex hull) to
formulate a rough solution. The data collected by Best
(2004) indicates that human solvers do, in fact, start with a
                                                                           Strength of Grouping
rough solution, while Ormerod and Chronicle (1999)
demonstrated that human solvers were both sensitive to and
used the convex hull in judgments of TSP solution quality.
   The model of Graham, Joshi, and Pizlo (2000) does not                                                                                          Threshold
proceed with a serial solution process the way human
solvers do. The similarity between human solutions using
the obscured interface in Best (2004) with the normal                                                                 P1    P2         P3
interface indicates that human solvers are not simply                                             Figure 4: Cross section of strength of grouping surface
playing out a complete solution that was developed prior to                                                   corresponding to three points.
working on the problem, but rather are working
interactively with the problem in a serial fashion.                       Goodness of Figure Calculations The calculation of
   The model of MacGregor, Ormerod, and Chronicle                         goodness of Figure can be accomplished by using the
(2000) does not consider just the (locally) relevant points at            ‘strength of grouping’ surface produced by the algorithm the
a particular point in the solution process. However, mouse-               CODE theory is based on. By inspecting the shape of the
tracking results from Best (2004) show only local                         surface between any two points, a determination of
movements later in problem solving, thus ruling out this                  goodness can be produced through calculating the number
model                                                                     of distinct bumps (i.e., zero crossings of the derivative). For
                                                                          the purposes of this algorithm, any two points that can be
                                                                    258

reached across the surface without crossing any additional        Integrating Local and Global Processes into a TSP
bumps are defined as a ‘good’ path and is perceptually            Solver
valid. An example of a TSP displaying the good paths
                                                                  The GL-TSP algorithm integrates a global level that
obtained using this method is presented in Figure 5 (the
                                                                  produces a rough solution to the problem, and a local level
paths are superimposed over the three dimensional CODE
                                                                  that searches through the local section of the rough global
surface which is displayed in relief).
                                                                  plan.
                                                                     The global plan is initially constructed from the convex
                                                                  hull of the clusters produced by the CODE algorithm.
                                                                  However, this may leave out some number of clusters from
                                                                  inclusion in the plan, and, if so, these clusters must be
                                                                  integrated prior to the implementation of the local solution
                                                                  (that is, deciding whether a cluster will be included in the
                                                                  portion of the local solution being worked on must be
                                                                  completed prior to working on that section). These orphan
                                                                  clusters are included by inserting the cluster between a pair
                                                                  already included in the plan that minimally increases the
                                                                  overall path length (subject to noise in distance estimation).
                                                                  These insertions are rarely necessary in problems of 10
                                                                  nodes, since most points fall within a cluster that makes up
                                                                  the hull of clusters, but become an important determiner of
                                                                  overall solution shape for problems of 20 and more nodes.
                                                                  Thus, the global plan can be considered a convex hull
                                                                  cheapest insertion algorithm performed on the clusters
                                                                  instead of on individual points. The result of the global
                                                                  planning process is an ordering of the clusters, while
                                                                  ordering of individual points is left up to the local stage of
  Figure 5: Good paths (perceptually valid paths) extracted       the algorithm.
              from strength of grouping surface.                     At each local stage of the algorithm, a path must be
                                                                  planned through a set of potential nodes. This set of nodes
Mechanisms for Local (Serial) Search                              is created by adding nodes from the current cluster in the
Recasting problem solving as search through a problem             global plan. If the set then contains less than six nodes,
space has a long history within problem solving research          nodes are added from the next cluster in order from the
(e.g., Newell and Simon, 1972). More recent efforts, such         global plan. If the set still contains less than six nodes,
as Gobet (1997) and Gobet and Simon (1996), have                  nodes are added from the third cluster in order. If, at this
carefully specified the constraints and limitations of search     point, there are only three nodes in the set (i.e., each of the
as a human problem solving process. One of the primary            clusters was a single point), nodes from a fourth cluster are
findings of this research is that pruning and selective
                                                                  added. This results in a set of, at most, six nodes, and at
exploration play a significant role in reducing the number of
                                                                  least, four nodes (except when there are no nodes remaining
computations performed by human solvers. That is, human
solvers do not perform exhaustive search, but instead             in the problem). The GL-TSP algorithm establishes a goal
perform a more limited search of the better options in the        to reach the last node in this set (the farthest along in the
search space.                                                     global plan), and establishes subgoals to visit all of the
   Human solvers of the TSP appear to have two main               intervening nodes. It then uses the operation of traversing
methods for reducing the computational complexity of the          individual perceptually valid paths to reduce the difference
search space. One of these methods is the hierarchical            from the goal state, and finds a solution path that reaches the
decomposition of the overall problem into smaller problems,       target node. Multiple solution paths are evaluated in terms
which is achieved by clustering and forming a rough overall       of their complete distance (subject to noise in estimation),
plan without considering details. The other method is the         and the first node along the chosen path is selected by
dependence on good paths in the representation of the             connecting that edge. The local stage of the algorithm then
problem which reduces the number of branches at each              repeats (without saving its previous result) and replans from
point in the search space. Although the total number of TSP       the new current node.
solutions possible is equal to the factorial of the number of        The local search is conducted according to the following
points, the number of perceptually valid paths is                 pseudocode:
substantially less than that, and allows search to proceed in
a remarkably smaller subspace.                                       1) Set the cluster index to the current cluster (cluster 1)
                                                                     2) Add nodes from the indexed cluster until either:
                                                                          a) The planning set contains six nodes
                                                                          b) The planning set contains all remaining nodes
                                                              259

  3) If (the planning set contains less than six nodes and             human data. In general, the latency results for the GL-TSP
     the cluster index is < 3)                                         algorithm are consistent with human performance, with the
  4) or (the planning set contains three nodes) then:                  GL-TSP latency estimate falling within the confidence
     a) Increment the cluster index                                    interval for human performance on almost every individual
     b) Go to step 2                                                   problem. It is especially noTable that the GL-TSP latency
                                                                       predictions scale almost exactly with the human
  The selection of an endpoint for the local search                    performance, while the Nearest Neighbor method does not.
differentiates this method from hill-climbing. The path
selected is the shortest path, given the endpoint. Shorter
paths are possible among the set of points. Further, the                                           Individual Problem Solution Times
individual step taken need not be the shortest: it is simply                                        Random 10 and 20 Point Problems
the first step along the shortest path to the chosen endpoint                              60000
and may be longer than alternative choices. This local
search can be characterized overall as an optimal shortest-                                50000
path solver, made stochastic by perceptual noise, and                                      40000
                                                                                                                                                        METHOD
limited to searching the representation provided by the
clustering algorithm.
                                                                          95% CI LATENCY
                                                                                           30000
                                                                                                                                                          GL-TSP
                                                                                           20000
                   Model Evaluation                                                                                                                       human
                                                                                           10000
The GL-TSP algorithm described here makes an explicit
accuracy prediction based on the solutions obtained for                                       0                                                           NearestNeighbor
individual problems, and an explicit latency prediction for                                          1.00   3.00   5.00   7.00   9.00 11.00 13.00
                                                                                                        2.00   4.00   6.00   8.00   10.00 12.00 14.00
each individual problem based on the time taken to compute
a global plan, the local hierarchical decomposition, and the                                       PROBLEM
available perceptually good paths within the local part of the
problem. The algorithm uses noise in distance estimation to
                                                                       Figure 6: Latency of human performance compared to the
produce stochastic behavior, so algorithm results are
                                                                       Nearest Neighbor algorithm and the GL-TSP algorithm for
produced by aggregating multiple runs.
                                                                          10 and 20 point problems with standard error bars.
   A latency prediction for solving each problem was
constructed by adding an estimate for constructing the
global plan at 300ms per node of the problem                                                        Individual Problem Solution Times
(approximately 3 seconds for a 10-point problem), plus
900ms for every untraversed perceptually ‘good’ path                                                Random 20 and 30 Point Problems
                                                                                           140000
emanating from the current node (approximately 3 eye
fixations to measure the path), plus 300ms to actually make                                120000
the move.      These estimates allow direct comparison                                     100000
between the latency pattern that arises from the basic                                                                                                  METHOD
                                                                                           80000
operations of the GL-TSP algorithm and the pattern of
                                                                                           60000
                                                                          95% CI LATENCY
latencies demonstrated by human solvers.           Since all                                                                                              GL-TSP
variation of predictions of latency for problems of the same                               40000
size is due solely to the number of available perceptually                                 20000                                                          human
good paths (for a given problem size, the latency associated                                   0
with constructing a global plan and making moves is                                        -20000                                                         NearestNeighbor
constant), the latency prediction of this model is that more                                            14 0
                                                                                                        13 0
                                                                                                        12 0
                                                                                                        11 0
                                                                                                        10
                                                                                                        9.
                                                                                                        8.
                                                                                                        7.
                                                                                                        6.
                                                                                                        5.
                                                                                                           .0
                                                                                                           .0
                                                                                                           .0
                                                                                                           .0
                                                                                                           .0
                                                                                                          00
                                                                                                          00
                                                                                                          00
                                                                                                          00
                                                                                                          00
                                                                                                             0
available options will require serial consideration and
                                                                                                        4.
                                                                                                        3.
                                                                                                        2.
                                                                                                        1.00
                                                                                                          00
                                                                                                          00
                                                                                                          00
thereby slow the decision time.                                                                     PROBLEM
   For the purpose of comparison, the Nearest Neighbor
algorithm also generates latency predictions. In this case,            Figure 7: Latency of human performance compared to the
the prediction is a multiple of the number of algorithmic              Nearest Neighbor algorithm and the GL-TSP algorithm for
comparisons made allowing comparison to the GL-TSP                        20 and 30 point problems with standard error bars.
algorithm in terms of computational steps taken.
   Figure 6 shows latency predictions for problems                        Since these estimates are based on the actual number of
consisting of 10 and 20 randomly distributed points while              comparisons made by the serial level of the model, this is a
Figure 7 shows latency predictions for problems consisting             demonstration of the feasibility of achieving a roughly
of 20 and 30 randomly distributed points. The latency                  linear time complexity performance through leveraging a
predictions are presented in the Figures with actual human             parallel system that performs clustering (as well as
performance on the task, showing standard error bars for the           ‘goodness of path’ evaluations). The Nearest Neighbor
                                                                 260

algorithm, and in fact, any algorithm that considers all         and traverses the problem state graph in pursuit of a
available remaining candidate points at each step, does not      solution.
scale in the same way as either the human performance or
the GL-TSP algorithm.                                                                Acknowledgments
  Although the latency results are consistent with human         The work described here was completed at Carnegie Mellon
performance, this would be meaningless unless the quality        University as a doctoral thesis (Best, 2004) under the
of the performance also corresponded to human results. The       advising of John Anderson and Herb Simon. The complete
representative model performance is presented in Table 5.        data and models for this project are publicly available and
                                                                 are archived at http://act.psy.cmu.edu/ftp/models/tsp/.
 Table 5: Quality of human solution compared to quality of
        algorithm solution (% above optimal ± SD).
                                                                                          References
    Problem type           Human           GL-TSP                Best, B. J. (2004). Modeling Human Performance on the
    MacGregor          &   2.7%±1.7%       1.1%±1.8%               Traveling Salesperson Problem: Empirical Studies and
    Ormerod (1996) 10                                              Computational Simulations. Doctoral dissertation,
    MacGregor          &   8.2%±2.9%       3.9%±5.3%               Department of Psychology, Carnegie Mellon University,
    Ormerod (1996) 20                                              Pittsburgh, PA.
    Random 10 Point        1.7%±1.2%       0.2%±1.0%             Best, B. J., and Simon, H. A. (2000).              Simulating
    Random 20 Point        4.1%±3.0%       5.2%±7.6%               Performance on the Traveling Salesman Problem.
    Random 30 Point        5.0%±1.1%       7.4%±7.7%               Proceedings of the 2000 International Conference on
    Shaped                 3.7%±2.5%       2.6%±3.8%               Cognitive Modeling, pp. 42-49.
                                                                 Compton, B. J., and Logan, G. D. (1993). Evaluating a
                                                                   computational model of perceptual grouping by
  Looking at accuracy in the aggregate, the GL-TSP
                                                                   proximity. Perception & Psychophysics, 53(4), pp. 403–
algorithm slightly outperforms the mean human
                                                                   421.
performance, but falls within the demonstrated range of          Gobet, F. (1997). A pattern-recognition theory of search in
human performance.                                                 expert problem solving. Thinking and Reasoning, 3, pp.
                                                                   291-313.
                        Conclusion                               Gobet, F., and Simon, H. A. (1996). The roles of
This report summarizes the work presented by Best (2004)           recognition processes and look-ahead search in time-
describing the development of a computationally                    constrained expert problem solving: Evidence from
instantiated theory that describes human performance on the        grandmaster level chess. Psychological Science, 7, pp. 52-
Traveling Salesperson Problem. This theory is supported by         55.
a wide variety of empirical constraints and evidence that        Graham, S. M., Joshi, A., and Pizlo, Z. (2000). The
simultaneously argue against existing models of human              traveling salesman problem: A hierarchical model.
performance on the task. It is composed of a parallel              Memory & Cognition, 28, pp. 1191-1204.
                                                                 Kubovy, M., and Wagemans, J. (1995). Grouping by
process that performs hierarchical clustering and contour
                                                                   proximity and multistability in dot lattices: a quantitative
detection, and a serial problem-space search process that
                                                                   gestalt theory. Psychological Science, 6(4), pp. 225–234.
performs local search along the rough solution plan. The         MacGregor, J. N., and Ormerod, T. (1996). Human
serial portion of the algorithm is subject to substantial          performance on the traveling salesman problem.
processing constraints that allow only a limited amount of         Perception and Psychophysics, 58, pp. 527-539.
processing. These limitations are overcome by leveraging a       MacGregor, J. N., Ormerod, T., and Chronicle, E. P. (2000).
parallel perceptual implementation that allows the serial          A model of human performance on the traveling
portion of the model to focus on comparing relatively good         salesperson problem. Memory & Cognition, 28(7), pp.
options, rather than exhaustively comparing all options.           1183-1190.
This theory explains both the quality of human performance       Michie, D., Fleming, J. G., and Oldfield, J. V. (1968). A
on the TSP task and the latency performance of human               comparison of heuristic, interactive and unaided methods
performance on the TSP task. In particular, it provides a          of solving a shortest-route problem.               Machine
compelling account of the roughly linear scaling of human          Intelligence, 3, pp. 245-255.
solution times when comparing solutions of varying sizes.        Newell, A., & Simon, H. A. (1972). Human problem
  Although this theory is presented as a specific theory for       solving. Englewood Cliffs, NJ: Prentice-Hall.
solving TSPs, it is composed of two independent portions         Ormerod, T. C., and Chronicle, E. P. (1999). Global
that are significantly more general and have been validated        perceptual processing in problem solving: The case of the
in other domains: a perceptual front end that produces a           traveling salesperson. Perception and Psychophysics, 61,
hierarchically clustered representation of dot patterns and        1227-1238.
good paths connecting the dots, and a general search
mechanism that works on a problem space representation
                                                             261

