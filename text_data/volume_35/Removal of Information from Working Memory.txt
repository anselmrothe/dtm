UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
Removal of Information from Working Memory
Permalink
https://escholarship.org/uc/item/52n521t3
Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 35(35)
Authors
Ecker, Ullrich
Lewandowsky, Stephan
Oberauer, Klaus
Publication Date
2013-01-01
Peer reviewed
 eScholarship.org                                 Powered by the California Digital Library
                                                                    University of California

                              Removal of Information from Working Memory
                                        Ullrich K. H. Ecker (ullrich.ecker@uwa.edu.au)
                                         School of Psychology, University of Western Australia
                               Stephan Lewandowsky (stephan.lewandowsky@bristol.ac.uk)
                                    Department of Experimental Psychology, University of Bristol
                                         School of Psychology, University of Western Australia
                                      Klaus Oberauer (k.oberauer@psychologie.uzh.ch)
                                            Department of Psychology, University of Zurich
                             Abstract                                 capacity and unique to situations that demanded WM updat-
                                                                      ing (Ecker, Lewandowsky, Oberauer, & Chee, 2010). In that
   Standard working memory (WM) updating tasks confound up-
   dating requirements with generic WM functions. We intro-           study we analyzed the processing components involved in
   duce a method for isolating a process unique to WM updat-          widely used WM updating tasks, and we identified three sepa-
   ing, namely the removal of no-longer relevant information. In      rable components: retrieval, transformation, and substitution.
   a modified version of an established updating paradigm, to-
   be-updated items were cued before the new memoranda were           Ecker et al. found that retrieval and transformation operations
   presented. Longer cue-stimulus intervals—that is, longer re-       co-varied with general WM capacity, but that the substitution
   moval time—led to faster updating, showing that people can         component did not. We thus argued that substitution is the
   actively remove information from WM. Well-established ef-
   fects of item repetition and similarity on updating RTs were       only process that uniquely represents WM updating, without
   diminished with longer removal time, arguably because rep-         being “contaminated” by any association with WM. One im-
   resentational overlap between out-dated and new information        plication of this analysis is that previous studies measuring
   becomes less influential when out-dated information can be re-
   moved prior to new encoding. The benefit of removal time was       WM updating did not separate variance unique to updating
   found only for partial updating, not for complete updating of      from the variance of generic WM processes.
   entire memory sets. We conclude that removal of out-dated in-         In this article, we further decompose the components of
   formation can be experimentally isolated, and that removal is
   a unique, active WM updating process.                              WM updating. In Ecker et al. (2010), we suggested that infor-
   Keywords: Working memory updating; Executive functions             mation substitution can be further subdivided into the removal
                                                                      of outdated information and the encoding of new informa-
   Imagine you ask a colleague for his phone extension and he         tion. As encoding is a simple and generic operation involved
replies: “It’s 3266. No, hang on, in my new office it’s 3257.”        in many cognitive tasks, we argue that it is the removal pro-
Ideally, one should easily discard the last two digits of the         cess that lies at the heart of memory updating. Accordingly,
outdated information (i.e., “66”) and replace them in working         we focus on the removal of information from WM. Here we
memory (WM) with the correct digits (i.e., “57”). However,            show that removal of outdated information can be separated
this updating of WM content is no trivial task, and outdated          experimentally from encoding of new information.
information often continues to affect WM (Oberauer, 2001).               Our removal measure is based on the work of Kessler and
   WM updating has been identified as one of three primary            Meiran (2008). In the updating paradigm they used, items
executive processes (Miyake, Friedman, Emerson, Witzki, &             (e.g., letters or digits) are presented in a set of individual
Howerter, 2000). Updating has been claimed to be the only             frames. Items are then repeatedly updated by presenting new
executive process to predict fluid intelligence (Friedman et          items in some frames. On each updating step, between one
al., 2006). However, most updating tasks used in previous             and n items are updated, where n is the memory set size (equal
research (e.g., Miyake et al., 2000) not only require WM up-          to the number of frames). Participants had to press a key at
dating but arguably also measure general WM abilities. This           the end of each step to indicate that they finished updating.
has led some to conclude that updating tasks constitute re-              Kessler and Meiran (2008) proposed a distinction between
liable assays of general WM capacity (Schmiedek, Hilde-               local and global updating. Local updating refers to changes
brandt, Lövdén, Wilhelm, & Lindenberger, 2009).                     made to individual items, whereas global updating refers to
   This creates an unsatisfactory situation. If WM updating           the integration of all items in the current memory set after
tasks measure just the same as other WM tasks such as com-            individual items were changed. A key piece of evidence for
plex span tasks, then why call them updating tasks? Both              this distinction comes from the observation (Experiment 3 in
conceptually and theoretically, updating can be distinguished         Kessler & Meiran, 2008) that updating RTs increased with the
from maintenance and processing in WM. If updating is to be           number of to-be-updated items up to n−1 items, but updating
established as a non-redundant construct, it must be isolated         was much faster again when all n items were to be replaced
and measured separately from other WM processes.                      on a given step. Thus, updating latencies depended in a non-
   In a recent individual-differences study, we identified a          monotonic fashion on the number of to-be-updated items.
processing component that was independent of general WM               Kessler and Meiran (2008) explained this non-monotonicity
                                                                  400

by assuming that partial updates require a complex sequence          idea in a series of four experiments.
of (1) unbinding of the integrated representation of the pre-
vious memory set, (2) substitution of some but not all items                                  Experiment 1
(i.e., the actual local updating), followed by (3) re-binding        In Ecker et al. (2010), we found that repeating (i.e., main-
the new set as part of the global updating process. In con-          taining) an item during an updating task carries a benefit of
trast, when the entire set is updated, steps (1) and (2) can be      nearly 400 ms. Experiment 1 tested the idea that this bene-
omitted, the old set is simply discarded and a new memory            fit should diminish when people are given the opportunity to
set is encoded and globally updated.                                 remove outdated information before encoding the (identical)
                                                                     updated item.
   Our interpretation of the non-monotonicity of updating la-
tencies is a specific instantiation of the ideas of Kessler and      Method
Meiran (2008), motivated by a computational model of WM,             Experiment 1 used a letter updating task in which each trial
SOB (Lewandowsky & Farrell, 2008). SOB is a two-layer                consisted of an encoding stage, an updating stage with mul-
neural network in which items (represented in one layer) are         tiple updating steps, and a final recall stage. Participants
associated to position markers (represented in the other layer)      encoded 3 letters, presented simultaneously in individual
through Hebbian learning, which rapidly modifies the matrix          frames. This was succeeded by an unpredictable number of
of connection weights between the two layers. In the present         updating steps; each updating step involved only a single, ran-
updating paradigm, the position marker would represent the           domly selected letter. In most cases, the outdated letter was
location of the item’s frame on the screen. Forgetting in SOB        replaced with a new letter, but sometimes the letter repeated.
is entirely based on interference; there is no time-based decay.     Each update was cued before the new letter was presented
To avoid overloading of the system in the absence of decay,          (the respective frame turned red and bold). Presentation time
an interference model requires a mechanism to remove out-            of this cue—henceforth referred to as removal time—was ei-
dated information; such a mechanism is implemented in the            ther 200 ms or 1500 ms. The longer cue should be suffi-
most recent version of SOB (see Oberauer, Lewandowsky,               cient time for removal, whereas the shorter cue should be just
Farrell, Jarrold, & Greaves, 2012). Removal of a specific            enough time to focus attention on the to-be-updated frames
item involves retrieving that item by cueing with its posi-          without permitting removal. After each updating step, the
tion marker, and “unlearning” the association between that           frames were blanked for 500 ms or 1800 ms in the long and
item and its position. Unlearning is computationally imple-          short removal-cue condition, respectively, ensuring equal re-
mented as Hebbian anti-learning. Thus, in SOB the idea of            tention intervals in both conditions. The experiment had a
“unbinding” (cf. Kessler & Meiran, 2008) refers specifically         2 (repetition no/yes) × 2 (removal time: short/long) within-
to the unbinding of selected items from their position mark-         subjects design.
ers. Both encoding and removal of individual items take time
(cf. Oberauer, 2001). By contrast, wholesale removal of an           Participants We tested 15 participants, mainly students
entire memory set can be achieved by simply resetting the            from the University of Western Australia (UWA).
entire weight matrix, which we assume to be a very rapid
                                                                     Apparatus & Procedure The experiment was controlled
process. This explains why updating the entire memory set is
                                                                     by a MatLab program. There were 32 trials, each featuring
faster than partial updating.
                                                                     on average 9 updating steps (the number of updating steps
   In SOB, removal of old information and encoding of new            ranged from 1 to 21). The probability of item repetition dur-
information are described as two separate processing steps.          ing updating was set at p = 0.15. We chose this low rate of
It follows that updating should be facilitated if a cue about        repetition to ensure that removal of outdated information was
what information needs to be removed is given ahead of               still an attractive strategy. At each updating step, participants
the to-be-encoded new information. In standard WM up-                were required to press a key when they had finished updat-
dating tasks—including the one used by Kessler and Meiran            ing (max. response time was 5 s). This updating RT was
(2008)—removal can only begin when the new item(s) are               the dependent variable of main interest. At the end of each
presented. For example, when updating the telephone exten-           trial, participants were prompted to recall all three letters in
sion from from 3266 to 3257, one can only begin removing             random order.
the “66” when given the “57”. Hence updating times in such
a task will include both time for removal and time for en-           Results
coding. In our new updating task we present cues indicating          Updating response time data are shown in Figure 1.
which items are to be updated before presenting the new to-              A 2 × 2 repeated measures ANOVA on updating RTs with
be-encoded stimuli. People can use the cue only to selectively       the factors repetition (no/yes) and removal time (short/long)
remove old items from the memory set, not to encode new in-          yielded a main effect of repetition, F(1, 14) = 15.23, MSE =
formation. By varying the cue-stimulus interval, we vary the         0.03, p < .01, η2p = 0.52, a main effect of removal time,
available time for removal. If longer available removal time         F(1, 14) = 9.78, MSE = 0.01, p < .01, η2p = 0.41, and cru-
leads to faster updating RTs, people must have used the cue-         cially, a significant interaction, F(1, 14) = 8.22, MSE = 0.01,
stimulus interval for removal or unbinding. We tested this           p = .01, η2p = 0.37. The interaction indicates that the effect of
                                                                 401

repetition on updating RTs is larger with short removal (265                    of one of the digits (yes/no). This resulted in four updat-
ms) than long removal time (86 ms).                                             ing conditions, which had different probabilities of occur-
                                                                                rence: proximal/repeating (e.g., updating from 18 to 19;
                                                                                p = .15), proximal/non-repeating (e.g., updating from 20 to
                            1.2                              Repetition
                                                                 No
                                                                                18; p = .15), distant/repeating (e.g., updating from 59 to 19;
                            1.1                                  Yes            p = .15), and distant/non-repeating (e.g., updating from 18 to
                                                                                59; p = .50). Proximal updates ranged from −3 to +3 (ex-
 Updating RT (in seconds)
                            1.0
                                                                                cluding zero); distant/repeating updates were constrained to
                            0.9
                                                                                multiples of 10, and distant/non-repeating updates used prime
                            0.8                                                 numbers from 13 to 83. Filler updates with intermediate prox-
                            0.7                                                 imity (±4 − 8) were used with p = .05. Positive and negative
                            0.6
                                                                                updates were randomly intermixed (this was not considered
                                                                                an experimental factor). Removal time was again an addi-
                            0.5
                                                                                tional factor (short/long).
                            0.4
                                                                                Participants We tested 27 UWA students.
                            0.3
                                  Short (200 ms)     Long (1500 ms)
                                                                                Apparatus & Procedure The apparatus and procedure was
                                          Removal-cue Time
                                                                                identical to Experiment 1, with the exception that the experi-
                                                                                ments had 36 trials.
Figure 1: Updating response times from Experiment 1. Ver-
tical bars denote within-subject standard errors of the mean.                   Results
                                                                                Updating response time data are shown in Figure 2.
Discussion
                                                                                                            1.7                               Similarity
Experiment 1 demonstrated that the benefit of item repeti-                                                                                         Low
                                                                                                            1.6                                    High
tion during memory updating (Ecker et al., 2010) is strongly
                                                                                 Updating RT (in seconds)
                                                                                                            1.5
reduced if participants are given sufficient time to remove
outdated information prior to the encoding of the updated                                                   1.4
information. In a sense, if there is no time for removal, a                                                 1.3
condition with repeating items does not require true mem-
                                                                                                            1.2
ory updating—the established item representation in WM
can be maintained, no information needs to be removed and                                                   1.1
substituted—hence the time advantage of repetition. In con-                                                 1.0
trast, to the degree that an item is removed from WM, the time
                                                                                                            0.9
taken to encode a new item into that position will no longer
depend on the identity of the removed item. This result pat-                                                0.8
                                                                                                                  Short (200 ms)      Long (1500 ms)
tern supports our notion that active removal of information is
                                                                                                                             Removal Time
integral to WM updating under normal conditions (i.e., when
there is no opportunity to “outsource” the removal process.
                                                                                Figure 2: Updating response times from Experiment 2. Ver-
                                      Experiment 2                              tical bars denote within-subject standard errors of the mean.
Experiment 2 had a similar rationale. Previous research                            For the sake of simplicity, we collapsed the three ‘simi-
(Lendinez, Pelegrina, & Lechuga, 2011) had shown that up-                       lar’ conditions into one, and ran a 2 × 2 repeated measures
dating numbers is quicker when the new to-be-remembered                         ANOVA with the factors similarity (low/high) and removal
number is similar to the outdated number. Experiment 2                          time (short/long). We found reliable main effects of simi-
tested whether this benefit would diminish if participants                      larity, F(1, 26) = 11.38, MSE = .01, p < .01, η2p = 0.30, and
were given sufficient time to remove the outdated number be-                    removal time, F(1, 26) = 101.43, MSE = .02, p < .001, η2p =
fore encoding the new number.                                                   0.80. Most importantly, these main effects were qualified by
Method                                                                          a significant interaction: the similarity effect was larger with
                                                                                short removal time (116 ms) than long removal time (38 ms),
The task in Experiment 2 was very similar to Experiment                         F(1, 26) = 6.04, MSE = .01, p = .02, η2p = 0.19.
1, but it used two-digit numbers. During updating, about
half the updates used similar and dissimilar numbers, re-                       Discussion
spectively. This was achieved by manipulating both the                          Experiment 2 demonstrated that a well-documented similar-
proximity of numbers (proximal/distant) and the repetition                      ity effect in memory updating is diminished when participants
                                                                          402

are given time to remove a to-be-updated item from memory                it was much smaller with three frames than with one or two
before encoding the new item. This supports our notion of                frames (53 vs. 362 ms).
removal: We assume that the similarity effect in memory up-
dating arises because of representational overlap between the
replaced and the new item. That is, two similar numbers share                                                                       Removal Time
                                                                                                     1.7
                                                                                                                                          Short (200 ms)
a digit and/or a region in number space, and to the degree that                                      1.6
                                                                                                                                          Long (1500 ms)
only new features are substituted, not entire item representa-
                                                                          Updating RT (in seconds)
                                                                                                     1.5
tions, this similarity will facilitate updating. Yet, the more
an item representation is removed before the updated number                                          1.4
can be encoded, the less facilitation there will be.                                                 1.3
   Having established some support for our notion of removal,                                        1.2
we now turn to a test of our prediction that an active removal
                                                                                                     1.1
process is only utilized during partial updates, not global up-
dates (which unlike partial updates can be achieved more ef-                                         1.0
ficiently by ‘wiping’ memory, or in SOB terms, by resetting                                          0.9
the weight matrix).                                                                                  0.8
                                                                                                           1              2               3
                      Experiment 3                                                                             Number of Updated Frames
Based on the distinction between slow selective removal and
                                                                         Figure 3: Updating response times from Experiment 3. Ver-
fast resetting of the weight matrix, we predicted that longer
                                                                         tical bars denote within-subject standard errors of the mean.
removal times should lead to a substantial time gain in partial
updating, but little gain on updating steps replacing the entire
memory set.                                                              Discussion
   In Experiment 3, the letter updating task was modified such
                                                                         The results of Experiment 3 support our hypothesis that par-
that each updating step could update the memory set either
                                                                         tial updating of a memory set involves a process of active
partially or entirely (i.e., 1-, 2-, or 3-frame update).
                                                                         removal. “Bringing forward” this removal process by cue-
Methods                                                                  ing the to-be-updated frames prior to presentation of the new
                                                                         items sped up partial updating substantially. This time saving
Participants Sixty-nine UWA undergraduates participated.                 of roughly 300-400 ms can be interpreted as the time that is
Apparatus and Procedure Apparatus and procedure were                     required to remove information from WM.
identical to previous experiments except that on each step,                 In contrast, the opportunity to remove items from memory
new letter(s) were presented in 1, 2, or 3 frames, and that              before presentation of new memoranda brought no substan-
there were 28 trials in total.                                           tial advantage when the entire memory set was updated. This
                                                                         finding supports our notion that memory can be cleared al-
Results                                                                  most instantly, and that updating of an entire memory set does
                                                                         not require the time-consuming selective removal process.
Updating response time data are shown in Figure 3.
                                                                            The speed-up induced by the long removal cue did not in-
   A two-way repeated measures ANOVA on updating re-
                                                                         crease with the number of to-be-updated items. This unex-
sponse times yielded a significant main effect of the num-
                                                                         pected observation seems to imply that removing one item
ber of updated frames, F(2, 136) = 64.30, MSE = 0.03, p <
                                                                         from WM takes as long as removing two items. There are
.001, η2p = 0.49, a significant main effect of removal time,
                                                                         two possible explanations. One is that removal of multiple
F(1, 68) = 281.68, MSE = 0.02, p < .001, η2p = 0.81, as well             items can occur in parallel. While this is a theoretical pos-
as a significant interaction, F(2, 136) = 109.55, MSE = 0.01,            sibility, it is at odds with SOB’s notion that items must be
p < .001, η2p = 0.62. Planned contrasts showed that on aver-             retrieved individually to be removed by anti-learning.1
age it took significantly longer to update two frames com-                  The second explanation is that people use the removal time
pared to one (1.44 seconds vs. 1.26 seconds; F(1, 68) =                  only to remove one item, even when two items are about to
146.29, MSE = 0.02, p < .001) and that with 1 or 2 frames,               be updated. This might be an efficient strategy because item-
updating took significantly longer with short as compared to             specific removal is likely to require the focus of attention, and
long removal time (1.53 vs. 1.17 seconds; F(1, 68) = 320.14,             switching the focus of attention to a new item takes time (cf.
MSE = 0.03, p < .001. However, updating three frames was                 Garavan, 1998). Thus, the most efficient use of removal time
relatively quick (1.23 seconds), and removal time had a negli-
gible impact on updating time when all three frames were up-                 1 This explanation may still warrant further investigation, as un-
dated. While the removal time effect was statistically signif-           like our position presented here, people might not use the cue time
                                                                         for a slow removal process, but only to find the to-be-removed items.
icant (arguably due to the large sample size and power; 1.26             However, this explanation cannot easily account for the reduction of
vs. 1.20 seconds; F(1, 68) = 13.59, MSE = 0.01, p < .001),               the repetition/ similarity effects observed in Experiments 1 and 2.
                                                                   403

might be to focus on the first to-be-removed item and remove                                                Experiment 4
it, then wait. As soon as the new item(s) are presented, one              Experiment 3 suggested that people only remove one item
of them can immediately be encoded in the currently focused               even with long removal time. We argued this is in fact ef-
frame. Only then would the focus move on to the second to-                ficient behavior as it minimizes focus and task switch costs.
be-updated item (if there is one).                                        Yet, an alternative hypothesis is that people would have re-
                                                                          moved more information had they had more time. Experi-
   This interpretation is in line with a recent proposal by               ment 4 tested the idea that with sufficient removal time, peo-
Kessler and Oberauer (2013), namely that partial updating                 ple might remove more than one item, and thus show shorter
also involves task-switching, which participants may like-                updating RTs in conditions that would benefit from the re-
wise try to avoid. This notion assumes that, without sub-                 moval of more than one item.
stantial pre-cued removal time, participants scan the items
from the beginning of the list to the end, starting in a main-            Methods
tenance mode (M). Hence, if the first item on the list is not             Participants We tested 34 UWA undergraduates.
updated, people might refresh that representation, then move
to the next item. As soon as they encounter an item that re-              Apparatus and Procedure Apparatus and procedure were
quires updating, they switch to updating mode and actively                identical to Experiment 3 except for the addition of a third,
remove that item from WM (U). Updating frames 1 and 3                     very-long removal time condition (i.e., removal time condi-
would hence require 3 switches, (M)UMU; updating frames                   tions of 200, 1500, and 3000 ms), and the omission of the full
1 and 2 two switches, (M)UUM; updating frames 2 and 3 one                 update condition (i.e., either 1 or 2 frames were updated with
switch, (M)MUU. In the case of 1-frame updates, updating                  each updating step). There were 15 trials in total.
frame 1, (M)UMM, and updating frame 2, (M)MUM, both
require two switches, but updating frame 3 only requires one
                                                                          Results
switch, (M)MMU. A strategy of scanning the list up to the                 Updating response time data are shown in Figure 4.
first to-be-updated item, switching to updating mode, remov-
ing the item, and waiting would hence minimize both focus-                                                                       Removal Time
                                                                                                      1.7                              Short (200 ms)
switch and task-switch costs.                                                                                                          Long (1500 ms)
                                                                                                      1.6                              Very long (3000 ms)
   We applied multi-level regression analysis to the data of
                                                                           Updating RT (in seconds)
                                                                                                      1.5
Experiment 3 to confirm the importance of task switching as                                           1.4
specified above. We coded processes required at each updat-
                                                                                                      1.3
ing step with the following parameters: The number of items
to encode (E; 1-3), the number of items to remove (R; 0-2),                                           1.2
and the number of task switches (SW; 0-3). Additional pa-                                             1.1
rameters were introduced in the modeling, including a wipe
                                                                                                      1.0
(W) parameter (coding the discarding of an entire memory
set), and a refresh (RF) parameter (coding the number of                                              0.9
non-updated, to-be-refreshed items). Importantly, coding dif-                                         0.8
                                                                                                             1                   2
fered for short and long removal time conditions. For exam-
                                                                                                            Number of Updated Frames
ple, with long removal time a two-frame update of frames
2 and 3 would involve no refreshing or switching: Partic-
ipants could use the removal time to refresh the first item,              Figure 4: Updating response times from Experiment 4. Ver-
switch to updating mode for frames 2 and 3, remove the let-               tical bars denote within-subject standard errors of the mean.
ter in frame 2, then wait to encode the new letter in frame
2, and remove the old and encode the new letter in frame 3                   A 2 × 3 repeated measures ANOVA on updating RTs with
(RF = SW = W = 0; R = 1; E = 2). In contrast, if removal                  the factors number of updated frames (1 vs. 2) and re-
time is short, participants would have to refresh the first item,         moval time (short/long/very long) yielded a main effect of
switch once, remove two items and encode the two replace-                 frame number, F(1, 33) = 71.66, MSE = 0.03, p < .001,
ment items (W = 0; RF = SW = 1; R = E = 2).                               η2p = 0.68, a main effect of removal time, F(2, 66) = 167.88,
                                                                          MSE = 0.02, p < .001, η2p = 0.84, but no significant inter-
   A model including both removal and task switch param-                  action, F(2, 66) = 2.06, MSE = 0.02, p > .10, η2p = 0.06.
eters achieved the best fit; U pdatingRT = 704 + 156 ∗ E +                Results showed that it took longer to update two frames than
87 ∗ R + 393 ∗ SW − 95E ∗ SW , with a coefficient of deter-               one, and that more removal time led to faster updating RTs.
mination COD = 0.437 and a Bayes Information Criterion                    However, the effect of removal time was strong when com-
BIC = 23403. (BIC of the best-fitting model without removal               paring the short (200 ms) and long (1500 ms) conditions,
parameter was 23475; according to Raftery (1996) this pro-                but negligible when comparing long and very-long (3000 ms)
vides very strong evidence in favor of the removal model).                conditions. The lack of interaction means that doubling re-
                                                                    404

moval time did not lead to quicker updating, not even in the 2-                         Acknowledgments
frame updates where performance could have benefitted from          This research was supported by Australian Research Council
the removal of both to-be-updated items.                            Discovery Grants and Research Fellowships to UE and SL.
   Applying the regression models (as specified in Exp.
3), we found that a simple model provided the best fit:                                       References
U pdatingRT = 901 + 131 ∗ R + 255 ∗ SW , with COD =                 Ecker, U. K. H., Lewandowsky, S., Oberauer, K., & Chee,
0.38, BIC = 6865. (Note that the more complex model spec-             A. E. H. (2010). The components of working memory up-
ified in Exp. 3 did explain more variance than this simple            dating: An experimental decomposition and individual dif-
model when fit to the data of Exp. 4, but had a higher overall        ferences. Journal of Experimental Psychology: Learning,
BIC. The BIC for the best removal-free model was 6880; this           Memory, and Cognition, 36, 170–189.
is strong evidence in favor of the simple removal model.)           Fawcett, J. M., & Taylor, T. L. (2012). The control of working
                                                                      memory resources in intentional forgetting: Evidence from
Discussion                                                            incidental probe word recognition. Acta Psychologica, 139,
                                                                      84-90.
Experiment 4 showed that in the present task people only re-        Friedman, N. P., Miyake, A., Corley, R. P., Young, S. E., De-
moved one item in anticipation of an update, even when this           Fries, J. C., & Hewitt, J. K. (2006). Not all executive func-
update concerned more than one item. This supports our no-            tions are related to intelligence. Psychological Science, 17,
tion that people avoid focus and task switching when remov-           172-179.
ing information from WM during updating.                            Garavan, H. (1998). Serial attention within working memory.
                                                                      Memory & Cognition, 26, 263-276.
                   General Discussion                               Kessler, Y., & Meiran, N. (2008). Two dissociable updating
In this article we have introduced a novel measure of WM              processes in working memory. Journal of Experimental
updating. Traditional WM updating tasks arguably measure              Psychology: Learning, Memory, and Cognition, 34, 1339–
general WM processes in addition to updating, whereas it              1348.
is the removal of information from WM that is specific and          Kessler, Y., & Oberauer, K. (2013). Working memory updat-
unique to WM updating. We demonstrated that giving peo-               ing latency reflects the cost of switching between mainte-
ple preparation time to remove information from WM speeds             nance and updating modes of operation.
up updating when new information is subsequently presented,         Lendinez, C., Pelegrina, S., & Lechuga, T. (2011). The dis-
but only when a subset of the memory set is updated. Updat-           tance effect in numerical memory-updating tasks. Memory
ing an entire memory set does not benefit (much) from prepa-          and Cognition, 39(4), 675-685.
ration time, arguably because—in line with the predictions          Lewandowsky, S., & Farrell, S. (2008). Short-term memory:
derived from SOB (Lewandowsky & Farrell, 2008; Oberauer               New data and a model. In B. H. Ross (Ed.), The psychology
et al., 2012)—the time-consuming removal process only ap-             of learning and motivation (Vol. 49, pp. 1–48). London,
plies to individual items, whereas an entire memory set can           UK: Elsevier.
be removed by instant resetting of the weight matrix. Our           Miyake, A., Friedman, N. P., Emerson, M. J., Witzki, A. H.,
notion of removal by unlearning item-position associations is         & Howerter, T. D., A.and Wager. (2000). The unity and
a specific incarnation of the more general idea advanced by           diversity of executive functions and their contributions to
Kessler and Meiran (2008), who suggested that partial updat-          complex “frontal lobe” tasks: A latent variable analysis.
ing of memory sets involves “dismantling” or “unbinding”              Cognitive Psychology, 41, 49-100.
the old representations.                                            Oberauer, K. (2001). Removing irrelevant information from
                                                                      working memory: A cognitive aging study with the modi-
   Whereas our research is guided by and supports the SOB
                                                                      fied Sternberg task. Journal of Experimental Psychology:
model, it is important to note that other researchers have pro-
                                                                      Learning, Memory, and Cognition, 27, 948–957.
vided independent evidence for the existence of an active and
                                                                    Oberauer, K., Lewandowsky, S., Farrell, S., Jarrold, C., &
attention-demanding removal process. For example, Fawcett
                                                                      Greaves, M. (2012). Modeling working memory: An in-
and Taylor (2012) have shown that directed forgetting of an
                                                                      terference model of complex span. Psychonomic Bulletin
item (1) slows down responses on an unrelated secondary task
                                                                      & Review.
for up to 2.6 seconds, and (2) impairs incidental memory for
                                                                    Raftery, A. E. (1996). Approximate bayes factors and ac-
a subsequent distractor, in particular when the directed for-
                                                                      counting for model uncertainty in generalised linear mod-
getting of the studied item is successful.
                                                                      els. Biometrica, 83(2), 251-266.
   We assume removal to be crucial to maintaining a func-           Schmiedek, F., Hildebrandt, A., Lövdén, M., Wilhelm, O., &
tional WM system that can efficiently focus on relevant in-           Lindenberger, U. (2009). Complex span versus updating
formation. Further research is needed to ascertain whether            tasks of working memory: The gap is not that deep. Jour-
removal abilities co-vary with WM capacity, whether they              nal of Experimental Psychology: Learning, Memory, and
predict intelligence-related variance, or whether they relate         Cognition, 35, 1089–1096.
to other executive functions.
                                                                405

