UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
Reusable Templates in Human Performance Modeling
Permalink
https://escholarship.org/uc/item/8rg0501t
Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 24(24)
Authors
Matessa, Michael
Vera, Alonso
Remington, Roger
et al.
Publication Date
2002-01-01
Peer reviewed
 eScholarship.org                                 Powered by the California Digital Library
                                                                    University of California

                      Reusable Templates in Human Performance Modeling
          Michael Matessa1, Alonso Vera1, Bonnie John2, Roger Remington1, and Michael Freed1
                               ({rremington, mmatessa, avera, mfreed}@arc.nasa.gov)
                            1
                              Cognition Laboratory, Mailstop 262-4, NASA Ames Research Center
                                                Moffett Field, CA 94035 USA
                                  2
                                    School of Computer Science, Carnegie Mellon University
                                                  Pittsburgh, PA 15213 USA
                            Abstract                              a single researcher. That is, the model for mousing and
                                                                  clicking on a button can be built by researchers with
   Current computational modeling of human performance            expertise on visual/motor behaviors and the complex
   can benefit from reusable building blocks of human             model-builder can benefit from that expertise. Third,
   behavior. Using CPM-GOMS, a cognitively-based task             reuse provides external verification of the component
   analysis method used in HCI, we have been exploring            models. If the model for mousing and clicking on a
   the concept of reusable templates of common behaviors          button predicts the behavior well in the context of a
   and their efficacy for generating zero-parameter a priori      complex task, the data provides an independent test of
   predictions of complex human behavior. This paper
                                                                  the mechanisms of that model. Finally, reuse provides
   details the features we believe are important when
                                                                  additional constraint on models of complex tasks. If the
   moving from hand-crafted models of particular tasks to
   reusable building blocks of commonly occurring                 mousing and clicking on a button model predicts the
   behavior.      As this becomes common practice,                behavior well, the HCI modeler should not change the
   proportionately more attention can be paid to the task         basic mechanisms of the model simply to make it work
   analysis specific to each new domain.                          in a new domain.
                                                                     Cognitive architectures such as ACT-R (Anderson &
                        Introduction                              Lebiere, 1998) and Soar (Newell, 1990) embody a large
                                                                  set of reusable constraints on behavior prediction.
To model human behavior successfully one needs to be              These, however, are mostly at the cognitive level rather
able to decompose a complex task into a set of                    than at a task level. We know how to reuse
primitive operations to which performance parameters              architectures but not content. Modeling performance
may be assigned. These primitives represent the                   on human-computer interaction (HCI) tasks is valuable
building blocks from which behavior will be                       but currently suffers from several problems. Models of
constructed such that performance can be predicted for            task performance need to be handcrafted and typically
entire task sequences. Thus, the choice of primitives             take a long time to be created. Neither whole models
and the method of combining them to construct larger              nor their component parts tend to be reused, allowing
behavior sequences are critical if performance estimates          little transfer of code from one task model to the next. It
are to be at all accurate. In this paper, we describe a           is difficult to incorporate psychological knowledge into
method for combining basic cognitive, perceptual and              models and cognitive/psychological expertise is needed
motor operations into larger behavioral units. These              to do so. Once a model is complete, it may be
larger units, which will be referred to as templates, are         uninformative with respect to a next attempt at
applications of psychological theory about the                    modeling.
perceptual, motor and cognitive process underlying                   Other disciplines that build complex systems, like
human performance. Two main points will be argued:                engineering and computer science, have successfully
1) task-level reuse is important and 2) behavioral                employed reuse as an approach to tame complexity and
templates are a good way to achieve this reuse. We will           this is an approach that cognitive science should
present data for a simple HCI task and describe the               explore as well. There have been numerous arguments
templates we borrowed (reused) to model it.                       about the benefits of using a unified cognitive
   Model reuse is a profitable avenue to explore for four         architecture to provide power, structure and constraint
reasons. First, consider mousing to a button and                  (e.g., Anderson, 1983; John & Altmann, 1999; Newell,
clicking on it as an example. People learn and use this           1990), but fewer efforts to incorporate previously-built
skill in most interactions with computers. A model of             models of generalized capabilities into models of more
mousing and clicking on a button should be applicable             complex tasks (e.g., Nelson, Lehman & John, 1994).
to many HCI tasks; a new model of mousing and
clicking on a button should not be built from scratch for
each new task. Second, reuse provides expertise beyond

Cognitive Modeling Methods                                knowledge into reusable chunks that can be organized
Cognitive architectures such as ACT-R and Soar have       into larger behavioral sequences. Although approaching
attempted to solve some of these problems. Underlying     modeling with reusable templates has been taught for a
mechanisms embody the psychological theories of the       decade (John & Gray, 1992), it has not become
architectures, and so the theories do not have to be      widespread, possibly because CPM-GOMS was not in
explicitly coded for each model. Attempts have been       computational form (it had to be done by hand by
made to reuse models at the task level, but in general    drawing PERT charts) until recently (John, Vera,
this is not a widely adopted practice (e.g., John &       Matessa, Freed & Remington, 2002).
Lallement, 2000; Nelson, Lehman & John, 1994). As a
result, models are mostly handcrafted and take a long                              Template Structure
time to create.                                           Templates are reusable applications of psychological
   The field HCI uses cognitive models in several ways.   theory that describe short behavioral sequences.
It often is less interested in the process of modeling    Thirteen templates were offered to CPM-GOMS
than in getting results quickly, and has therefore put    modelers in tutorials and classes in the early 1990s
emphasis on modeling frameworks that are easier to        (John & Gray, 1992) and others have been added since
learn and use than the more complex cognitive             then. One example of a CPM-GOMS template for
architectures like Soar and ACT-R (John, 1998). In        mouse clicking (created by Gray & Boehm-Davis,
addition, that field has sought modeling procedures that  2000) can be seen in Figure 1. The template
reuse actual pieces of models as well as the framework.   incorporates a psychological theory of the cognitive,
For instance, GOMS models (Card, Moran & Newell,          perceptual, and motor components of mouse clicking
1983) are constructed by hierarchical goal                and dependencies between these components. The
decomposition with reusable, empirically-determined       template was developed in the context of a simple task
execution times assigned to particular goals.             of clicking on lit circles, but has successfully been
   The GOMS methodology has proven highly                 reused in the context of clicking to operate a simulation
successful in predicting task completion times for        of an automated teller machine (John, et al., 2002).
skilled users in routine human computer interaction                                        0
                                                                                             new-cursor-location
(HCI) tasks (e.g., Gray, John, & Atwood, 1993; John,
                                                                                               290                   100
Vera, & Newell, 1994). GOMS is really a family of                                              perceive-
                                                                                                                      perceive
                                                                                                                      cursor
analysis techniques in which performance predictions                                             target
                                                                                                                      @target
emerge by combining a task decomposition with
estimates of completion times for steps in the              50              50       50           50           50              50        50
decomposition. The task decomposition produces a            initiate-move-
                                                                 cursor
                                                                           attend-
                                                                            target
                                                                                    initiate-
                                                                                      POG
                                                                                                  verify-
                                                                                                  target
                                                                                                                 attend
                                                                                                                 cursor
                                                                                                                                  verify
                                                                                                                                cursor
                                                                                                                                         initiate-
                                                                                                                                          mouseDn
representation of the task as a set of nested goal states                                           pos         @target
                                                                                                                                 @target
that include an initial state and a final goal state. The                  182                                                             100       100
user is assumed to move from one goal state to another                     move-
                                                                            cursor
                                                                                                                                             mouseDn mouseUp
by applying operators that represent actions, such as
moving a mouse or reading a word. The set of nested                                 30
goal states often resembles a hierarchy, but need not                               POG
form a strict hierarchy. The iterative decomposition into
goals and nested subgoals can terminate in leaf nodes             Figure 1: Model of carefully moving the cursor to a
(primitives) of any desired granularity, the choice of         target and clicking the mouse button (adapted from
level of detail dependent on the predictions required.                           Gray & Boehm-Davis, 2000).
Times are assigned to the operators that transition
between goal states, with additional times often              The psychology in this template is in the form of the
assigned to subgoal completion (Kieras, 1994). Since      durations, the cognitive bottleneck, the logical
GOMS is meant to model routine behavior, the user is      dependencies, and the task dependencies. The
assumed to have methods that apply sequences of           durations for the cognitive, perceptual, and motor
operators and subgoals to achieve a goal. Selection       components of the template are empirically derived
rules are applied when there is more than one method to   MHP-level estimates of these activities. CPM-GOMS
achieve a goal.                                           assumes a cognitive bottleneck, where cognitive
   The CPM-GOMS extension to GOMS (John, 1990)            processes cannot execute in parallel. The cognitive
adds psychological knowledge to the GOMS goal             resource stream is therefore serially scheduled based on
decomposition by expressing common HCI tasks (e.g.        the logical and task dependencies as described below.
reading from a screen, typing) as patterns of Model           According to CPM-GOMS, each motor activity must
Human Processor (MHP; Card, Moran & Newell, 1983)         be preceded by a cognitive activity that initiates it. This
operations of its cognitive, perceptual, and motor        is an example of a logical dependency — a motor action
processors. These patterns, or templates, can help        cannot take place unless a cognitive motor initiation
cognitive modeling by grouping psychological              activity has occurred. That you cannot click on a target

until you have moused over to it is an example of a task     The ATM Task
dependency. It is not a CPM-GOMS level logical               The task was to make an $80 withdraw from a checking
dependency nor is it a necessary consequence of the          account on a Visual Basic simulation of an automated
cognitive bottleneck; it is true because the task requires   teller machine. Users interacted with the ATM by
it to be so. So, for example, a possible performance         using a mouse to click on simulated keys or slots. The
error might be to click before the mousing movement to       users were instructed to follow the following steps:
the target is complete. In contrast, executing a motor
action without a preceding cognitive initiation is not a                  Insert card (click on the picture of the card slot)
possible performance error. Similarly, executing two                      Enter PIN (click on the 4, 9, 0, and 1 buttons in turn)
cognitive activities in parallel is not a possible                        Press OK (click on OK button)
performance error. This combination of constraints                        Select transaction type (click on withdraw button)
embodies the unique application of psychological                          Select account (click on checking button)
theory to the crafting of each template.                                  Enter amount (click on 8 and 0 buttons)
                                                                          Select correct/not correct (click on correct button)
             Interleaving Templates                                       Take cash (click on the picture of the cash slot)
                                                                          Select another transaction (click on No button)
Embodying psychological theory in separate templates
                                                                          Take card (click on the picture of the card slot)
is only the first step. The challenge is that CPM-GOMS                    Take receipt (click on the picture of the cash slot)
templates need to be interleaved to fully capture the
time course of behavior. Simply adding up the                This task was repeated 200 times by the users. This
performance time predicted by a sequence of templates        level of practice is comparable to that used by both
produces a time that is longer than that of human
                                                             Card, Moran, and Newell (1983) in a text editing task
performance. A key CPM-GOMS assumption is that
                                                             and Baskin and John (1998) in a CAD drawing task
humans are able to perform certain components of the
                                                             when they explored the effects of extensive practice on
templates not in strict sequence but interleaved so that
some components of a later template can occur in an          match to various GOMS models.
earlier template.                                                         1400
   A concrete example of this interleaving can be seen                                                             S1- Mean for Trials 91-100
in a task as simple as hand-washing. While most eye                       1200
                                                                                                                   S2- Mean for Trials 91-100
                                                                                                                   CPM-GOMS Model
fixations are related to immediate actions such as                                                                 Fitts's Law
                                                                                                                   No-Interleaving Model
turning on the faucet, a small number are made to                         1000
objects relevant only to future actions. Pelz and Canosa
(2001), with the aid of an eye tracker, observed that                      800
subjects consistently made eye movements to the towel         Time (ms)
during earlier parts of the hand-washing process.                          600
   Part of the psychological theory embedded in                            400
templates is the knowledge of what components of one
template can occur in parallel with components of                          200
another template. This interleaving theory has until
recently only been implemented in paper-and-pencil.                          0
                                                                                                                                                   Correct
                                                                                 Card Slot                           Withdraw   Checking                     Cash Slot        Card Slot   Cash Slot
                                                                                                              OK                                                         No
                                                                                              4   9   0   1                                8   0
Details of how interleaving is implemented in our
system are presented later. When cognitive components
have a dependency on perceptual or motor components                                          Figure 2: Click times for users and models
which take a relatively long time to complete, slack
time may occur when the cognitive resource is not            The CPM-GOMS Model
being used. Interleaving involves filling up this slack      The CPM-GOMS model was created by first expressing
time with activity from the cognitive components of the      the hierarchical goal structure of the ATM task. At the
next template.                                               bottom of the hierarchy were two CPM-GOMS
                                                             templates: Slow-Move-Click and Fast-Move-Click.
               ATM Study & Data                              The cognitive, perceptual, and motor components of
CPM-GOMS has been demonstrated to make accurate              these templates were taken directly from Gray and
zero-parameter a priori predictions of skilled HCI           Boehm-Davis (2000) where predictions from these
behavior. Using templates, we created a CPM-GOMS             templates were compared to data from several
model of a simple HCI task — withdrawing money from          variations of a simple target selection task.
an ATM. We gave two users extensive practice with              The Slow-Move-Click template is shown in PERT
this task because CPM-GOMS models are expected to            chart form in Figure 1. Because there was uncertainty
predict the performance of highly-skilled users (Baskin      about where a target would appear in each trial, Gray
& John, 1998).                                               and Boehm-Davis considered Slow-Move-Click to
                                                             represent a careful selection of a visible target. Fast-

Move-Click represented a more confident selection of a       to GOMS, Soar and ACT-R. However, in these latter
target when the user knew where the target was to            architectures, the hierarchical task decomposition
appear. In our model, we choose to use Fast-Move-            bottoms out at the level of operations of the underlying
Click for clicking on the ATM buttons because they           cognitive, perceptual and motor processors.
were a reasonable size and Slow-Move-Click for                  It is relatively easy to perform a hierarchical task
clicking on the card and cash slots because these slots      analysis for each new task domain, and necessary
were thinner and difficult to hit unless the user was        because each domain has its own objects, tasks,
careful.                                                     knowledge, and procedures. It is much more difficult to
                                                             describe the cognitive, motor, and perceptual processes
Comparing the Model to Data                                  underlying every new task. However, many tasks
Figure 2 shows a comparison of the CPM-GOMS                  bottom out at the same component behaviors
model predictions of mouse click times and mean user         constrained by human abilities. The component
click times. Because Baskin and John (1998) have             behaviors are actions like visual search, mouse
found that CPM-GOMS models predict behavior well             movements, and typing. These types of actions are
at around the 100th trial of a practiced procedure, the      perfect candidates for re-use because they occur
means of trials 91-100 for each ATM user are shown.          repeatedly in many tasks, and must be realized in
To see the benefit of interleaved templates, predictions     operations closer to the architecture than is necessary to
from two other models are also shown: a model using          describe the task domain. Removing the burden of
only Fitts s Law predictions (a motor time prediction        understanding and programming in the underlying
based only on target geometry), and the CPM-GOMS             cognitive architecture in the form of reusable templates
model with sequential templates but no interleaving.         could make cognitive modeling more accessible to a
   The first thing to notice is the good a priori fit of the wider range of domain experts.
model to user data. The degree to which interleaving         What does it take to create templates in a cognitive
contributes to this fit can be seen by comparing the         architecture?
interleaving and non-interleaving models. The non-              • A systematic relationship between the bottom level
interleaving model generally predicts a longer time for            of the hierarchical task decomposition, the
a mouse click and does not capture the variation of user           templates, and their realization in the underlying
click times. This variation is better captured by the              architecture
Fitts s Law only model, but the model does not                  • A systematic relationship at the boundaries
represent the perceptual and cognitive processes                   between templates realized in the underlying
incorporated into templates and so predicts faster click           architecture. This may be more complicated than
times than users produce. These comparisons show that              simple serial execution, as we will describe in the
templates contain important predictions of perceptual,             context of CPM-GOMS, the Model Human
cognitive, and motor processes, and that the theory of             Processor, and its embodiment in Apex.
template interleaving can capture the abilities of users
to save time by performing parallel processes.               Template Grain Size
   The important point to emphasize is that the
                                                             Generalizeable behavior templates should exist at
templates used to make these predictions were
                                                             different grain sizes. From a practical modeling
developed for a very different task and were
                                                             perspective, it is valuable to represent basic HCI
successfully reused in the present model. Also, note that
                                                             behaviors in different size chunks. For example, one
the tool we have developed to implement CPM-GOMS,
                                                             branch of a hierarchical goal decomposition may
Apex (Freed, 1998b, Freed & Remington, 2000), allows
                                                             terminate at simply clicking on an item whereas another
us to easily generate alternative versions of the model
                                                             might terminate at a more complex action such as
(e.g., just Fitts s Law, templates with no interleaving).
                                                             choosing an item from a pull-down menu. The latter
We will expand on the workings of the tool below.
                                                             action encompasses the first (twice, in fact), but both
                                                             are useful as separate templates. Along with
Implementing Templates                                       generalizability, a valuable constraint on the grain size
How does an organism organize its resource allocation        of templates is the level at which hierarchical goal
over an extended period of time over an extensive            decomposition would bottom out. For example, a
sequence of behaviors? Hierarchical task                     template that is just the reaching component of typing a
decomposition is a convenient formalism for an analyst       key (i.e., putting your finger over it without pressing on
to record and communicate their analysis of a task but it    it) would be very general; it would be Fitts s Law plus
also seems to have some psychological reality in how         the associated cognitive and perceptual components.
people organize their environment and cognitive              However, it would not typically be where a hierarchical
resources to approach a complex task. Many                   goal decomposition would bottom out. A hierarchical
representations of human behavior use hierarchical task      goal decomposition is more likely to bottom out with
decomposition, from Scientific Management at the turn        activities such as click-on-button or press-key than just
of the century, to HTA (Kirwan and Ainsworth, 1992)

the reaching component of these activities, and              Priorities. When there is competition for a resource
templates should reflect this.                            between templates, priorities of the templates is used.
                                                          Each template is assigned a priority associated with its
Implementing Interleaving                                 order in the hierarchical task decomposition. In the
The template-builder gets to deliberately program these   printing example above, selecting the Print command
dependencies. The relationship between templates in       (step 1) has the highest priority, waiting for the dialog
CPM-GOMS involves not sequencing, but interleaving        box (step 2) has the next highest priority, and clicking
of parallel operators on multiple resources. In highly    the OK button (step 3) has the lowest priority. Both
skilled behavior, people attain a high degree of          steps 1 and 3 will contend for the right hand to move
parallelism in their behavior. To illustrate this point,  the mouse to their respective targets, and step 1 will
think about printing a document in the word processor     win by its priority, ensuring that the print command is
you regularly use. It is not uncommon for people to       selected before the mouse is moved to where the OK
select the Print command then move the mouse to the       button will appear. However, step 2 (waiting) does not
place where the OK button will appear well before         require the right hand, so the mouse is free to move to
the dialog box is visible. A hierarchical task analysis   the location of the OK button before the dialog box
would list the steps (1) select Print , (2) wait for      appears.
dialog box, and (3) click on OK , but the realization in     Virtual resources. However, resources and priorities
the underlying architecture should allow the mouse        are not enough. For instance, the template to select the
movement associated with step (3) to precede the          print command (step 1) requires the eyes to move to
completion of step (2), whereas the clicking associate    and perceive the menu title, and later within the same
with step (3) must indeed wait for the completion of      template to move to and perceive the desired menu
step (2) or the task will not be successfully completed.  item. However, while the hand is completing the move
Thus, the relationship between templates is a complex     and click to the menu title and the menu is coming up,
system of interleaving of the architectural-level         the eye resource is free. Therefore, step 3, clicking on
operations.                                               the OK button wants the eye to move to the location of
   Apex allows manipulation of serial and parallel        the OK button, and since the resource is free, there is no
resource in exactly the form required by CPM-GOMS.        contention and priorities do not come into play. Thus,
Apex (Freed, 1998a) has a flexible resource               the eye resource could be assigned to the OK button
management system that allowed the implementation of      even though the menu item will be appearing in a
the constraints necessary to produce CPM-GOMS             fraction of a second and the eye will be needed there.
template interleaving. A complete description of the      Therefore, to reserve the eye for the higher-priority
implementational rules guiding interleaving in CPM-       template (in this case, the select-menu-item(Print)), we
GOMS as embodied in Apex is available elsewhere           developed the idea of virtual resources. Virtual
(Berkovich & Kwong, 2002; John et al., 2002). In          resources are analyst-defined entities that act like
general, we use three facets of the Apex architecture:    regular resources. Operators consume these resources
   1. resource modules (i.e., cognition, hands, point of  and they have to be allocated using priorities. So at the
      gaze, visual perception),                           beginning of the select-menu-item (Print) template s
                                                          first eye movement, it reserves the eye-block virtual
   2. priorities on the templates, and
                                                          resource and only releases that virtual resource after its
   3. virtual resources to record a template s intention
                                                          last visual perception is complete. Since all eye-
      to use a resource.                                  movements and visual perception require this eye-block
   Resource modules. To accomplish templates,             virtual resource, this technique blocks any lower-
operators consume resources at the architectural level.   priority template from stealing that resource before a
The resource modules act serially within themselves, so
                                                          higher-priority template is finished with it.
when they are occupied by an operator, other operators
that require that resource must wait until that resource
is free again. When more than one operator requires the
                                                                                Discussion
same resource at one time, there needs to be a way to     We have a computational system that implements and
resolve the conflict and assign that resource to only one automatically interleaves reusable behavioral templates.
operator. Within a template, such conflicts are either    While only two templates have been presented here in
avoided because of logical dependencies between the       detail (Slow-Move-Click and Fast-Move-Click), several
operators (e.g., perceiving a target cannot happen until  others have been implemented in our system for touch-
the eyes have moved to that target) or resolved           typing and applied to a different computer aided design
randomly because the template-builder has determined      task, and several more are under development for
that it does not matter for the completion of the task    interacting with the flight maintenance system found on
whether one goes before the other. When there is          commercial airliners. Previous work has shown that
contention for resources between operators in different   other currently existing templates in the literature are
templates, an additional mechanism for conflict           useful for simulations done by hand (Gray, John, &
resolution is needed.

Atwood, (1993) being a good example). We will work        Gray, W. D., John, B. E., & Atwood, M. E. (1993)
to implement these as well. As more templates are           Project Ernestine: Validating a GOMS analysis for
accumulated, issues such as coverage of possible            predicting and explaining real-world task
                                                            performance. Human-Computer Interaction, 8, pp.
behaviors can be addressed.                                 237-309.
  We are currently exploring the possibility of           John, B. E. (1990) Extensions of GOMS analyses to
generating CPM-GOMS models from ACT-RPM.                    expert performance requiring perception of dynamic
ACT-RPM imposes its own set of constraints on               visual and auditory information. In proceedings of
cognitive, perceptual and motor resources, many of          CHI, 1990 (Seattle, Washington, April 30-May 4,
them different from those of CPM-GOMS. This makes           1990) ACM, New York, 107-115.
the generation of genuine CPM-GOMS behavior from          John, B. E., Vera, A. H., and Newell, A. (1994).
ACT-RPM more challenging but also promises the              Towards real time GOMS: A model of expert
possibility of extending the predictive scope of CPM-       behavior in a highly interactive task. Behaviour and
GOMS to a wider range of skill (i.e., from novice to        Information Technology, 13, 4, pp. 255-267
                                                          John, B. E. (1996) TYPIST: A Theory of Performance
expert) because of ACT-R s new production                   In Skilled Typing. Human-Computer Interaction , 11
compilation mechanism (Taatgen & Lee, submitted)            (4), pp.321-355.
  In order for cognitive modeling to come into wider      John, B. E. (1998) Cognitive modeling for Human-
use in the design process, it is necessary to package the   Computer Interaction. Invited paper in the
abundance of data on human perceptual, cognitive, and       Proceedings of Graphics Interface 98 (Vancouver,
motor phenomena into a set of behavioral templates that     British Columbia, Canada, June 18-20, 1998)
can be directly incorporated into predictive,               Canadian Human-Computer Communications
computational models. Templates reduce the amount of        Society.
psychology and modeling methodology required to           John, B. E. & Altmann, E. M. (1999). The power and
build models, compile the human performance data into       constraint provided by an integrative cognitive
                                                            architecture. Invited paper, Proceedings of the 2nd
templates, and allow the modeler to focus on task           international conference on cognitive science and the
analysis.                                                   16th annual meeting of the Japanese Cognitive
                                                            Science Society joint conference (July 27-30, 1999.
                 Acknowledgments                            Tokyo, Japan). pp. 20-25.
This research was supported by funds from the NASA        John, B. E. & Gray, W. D. GOMS Analyses for Parallel
                                                            Activities. Tutorial materials, presented at CHI, 1992
Aviation Operations Safety Program and the Intelligent      (Monterey, California, May 3- May 7, 1992), CHI,
Systems Program.                                            1994 (Boston MA, April 24-28, 1994) and CHI, 1995
                                                            (Denver CO, May 7-11, 1995) ACM, New York.
                     References                           John, B. E. & Lallement, Y. (2000) A Demonstration
Anderson, J. R. (1983). The Architecture of Cognition.      of Integrative Modeling of a Complex Dynamic
  Cambridge, MA: Harvard University Press.                  Computer-based Task. In Proceedings of the 2000
Anderson, J. R. & Lebiere, C. (1998). The Atomic            AAAI Fall Symposium on Simulating Human Agents,
  Components of Thought. Lawrence Erlbaum                   November 3-5, 2000.
  Associates.                                             John, B. E., Vera, A. H., Matessa, M., Freed, M., &
Baskin, J. D., & John, B. E. (1998). Comparison of          Remington, R. (2002) Automating CPM-GOMS.
  GOMS Analysis Methods. Proceedings of ACM CHI             Proceedings of CHI, 2002 (Minneapolis, April 20-25,
  98 Conference on Human Factors in Computing               2002) ACM, New York.
  Systems (Summary) 1998 v.2 p.261-262.                   Kirwan, B. & Ainsworth, L. K. (Eds.) (1992). A guide
Berkovich, M., J., & Kwong, E. (2002). Apex template        to task analysis. London, UK
  manual, working paper.                                  Nelson, G. H., Lehman, J. F., & John, B. E. (1994)
Card, S. K., Moran, T.P. & Newell, A. (1983). The           Integrating cognitive capabilities in a real-time task.
  Psychology of Human-Computer Interaction.                 Proceedings of the Sixteenth Annual Conference of
  Hillsdale, NJ: Lawrence Erlbaum Associates.               the Cognitive Science Society, August 1994. pp. 353-
Freed, M. (1998a) Managing multiple tasks in complex,       358.
  dynamic environments. In Proceedings of 15th            Newell, A. (1990). Unified Theories of Cognition.
  National Conference on Artificial Intelligence,           Harvard University Press. Cambridge,
  (Madison, Wisconsin,) Menlo Park, CA: AAAI                Massachusetts.
  Press/ MIT Press. pp. 921-927.                          Pelz, J.B. & Canosa, R. (2001) Oculomotor Behavior
Freed, M. (1998b) Simulating Human Performance in           and Perceptual Strategies in Complex Tasks, Vision
  Complex, Dynamic Environments. Doctoral                   Research, 41:3587-3596.
  Dissertation, Northwestern University.                  Taatgen, N. A. & Lee, F.J. (submitted). Production
Freed, Michael and Remington, R. (2000) GOMS,               Composition: A simple theory of Complex Skill
  GOMS+ and PDL. In Working Notes of the AAAI               Acquisition.
  Fall Symposium on Simulating Human Agents.
  Falmouth, Massachusetts.

