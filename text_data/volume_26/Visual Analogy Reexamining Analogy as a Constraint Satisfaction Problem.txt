UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
Visual Analogy: Reexamining Analogy as a Constraint Satisfaction Problem
Permalink
https://escholarship.org/uc/item/08x3n0bz
Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 26(26)
Authors
Yaner, Patrick W.
Goel, Ashok K.
Publication Date
2004-01-01
Peer reviewed
 eScholarship.org                                 Powered by the California Digital Library
                                                                    University of California

      Visual Analogy: Reexamining Analogy as a Constraint Satisfaction Problem
                                                 Patrick W. Yaner (yaner@cc.gatech.edu)
                                                    Ashok K. Goel (goel@cc.gatech.edu)
                                                       Artificial Intelligence Laboratory
                                         College of Computing, Georgia Institute of Technology
                                                            Atlanta, GA 30332-0280
                               Abstract                                     2003). In the part described in this paper, we focus on the
                                                                            retrieval and mapping tasks.
   Holyoak and Thagard proposed that the retrieval and mapping                 Our methodology is to start with simple problems and in-
   tasks of analogy can be viewed as constraint satisfaction prob-          crementally add complexity to them. This incremental na-
   lems, and described a connectionist implementation of their
   proposal. In this paper, we describe another constraint satis-           ture of the methodology is manifested in three ways: firstly,
   faction method for the two tasks in the context of visual anal-          visual knowledge can be of many forms, such as depictive
   ogy: in our method, the source cases are organized in a dis-             bit-mapped representations, sketches, or animations, but our
   crimination tree, and all the source cases are searched at once.         work deals specifically with diagrammatic knowledge rep-
   We also present an evaluation of the method for retrieval and
   mapping of 2-D line drawings from an external memory. The                resented symbolically as discrete geometric elements and
   evaluation is based on structural constraints, and uses subgraph         the spatial relations between them; secondly, though visual
   isomorphism as the similarity measure. One result is that a de-          analogies, like analogies more generally (as proposed by
   composition of the retrieval task into feature-based reminding           Holyoak and Thagard), can involve semantic and pragmatic
   and structure-based selection appears to provide little compu-           constraints, we start with just the structural constraints im-
   tational benefit over just selection.
                                                                            posed by requiring source and target to match structures; and
                                                                            thirdly, from a graph theoretic perspective, there may be more
                           Introduction                                     than one sort of graph isomorphism measure that may be the
                                                                            ideal measure, such as maximal common subgraph, but we
Holyoak and Thagard proposed that the retrieval (Thagard,                   begin with subgraph isomorphism as our metric.
Holyoak, Nelson, & Gochfeld, 1990) and mapping (Holyoak                        The retrieval task, in this work, assumes a computer-based
& Thagard, 1989) tasks of analogy can be productively                       library of 2D line drawings, takes as input a query (target) in
viewed as constraint satisfaction problems. Their proposal                  the form of a drawing (and no other information), and gives as
incorporated structural, semantic and pragmatic constraints                 output the source drawings that are most similar to the target.
and used graph isomorphism as the primary similarity mea-                   The mapping task takes as input a target problem and a source
sure. Their mapping system, called ACME, and the com-                       case, and gives as output correspondences between the basic
plementary retrieval system, named ARCS, provided connec-                   elements of the source case and the target problem.
tionist implementations of their proposal. In ACME, nodes
are constructed for each map hypothesis (between a source
element and a target element), with inhibitory and excitatory
                                                                                                       Retrieval
links between different nodes, and the network is run until                 Following earlier work on analogical retrieval—e.g.,
it reaches quiescence. The work described here builds on                    MAC/FAC (Forbus, Gentner, & Law, 1995)—our retrieval
Holyoak and Thagard’s proposal but seeks a different solution               architecture supports a two-stage process for diagram
to the retrieval and mapping tasks. While we also view the re-              retrieval: reminding (or initial recall), and selection. The ar-
trieval and mapping tasks as constraint satisfaction problems               chitecture consists of (up to) six basic components: an initial
(CSPs), our method for addressing the tasks (i) organizes                   stage generating feature vectors, a process that generates a
the source cases in a discrimination tree, (ii) uses (general-              semantic network describing the contents (spatial structure
purpose) heuristics to guide the search, (iii) performs a back-             in this case) of an drawing, a process that matches a target’s
tracking search, and (iv) searches all the source cases at once.            description (semantic network) to source descriptions from
   The goal of our current work is to develop a computational               memory, a working memory with potential sources to match
theory of visual analogy. Analogies transfer relational knowl-              with the target, and finally, an interface to the rest of the
edge from a source (or base) case to a target problem. De-                  analogy system in which this retrieval would be taking place.
pending on the nature of the target and the source, the knowl-                 The reminding task takes as input a target example and re-
edge transferred in an analogy may pertain to different kinds               turns as output references to stored drawings whose feature
of relations, for example, causal, functional or teleological               vectors match that of the target. The stored drawings are
relations. In visual analogy, the pertinent relations are spa-              indexed by feature vectors describing their spatial elements;
tial relations among visual elements. In a different part of                the feature vector for the target is constructed dynamically.
the project, we have developed a technique for transfer of                  References to those drawings with sufficiently similar feature
spatial knowledge, given a target problem and a source case                 vectors (according to some appropriate criteria, as explained
and given a mapping between the two (Davies & Goel, 2001,                   below) are brought into the working memory. In the selec-
                                                                       1482

tion stage, the semantic networks of the drawings in working
memory are matched with that of the target example. Draw-
ings whose descriptions match the target description suffi-
ciently well are collected and returned.
   While the reminding stage of the retrieval process uses a
vector of features—i.e. a vector of attribute-value pairs—as a
heuristic to gauge the potential of a source drawing matching
the target drawing, the selection task uses the spatial structure
of line drawings—i.e. the qualitative arrangement of the vari-
ous shapes in them—to actually match the target to the source                                           above
drawings.
   Visual cases are represented in three distinct ways: the                 rectangle
the drawings themselves, the feature vectors, and the net-                                    below
work of spatial relations. The representation of the draw-                                                 contains
                                                                                        B                A              C            circle
ings themselves is simply object-based: a list of each visual                                 above
element, such as lines, triangles, etc., and their specific ge-
ometric properties (location, and so on). The feature vec-                                           triangle
tor is a multiset of the object and relation types contained
in a semantic network. A multiset is a set that can con-                                             below
tain more than one of each element (e.g. {2 · A, 3 · B, . . .}).
Given a semantic network describing an drawing, a fea-                     Figure 1: An example of a three-node semantic network in
ture vector in our system would look something like this:                  our language. Each pair of objects is tested, and links added
{3 · rectangle, 2 · circle, 3 · leftOf, 1 · contains, . . .}.              for each relation that holds.
   A drawing is recalled, in the first stage, if the multiset of
shape and relation types contained in it is a superset of that
of the target. The method scans all stored drawings, calcu-                   The selection method, described below, builds a set of po-
lating whether or not the multiset of objects and relations in             tential assignments for each target element, and in evaluating
the target is a subset of the multiset of objects in each source           these, it looks to see what terms each source element is in-
drawing, and returning those for which this is the case. That              volved in, and this involves the index into memory by indi-
is, if Q is the feature vector for the target, and S1 , S2 , . . . , Sk    vidual terms. The overall scheme is to build a representation
are the feature vectors of the drawings currently in memory,               of all possible mappings, and reduce this list by screening out
then the method returns those drawings for which Q ⊆ Si .                  the ones that don’t work. Ones that don’t work are screened
   Figure 1 illustrates a simple 2D line drawing and its repre-            out because they do not satisfy the constraints imposed by
sentation in terms of spatial relations in our system. The sys-            the problem. This is constraint satisfaction, and this is what
tem at present recognizes four types of spatial elements: in-              it means to solve the problem by constraint satisfaction.
dividual lines, triangles, rectangles, and ellipses (circles and
squares are special cases of ellipses and rectangles, and are                               Constraint Satisfaction
not treated as being of a separate type). Also, it presently rec-          The core of the system is the selection process. The process
ognizes five types of relations among the elements: left-of,               finds a correspondence between the target drawing and the
right-of, above, below, and contains. The automatic                        source drawings in working memory, eliminating drawings
generation of a semantic network for a target drawing works                for which no correspondence can be found.
by taking the input drawing (in XFig format) and comparing                    The selection problem is essentially one of matching ob-
every pair of shapes using the available predicates. If a par-             jects (variables and constants) in the target and the source
ticular predicate holds, a link is added between the associated            under the constraints imposed by the terms in which they ap-
nodes in the semantic network, with the appropriate label. As              pear. The target has a set of variables (its objects, the nodes
an example, the semantic network in Figure 1 would repre-                  in the semantic net) to be matched to some constants (i.e.
sent the drawing shown above it.                                           values) from the sources and the relationships between these
                                                                           variables impose constraints on the values to which they can
Memory Organization                                                        be matched. This is constraint satisfaction. This algorithm
When a source drawing is added to memory, several things                   works by maintaining an index of all the terms across all of
happen. First, its description is generated, the network of re-            the source descriptions. It recalls individual terms from mem-
lations describing the spatial layout of the drawing, as well              ory and puts them together to form the complete matching.
as its feature vector. Second, once this network is generated,             When a source drawing is stored in memory, its description is
each “term” in the network, by which we mean a link (re-                   generated and indexed in this way, by each term that appears
lation) together with its incident nodes (elements), is added              in it. There is a separate table for each type of term, i.e. one
to a discrimination tree. This allows the selection method to              for left-of, one for above, etc.
match individual terms in the target with all terms of the same               Treating the target elements as variables to be assigned val-
form that appear across all source drawings in memory, thus                ues, the potential values are the nodes from the source de-
allowing all of the descriptions of all of the drawings to be              scriptions in memory, all of which are considered at once.
searched at once.                                                          That is, the method is not performing a separate test on each
                                                                       1483

source in memory, but, rather, it is running a search procedure     set of possible mappings so that there aren’t nearly as many,
on the entire memory considered collectively. The constraints       now, as there would have been if a pure depth-first search had
on the values assigned to the variables (the target nodes) are      been done.
precisely those imposed by the subgraph isomorphism prob-              In general, the time complexity of depth-first search, such
lem: if nodes A and B from the target are to be matched with        as this is, is on the order of O(kd ) in the worst case, where k is
nodes X and Y from memory, respectively, then, first, X and         the branching factor of the state space and d is the maximum
Y must be in the same description; second, all relations that       depth. In this case the depth is the number of elements in
hold between A and B must also hold between X and Y , re-           the query, and the branching factor is the number of elements
spectively. If these constraints are met, then A can be matched     across all sources in memory. However, the space complex-
with X and B can me matched with Y . Here the constraints           ity, as with depth-first search in general, is only O(kd), i.e.
are all either unary (say, A is a circle—a type constraint), or     it’s linear in the size of the problem. Note that this is a back-
binary (say, A is left of B—a relational constraint). The only      tracking search, however, so large portions of the state space
exception is the constraint that all values be from the same de-    are cut off at each step. With 42 test images in memory, the
scription, but this can be inferred from the binary constraints.    number of objects in a drawing ranging from 3 to over 50 (the
   This matching process works in three phases: initializa-         average was about 12), the number of terms in the description
tion of domains, reduction of domains, and finding the match-       ranged from a couple of dozen to over eight thousand. There
ing, where matching means subgraph isomorphism. The first           were 21 queries with this test set, with two to five spatial el-
phase initializes the target domains to sets of values that have    ements in each, and up to several dozen terms. With this test
the same incoming and outgoing edges. The second phase re-          data, the system was retrieving drawings in about 9.32 sec-
duces these domains by eliminating values that are not all in       onds on average (across all 21 drawings), doing an average
the same drawing. These two phases reduce the selection of          of about 1.49 million memory accesses (to the index of terms
values for each variable. The third phase actually computes         across all the drawings) per retrieval.
the isomorphism using constraint satisfaction and backtrack-
ing.                                                                                             Galatea
   The first phase (initialize domains) works by finding nodes      Since the system does retrieval essentially by producing all
in memory that “look similar” to the target nodes: if a tar-        possible mappings that it is capable of finding, we adapted a
get node A is incident on, say, three links whose labels are        version of the system to the mapping process for use in a sys-
R, S, and T , then the algorithm builds a list of all nodes         tem called Proteus, a visual analogical reasoning system. The
in memory—across all the source descriptions—that have at           transfer stage of Proteus—implemented in a system called
least three incident links with labels R, S, and T . The sec-       Galatea—is described in Davies and Goel (2001, 2003).
ond phase (reduce domains) works by ensuring that the set              Galatea solves problems represented in a high-level visual
of source descriptions (document IDs) that are represented in       language called Covlan (Cognitive Visual Language). The
the domain of (list of values for) each variable is the same.       system solves these problems by analogy to existing prob-
This serves to eliminate any value from the domain of any           lems whose solutions are mapped out as a sequence of trans-
variable that does not come from a description represented in       formations on the knowledge states that are represented in
every other variable’s domain.                                      this language. Galatea solves the problem by taking a map-
   These two stages are the “real” first stage of the algorithm,    ping between the initial knowledge states of the source and
and our results, described in (Yaner & Goel, 2003), showed          target and mapping the transformations and generating the in-
that the feature-vector-based first stage was really quite re-      termediate knowledge states (and mappings between them),
dundant, and offered little improvement. Viewed as such, this       and thereby constructing the rest of the transformations and
first stage applies two heuristics to the sources from memory:      knowledge states leading to the solution to the target prob-
(i) prune any individual element (as opposed to entire draw-        lem. The mapping system, then, needs to connect the initial
ings) that don’t have the same “signature” (as just described)      knowledge state of the source and the target drawing. From
as the corresponding target element, and (ii) prune any terms       the perspective of retrieval and mapping, the relevant issues
whose associated drawings are not represented in every target       pertaining to Galatea are: (1) what is that knowledge repre-
element’s domain. The latter one enforces subgraph isomor-          sentation, and (2) what are the nature is of the required map-
phism. It is important to note that these are both logically        pings?
implied by the similarity metric that the last phase, described        Covlan consists of knowledge states, primitive elements,
below, implements. It would be an interesting experiment to         primitive relations, primitive transformations, general visual
look at other heuristics that prune out mappings that might         concepts, and correspondence and transform representations.
have otherwise been returned by the last phase.                     In Covlan, all knowledge is represented as propositions. In
   The last phase (find matchings) is the one that actually does    this paper we will only be concerned with the primitive el-
the work. The basic procedure is one that generates match-          ements and the primitive visual relations. The primitive
ings, checking them for consistency as it goes, and backtrack-      elements are polygon, rectangle, triangle, ellipse,
ing when necessary. The test, here, is actual subgraph iso-         circle, arrow, line, point, curve, and text. There is
morphism: if A is related to B in the target, then the relations    also a set element type, with members that have in-set re-
(links, edges) between m(A) and m(B) must include at least          lations back to the set they are members of, though these do
those that held between A and B, where m(∗) is a mapping            not correspond to visible entities—this is purely for group-
from target to source. This algorithm returns all valid map-        ing purposes. Each element is represented as a frame with
pings. The idea is that the first two phases have restricted the    attribute slots such as location, size, orientation, and
                                                                1484

thickness, but these attributes will not concern us, since         function G ENERATE M APPINGS
mappings between attribute values are not part of the required       1: sourceRels ← first simage from source problem
mappings, and thus representing them in the semantic net-            2: targetRels ← target problem simage
work is not necessary.
                                                                     3: sRelLables ← names of all relations represented in
   Primitive visual relations represented are touching,
                                                                        sourceRels
above-below, right-of-left-of, in-front-of-behind,
                                                                     4: tRels ← remove from targetRels all relations that don’t
and off-s-image. A typical knowledge state is represented
with a node corresponding to that knowledge state (e.g.                 match one in sRelLabels and all relations involving a
L14-simage1), and elements (which may be sets) are repre-               literal (i.e. attribute-value pairs)
sented with contains-object relations from the knowledge             5: tRelLabels ← names of all relations represented in tRels
state element to the visual elements themselves.                     6: sRels ← remove from sourceRels all relations that don’t
   We describe next some example problems originally de-                match one in tRelLabels and all relations involving a
signed for Galatea. The first example problem is a fairly sim-          literal (i.e. attribute-value pairs)
ple one: dividing a pizza into some number of slices based           7: sNodes ← list of all nodes (elements) from sRels
on analogy to the problem of dividing up a cake into some            8: tNodes ← list of all nodes (elements) from tRels
number of pieces. In this case, there is a cake (or pizza), and      9: domains ← GENERATE D OMAINS(sNodes,
a set of people in the initial problem state. Set members are           LENGTH (tNodes))
not mapped, and the division is made in transformations in
                                                                   10: rDomains ← GENERATE D OMAINS(tNodes,
later problem states, so the only possible mappings are cake
                                                                        LENGTH (sNodes))
to pizza and set of people to set of people, or cake to set of
people and set of people to pizza. The problem, as repre-          11: f Mappings ← FIND P ROJECTIONS(sRels, tNodes,
sented in Galatea, does not contain any visual relations be-            tRels, domains)
tween the set of people and the cake (or pizza), and thus there    12: rMappings ← FIND P ROJECTIONS(tRels, sNodes,
is nothing constraining the mapping to be the “correct” map-            sRels, rDomains)
ping. The latter mapping will probably lead to failure in the      13: rMappings ← reverse each of the mappings returned in
transfer stage, but both are returned by our system.                    rMappings so that they map source onto target properly
   A more complex and interesting example is based on Gick              instead of target onto   source
                                                                                               S
and Holyoak’s fortress/tumor problem (1980). In this prob-         14: return f Mappings rMappings
lem, we have an army attacking a fortress over mined roads,
and the general decides to split his army to avoid setting off                     Algorithm 1: Generate Mappings
the mines, and a target case in which there is a patient with
a tumor and a doctor who wants to kill the tumor with radi-
ation. The supposed analogy is to split the beam (somehow)            The mapping algorithm (see Algorithm 1) works as fol-
to avoid killing the healthy tissue that is in the way. The vi-    lows: the outer procedure (generate mappings) first retrieves
sual representation of these problems has a fortress (and a        the named source and target representations from memory,
tumor represented similarly) and four roads (sections of the       then applies the above heuristics to it, and finally generates
body surrounding the tumor), and an army represented by an         the mappings and returns them. Since it computes subgraph
arrow (a ray of radiation represented similarly). The “cor-        isomorphism, as above, we run it both ways—attempting to
rect” analogy maps the set of roads to the set of body parts,      map source onto target, and also attempting to map target
the fortress to the tumor, and the army to the ray. However,       onto source and reversing the returned mappings. Thus it
there being three of each thing to match, and the particular       is possible to find the target within the source or vice versa,
representation chosen not using the visual relations (though       finding the source within the target. The algorithm for FIND -
it could have), there was nothing constraining the mapping,        P ROJECTIONS is identical with that of the third phase, “find
and all six possible correspondences were returned. Had vi-        matchings”, above.
sual relations constrained it, the number of possible mappings        It’s important to note that this does not actually solve the
would have been smaller.                                           mapping problem; it particular, it returns all mappings, so
                                                                   that an additional search or evaluation stage is necessary to
Mapping                                                            find the relevent ones. This is where pragmatic and semantic
Galatea has set up the requirements for the mapping task           constraints may start to enter back into the picture. Our work
such that only visual elements are to be mapped, not attribute     to date has begun with only structural constraints as an ex-
values, and so attribute values (which can be represented as       periment, and we plan to reintroduce other constraints as the
propositions, and hence can be represented in a semantic net-      larger problem context is reintroduced.
work) are not included in the input to the mapping system. In         At any rate, the cake/pizza example described above, when
addition, members of sets are (generally) not to be mapped,        run through this system, came up with two mappings: one
and so any visual element on the left-hand side of an in-set       that maps the cake to the pizza and the set of people to the set
relation can be pruned from the mapping system’s input, as         of people, and one that maps the cake to the set of people and
well. With these two constraints, the mapping system was           the other set of people to the pizza:
run on several sample problems, two of which were described
above. Four other problems of similar nature and size were            Cake maps-to Pizza
also run on this system.                                              Set12 maps-to Set14
                                                               1485

   Cake maps-to Set14                                               given C and multiple choices D, E and F, ANALOGY found
   Set12 maps-to Pizza                                              which of D, E, and F had a relationship with C analogous
                                                                    to that between A and B. It represented the objects and the
   Set12 is the set of people in first cake problem knowledge       spatial relationships between them in the form of semantic
state, and Set14 is the set of people in the first pizza problem    networks, which enabled it to compare the spatial structure of
knowledge state. Proteus, recall, does not map members of           the various arrangements. However, since ANALOGY per-
sets, and so the individual people are not mapped onto each         formed an exhaustive and linear search of the mappings, its
other, only the sets. The first one, obviously, is the ”correct”    method cannot scale up to any realistic problem.
one, the one that would lead to a successful transfer and eval-
                                                                       While ANALOGY was an early program that matched
uation of the problem solution.
                                                                    symbolic descriptions of two drawings and found similari-
   The fortress/tumor problem was more interesting. The
                                                                    ties and differences between the drawings, MAGI (Ferguson,
heuristics pruned out the set of roads and body parts, as well
                                                                    2000) and JUXTA (Ferguson & Forbus, 1998) are two recent
as the shapes and sizes and positions of all the elements, and
                                                                    systems that find mappings between symbolic representations
so the only details left to influence the mappings were the
                                                                    of two drawings (or two portions of the same drawing). These
fact that the elements were part of the problem. There were
                                                                    systems use truth maintenance as the mechanism for keeping
three elements, thus, remaining, for each one: Fortress and
                                                                    track of new constraints and retracting old conclusions.
Tumor, Soldier-Path and Ray, and Set1 (the set of roads) and
Set2 (the set of body parts surrounding the tumor), and six            Our decomposition of the retrieval task into feature-based
mappings produced:                                                  reminding and structure-based selection is similar to that of
                                                                    MAC/FAC (Forbus et al., 1995). The similarity is specially
   Fortress maps-to Tumor                                           striking because in its current stage ours deals only with struc-
   Soldier-Path maps-to Ray                                         tural constraints; as noted in the introduction, we plan to ex-
   Set1 maps-to Set2                                                plore and exploit semantic and pragmatic constraints in the
                                                                    next stage. However, in contrast to MAC/FAC, the experi-
   Fortress maps-to Tumor                                           ments described in (Yaner & Goel, 2003) indicate that the
   Soldier-Path maps-to Set2                                        two-stage decomposition of the retrieval task provides little
   Set1 maps-to Ray                                                 computational benefit over just one-stage retrieval based on
                                                                    structure-based selection.
   Fortress maps-to Ray                                                In computer-aided design, FABEL (Gebhardt, Voß,
   Soldier-Path maps-to Tumor                                       Gräther, & Schmidt-Belz, 1997) was an early project to ex-
   Set1 maps-to Set2                                                plore the automated reuse of diagrammatic cases. In partic-
                                                                    ular, TOPO (Börner, Eberhard, Tammer, & Coulon, 1996),
   Fortress maps-to Ray                                             a subsystem of FABEL, used the maximum common sub-
   Soldier-Path maps-to Set2                                        graph (MCS) of the target drawing with the stored drawings
   Set1 maps-to Tumor                                               for retrieve similar drawings. Gross and Do (1995) describe
                                                                    a method for retrieving designs that contain a given design
   Fortress maps-to Set2
                                                                    pattern in the domain of architectural design. Gross and Do’s
   Soldier-Path maps-to Tumor
                                                                    heuristic method is very simple: given two drawings, it com-
   Set1 maps-to Ray
                                                                    pares the type and number of spatial elements and the spatial
   Fortress maps-to Set2                                            relations by counting. Their method is roughly equivalent to
   Soldier-Path maps-to Ray                                         the first stage in the two-stage retrieval process.
   Set1 maps-to Tumor                                                  In computer vision, Grimson and Huttenlocher (1991) de-
                                                                    veloped a similar method for object recognition. They begin
   Now, this really represents all correspondences between          with a model with a set of features, such as a set of poten-
three things and three things. The primary reason for this is       tial edges in some arrangement, and sensor data with a set of
that the representation chosen for this particular problem does     sensor features (edges, vertices, etc.); a lot of sensor features
not involve any reference-frame relations such as left-of or        might be noise. The task is to find a set of sensor features
right-of. If it had, these relations would constrain the map-       that comes from one (and the same) object. Their method
pings.                                                              matches model features to sensor features under some trans-
                                                                    formations within specific limit of tolerance. The model im-
                          Discussion                                poses constraints, for instance, by its arrangement of features.
In the introduction, we mentioned Holyoak and Thagard’s             Although they do not describe it as constraint satisfaction,
ACME system (1989) and noted the similarities and differ-           their method in fact is in assigning values to variables under
ences between our work and theirs. ANALOGY (Evans,                  unary and binary constraints imposed by the arrangement by
1968) was an even earlier AI program that performed the task        using a backtracking depth-first search.
of finding similarities and differences between visual cases.          Constraint satisfaction methods have become common in
It performed simple geometric analogies of the kind that ap-        AI: Prosser (1993) describes methods of constraint satisfac-
pear on many intelligence tests. Let us suppose that each of        tion with backtracking; and Bayardo and Schrag (1997) pro-
A, B, C, D, E and F is an arrangement of simple geometric           vide evidence of applicability of constraint satisfaction with
objects, e.g., a small triangle inside a large triangle, a small    backtracking for real-world intractable problems in planning
circle inside a larger circle, etc. Given an analogy A:B, and       and scheduling. Our method of constraint satisfaction with
                                                                1486

backtracking, with the case memory organized into discrim-          Evans, T. G. (1968). A heuristic program to solve geomet-
ination trees, builds on the work of Ounis and Paşca (1998).             ric analogy problems. In M. Minsky (Ed.), Semantic
They view the general problem of associative image retrieval              Information Processing. Cambridge, MA: MIT Press.
as one of computing projections over conceptual graphs rep-         Ferguson, R. W. (2000). Modeling orientation effects in sym-
resenting their content. Although they do not describe it as              metry detection: The role of visual structure. In L. R.
a constraint satisfaction method, their algorithm, in fact, is
                                                                          Gleitman & A. K. Josh (Eds.), Proc. 22nd Annual Conf.
doing constraint satisfaction to compute the projection. How-
ever, their method is limited to constraint satisfaction with             Cognitive Science Society. Philadelphia, PA: Lawrence
generate and test with no backtracking.                                   Erlbaum Associates.
                                                                    Ferguson, R. W., & Forbus, K. D. (1998). Telling juxta-
                        Conclusions                                       positions: Using repetition and alignable difference in
                                                                          diagram understanding. In K. Holyoak, D. Gentner, &
We have described a constraint satisfacton method for the                 B. Kokinov (Eds.), Advances in Analogy Research (pp.
retrieval and mapping tasks of analogy. Our method (i) or-
                                                                          109–117). Sofia, Bulgaria: New Bulgarian University.
ganizes the source cases in a discrimination tree, (ii) uses
(general-purpose) heurstics to guide the search, (iii) back-        Forbus, K. D., Gentner, D., & Law, K. (1995). MAC/FAC: A
tracks (if and when needed), and (iv) searches all the source             model of similarity-based retrieval. Cognitive Science,
cases at once. We also presented an evaluation of the method              19(2), 141–205.
for the retrieval and mapping of diagrams from an external          Gebhardt, F., Voß, A., Gräther, W., & Schmidt-Belz, B.
memory.                                                                   (1997). Reasoning with complex cases (Vol. 393).
   Our laboratory-scale experiments, with drawings contain-               Boston: Kluwer Academic Publishers.
ing only up to fifty spatial elements and their representations     Gick, M. L., & Holyoak, K. J. (1980). Analogical problem
containing only up to eight thousand terms, indicate that the             solving. Cognitive Psychology, 12, 306–355.
method of constraint satisfaction is fast and appears quite         Grimson, W. E. L., & Huttenlocher, D. P. (1991). On the
promising for use in practice. On the one hand, we fully ex-              verification of hypothesized matches in model-based
pect that the complexity of the task will significantly worsen            recognition. IEEE Transactions on Pattern Analysis
for larger drawings and larger libraries of drawings, but, on
                                                                          and Machine Intelligence, 13(12), 1201–1213.
the other, we also expect that it should be possible to de-
velop significantly faster methods for the task. For exam-          Gross, M. D., & Do, E. Y.-L. (1995). Diagram query and
ple, we expect that use of spatial aggregations and abstrac-              image retrieval in design. In Proc. 2nd Int’l Conf. on
tions to organize the representation of the spatial structure             Image Processing. Crystal City, VA: IEEE Computer
of a drawing in the form of a linked hierarchy of semantic                Society Press.
networks would partition the search space performance espe-         Holyoak, K. J., & Thagard, P. (1989). Analogical mapping by
cially for large, complex drawings (e.g. Papadias, Kalnis, &              constraint satisfaction. Cognitive Science, 13(3), 295–
Mamoulis, 1999). In addition, more sophisticated constraint               355.
satisfaction techniques such as forward checking and intel-         Ounis, I., & Paşca, M. (1998). RELIEF: Combining expres-
ligent variable ordering, to name just a couple of common                 siveness and rapidity into a single system. In Proc. 21st
ones, can be brought to bear on the problem as well, taking               Annual ACM SIGIR Conference (p. 266-274). Mel-
advantage of structure in the knowledge representation and
                                                                          bourne, Australia: ACM Press.
the search space.
                                                                    Papadias, D., Kalnis, P., & Mamoulis, N. (1999). Hierarchi-
                                                                          cal constraint satisfaction in spatial databases. In Proc.
                         References
                                                                          aaai-99. Orlando, FL: AAAI Press.
Bayardo, R. J., Jr., & Schrag, R. (1997). Using CSP look-           Prosser, P. (1993). Hybrid algorithms for the constraint sat-
       back techniques to solve real-world SAT instances. In              isfaction problem. Computational Intelligence, 9(3),
       Proc. AAAI-97 (pp. 203–208). Providence, Rhode Is-                 268-299.
       land: AAAI Press.                                            Thagard, P., Holyoak, K. J., Nelson, G., & Gochfeld, D.
Börner, K., Eberhard, P., Tammer, E.-C., & Coulon, C.-H.                 (1990). Analog retrieval by constrain satisfaction. Ar-
       (1996). Structural similarity and adaptation. In I. Smith          tificial Intelligence, 46, 259–310.
       & B. Faltings (Eds.), Advances in Cased-Based Rea-           Yaner, P. W., & Goel, A. K. (2003). Visual case-based rea-
       soning: Proc. 3rd European Workshop on Cased-Based                 soning I: Memory and retrieval. In Proc. IICAI-03. Hy-
       Reasoning (Vol. 1168, pp. 58–75). Lausanne, Switzer-               perbad, India: Springer-Verlag.
       land: Springer-Verlag.
Davies, J., & Goel, A. K. (2001). Visual analogy in problem
       solving. In Proc. IJCAI-01 (pp. 377–382). Seattle, WA:
       Morgan Kaufmann Publishers.
Davies, J., & Goel, A. K. (2003). Representation issues in
       visual analogy. In Proc. 25th Annual Conf. Cognitive
       Science Society. Boston, MA: Lawrence Erlbaum As-
       sociates.
                                                                1487

