flexible in its representations such that it can reason          polygon                 ellipse         level 3
at multiple levels of grouping abstraction.
Shape-type Superclass Hierarchy                                   line                 open curve        level 2
The above similarity notions use the nature of the
analogs as given in the representation. However sim-
ilarity can also be found through the application of                          point                       level 1
domain knowledge to the analogs. In the visual do-
main, this can take the form of a shape-type hier-               Figure 1: Component Aggregation Hierarchy
archy (See Figure 2.) For example, a right triangle
and an isosceles triangle are similar because they are
both triangles. Even in cases where the term trian-          clip in another pile unless there is reason to do so,
gle, and its relation to right-triangle and isosceles-       even though we might see the two sets as similar.
triangle are not explicit in the representation of the          The same goes for aggregate objects. At the first
analogs, an agent can use the domain knowledge of a          pass of mapping, the aggregates are mapped to each
shape-type hierarchy to find element similarity. We          other. In instances of conflict, the agent uses a mea-
will show that abstraction using this hierarchy is           sure of the shape similarity of the components to
particularly useful (compared to structure-mapping)          resolve it.
for analogs in which the spatial arrangement of the             When there is a need to align the members or com-
visual elements is less important than the shapes of         ponents, the entire mapping function can be recur-
the objects represented. The examples we explicate           sively called on the sets or aggregates in question—
below are of this type. Using abstraction has been           that is, restart the mapping process as though the
used in Minimal Ascension (Falkenhainer, 1988) and           two aligned sets or aggregates were to the two images
in cross-domain analogical learning (Klenk & For-            to be mapped.
bus, 2007).                                                     The simplest kind of aggregates are visual ele-
   Our theory is that aggregation and set abstrac-           ments aggregated together. Using knowledge of a
tion are useful representations for mapping visual           shallow aggregation hierarchy (see figure 1) the agent
analogs, and that re-representation using a shape-           can bring more domain knowledge to bear on the
type hierarchy can address some cases of ontological         aggregate objects to align the components. When
mismatch, where similar ideas cannot be identified           called upon to do align the components of simple vi-
as such because they are represented with different          sual elements, to resolve conflicts the most specific
symbols.                                                     element in either aggregate object is decomposed
                                                             into its aggregate parts. Then the identity-based
                        Model                                mapping system tries again. This process repeats
In this section we will describe our theoretical mod-        until all the align-able sub-elements are aligned.
els for the three kinds of visual abstraction in more
detail.                                                      Shape-Type Hierarchy
   Our representational architecture consists of             Each level of the shape-type hierarchy is associated
propositions, each of which connects two symbols             with a level number. The higher the number, the
with a relation. For example                                 less abstract the shape is. Abstraction is changing
                                                             a shape to its more abstract form. For example,
   (butterdish looks-like rectangle)                         abstracting a square (level 8) means transforming it
                                                             to a rectangle (level 7).
connects the butterdish symbol to rectangle with a
relation that the agent uses to align symbols with           Process
the same shape type. This uses the Covlan visual
                                                             Mapping is iterative. A mapping is a set of maps,
language (Davies & Goel, 2007).
                                                             which are alignments between a visual element in
Set and Aggregation Hierarchies                              one analog to an element in the other.
Sets are explicit visual objects with no shape. They        1. Create maps of identical shape types, including
have links to their members, and the members like-              aggregates and sets, ignoring the components of
wise have back-pointers to the sets. Sets can contain           aggregates and the members of sets. If there is a
other sets as members. Sets get aligned to other                conflict with mapping aggregates and sets, break
sets through some similarity measure based on the               them up into their constituents and see which are
shapes of their members, but the members them-                  the most similar (a simple vector analysis of the
selves will not be mapped unless the agent has a                contents).
specific reason to do so. The cognitive justification
for this is introspective: we do not appear, for exam-      2. If there are no more shapes to map in either the
ple, to align each paper clip in one pile to each binder        target or the source analog, recursively run this
                                                         1554

                                     shape                                                             level 1
                       point                           curve                                           level 2
                                     closed−curve                    open−curve                        level 3
                       ellipse       polygon                    spline          segmented−line         level 4
                       circle      quadrilateral             triangle                                  level 5
                  parralellogram        right−triangle    isoceles−triangle           scalene−triangle level 6
                    rectangle                            equilateral−triangle                          level 7
                     square                                                                            level 8
                                           Figure 2: Shape Type Hierarchy
    mapper on the members of sets and the compo-                    (qualitative or relative) within an image of a par-
    nents of aggregates, if any, then exit.                         ticular visual element, and the frame representation
                                                                    naturally allows one to add a slot has-location (or
3. Abstract the highest numbered visual primitive in                what have you). The only information actually used
    either analog one level. Go to step 1.                          in the implementation was the looks-like slot for
                                                                    each visual element and the has-size slot (which
    The visual elements need to be abstracted sepa-                 took sizes like small, medium, and big).
 rately. If every element in the image is abstracted
 at once, matches will miss each other as they pass                 Problem Solver
 through levels of abstraction.                                     The second part of the implementation was the prob-
                                                                    lem solver itself. Following the problem space hy-
                  Implementation                                    pothesis, and using the Classical Problem Solver
 We have some implemented the ideas above in a run-                 (Forbus & DeKleer, 1993), we transformed the map-
 ning computer program called Thalassa. Thalassa                    ping problem into a search problem. One can think
 maps identical shapes and groups, and abstracts                    of one “state” of the search as the current set of
 shapes with the shape-type hierarchy.                              maps—that is, the list of elements in each of the two
    Thalassa has two basic components: a frame sys-                 analogs that have been mapped so far. An operator
 tem and a “classical” problem solver. First, the                   generating a new state in the search can do one of
 “memory” of shape types and images with their el-                  two things: map as many elements with the same
 ements and aggregate objects and such was built                    shape as possible (generating a new state for each
 using a simple frame system. Relations of the                      partial matching possible), or else pick one element
 sort (building looks-like square) lend them-                       to abstract.
 selves naturally to a frame-based representation,                     The actual data structure representing a “state”
 where the frame for building has a slot looks-like                 in the search had the following elements:
 with the filler square. Likewise an image is a frame
 with a slot contains-elements whose filler is a list               Source The name of the source image frame
 of elements (symbols naming visual element frames)
 in the system. Though the content of the frames                    Target The name of the target image frame
 in our actual implementation was sparse, the idea                  Maps The list of maps gathered so far
 is that any extra information that might be useful
 to a larger problem-solving context could be added.                Unmapped Source Elements A list of source el-
 For instance, surely people are aware of the location                 ements that have not been mapped onto target
                                                             1555

         target                           source
Figure 3: These two analogs represent a table before
and after dinner. The fork and spoon are aggregate                       target                        source
objects. Pictured are plates, butter dishes, forks,
knives, spoons, and napkins.                                 Figure 4: In the lot source there is a group represent-
                                                             ing a 18 wheeler (an aggregate of a square represent-
                                                             ing the cab and a rectangle representing the trailer).
   elements, initially set to all the source elements in     Also in the image is a set of garbage cans. Note
   the image.                                                there are a different number of cans in the analogs.
                                                             The irregularly shaped object is a puddle, and the
Unmapped Target Elements A list of target ele-               lone rectangle is a dumpster.
   ments that have not found source analogs, initially
   set to all the target elements in the image.
Needs Abstraction? A flag indicating that there
   are unmapped source and target elements that                 The first part of this operation makes a list of all
   cannot be mapped without abstracting the shape            the elements that map to the given target (which
   types.                                                    is simply a list of all the unmapped sources that
                                                             are identical under the looks-like relation and
Abstractions A data structure that associates                the current abstractions), and separates these into
   with each element (source and target) it’s cur-           whole mappings, where one whole mapping has one
   rently abstracted shape type. This is initially           maps-to relation for each target (there may be tar-
   filled with the fillers from the looks-like slot,         gets with no mapped sources, of course). It takes
   and as shapes are abstracted the contents slowly          care to assemble all combinations when doing this.
   change.                                                      The second part of the mapping looks within each
                                                             mapping for two maps that map separate targets to
The goal condition in this search is simply that             the same source. If one is found, it is split into two
either the unmapped-source-elements list or the              mappings by removing one and then the other map
unmapped-target-elements list becomes nil, in                from the mapping.
which case there are no more elements to match.
   The next state operator generate-new-mappings                The third part simply takes each whole mapping,
simply checks the needs-abstraction flag,                    filters out those elements (sources and targets) which
calling abstract-one-element if it is true,                  have been mapped from the unmapped elements
and      extend-mappings        otherwise.          The      lists, and generates a new state. A list of all new
abstract-one-element function is quite sim-                  states is returned.
ple: it sorts the complete list of unmapped
                                                                The search returns all mappings that it found. It’s
elements, choosing the one with the highest level
                                                             not clear to us that there is necessarily any cogni-
arbitrarily (that is, if there are several, choosing the
                                                             tive plausibility in this decision, but for the sake of
one at the front of the sorted list as an arbitrary
                                                             implementation we thought it best to have it return
choice) to abstract one level, if possible. It cannot
                                                             all mappings rather than choose one arbitrarily as
abstract anything past shape, obviously (that being
                                                             the “best” mapping to return (one of the examples
the top of the hierarchy), and so returns nothing if
                                                             discussed below had several possible mappings).
all of the shapes in the image are fully abstracted.
   The extend-mappings function is much more                    One feature that has not been implemented in this
complex. It has three parts: (1) generate all pos-           version is recursing on aggregates and sets. Also, the
sible maps-to relations for each unmapped target             system could often abstract in more than one way,
element, separating them into whole mappings as              and it’s not clear that choosing one thing arbitrarily
it goes; (2) separate maps-to relations within each          to abstract is the best decision; it seems wiser to
mapping that map onto the same source into sepa-             have it abstract in all possible ways, generating new
rate whole mappings; and (3) generate a new state            states (and hence new subtrees) in the search (space)
for each whole mapping.                                      for each one.
                                                         1556

          4                                 4               LSA). Each word in LSA correlates with each other
                                                            word. When trying to map, different words with a
                                              4             correlation above a certain threshold are considered
                                4                           equivalent, and can be mapped.
                   5
                       6
                                                               The Structure-Behavior-Function knowledge rep-
                                       4
                                                            resentation language (Goel et al., 1997) offers an-
                  5                                         other means for resolving ontological mismatches.
                                                            SBF language representations of systems include
                                                            functional descriptions each device component.
                                                               Forbus et al. (1998, p.246) and Hummel and
           target                        source             Holyoak (1997) both suggest that ontological mis-
                                                            matches can be resolved through re-representation
                                                            using abstraction (e.g. lift and push can abstract
Figure 5: The faces example has similar faces re-           to move. This idea also suggests a superclass hier-
flected and rotated 180 degrees. Such transforma-           archy, but to our knowledge neither research group
tions do not preserve many spatial relations, with          has implemented this.
certain exceptions such as containment and connec-             Other implemented mappers rely on the identi-
tions. The numbers represent the level of specificity       cality of symbols (either of the mapped concepts or
of each shape in the shape-type hierarchy.                  the relations between them) and on a canonicalized
                                                            representation to avoid ontological mismatches.
                                                               Ours is a content based account that uses re-
Test Examples                                               representation using domain knowledge of visual ob-
We ran this system on three test examples. The first,       jects.
illustrated in Figure 3, was a table set up before and
after a meal (not necessarily images from the same                              Conclusion
meal), where the elements are scattered about the           In this paper we have described a method based on
table after the meal, and so structure would proba-         domain knowledge for analogical mapping of visual
bly be uninformative. However, a fork looks like a          representations. Specifically, we focused on group-
for, a plate looks like a plate, and so on. In fact, the    ing and shape-abstraction. The one-to-one mapping
system found four mappings: the fork could map to           constraint is maintained for our system, but sets and
the fork or the spoon (and vice versa), and the nap-        aggregates are treated as object to be mapped. Our
kin could map to the napkin or the butter dish (and         ideas are implemented into a running computer pro-
vice versa). Everything else mapped to the element          gram called Thalassa. Future versions of Thalassa
of the same name, thus giving four mappings.                will be able to recursively map set members and ag-
   The second, illustrated in figure 4, was supposed        gregate components.
to be an overhead view of a parking lot, with a                We conjecture that these content-based mapping
dumpster and a group of trash cans and a truck ag-          strategies will prove superior to structure-mapping
gregate (cab and trailer) and a puddle all in different     in cases when the analogs share similarly-shaped
positions. this had only one mapping.                       components but where the spatial arrangement of
   The third example, illustrated in figure 5, mapped       the objects is disordered. A full, cognitively plau-
a face to another face reflected and inverted. Again,       sible model of visual mapping will need to include
only one mapping was found.                                 both structure and object mapping. Future research
                                                            will test these claims through computational com-
                     Discussion                             parison with structure-based mapping engines on
We are theorizing about solutions to the cognitive          several examples.
problem known as the ontological mismatch prob-
lem: When two ideas that should be thought of as                                References
similar are not because they are represented with           Davies, J. & Goel, A. K. (2007). Transfer of
different symbols. This problem manifests itself in            Problem-Solving Strategy Using Covlan. Journal
mapping because the labels for objects and relations           of Visual Languages and Computing: 18, 149–164.
often do not match exactly. For example, mapping
orbits with revolves-around.                                Davies, J., Goel, A. K. & Nersessian, N. J. (2003).
                                                               Visual Re-Representation in Creative Analogies.
   Our solution uses shape-type abstraction, which
                                                               In A. Cardoso & J. Gero (Eds.) The Third Work-
is a content account of the visual domain. EMMA
                                                               shop on Creative Systems. International Joint
(Ramscar & Yarlett, 2003) uses a content account
                                                               Conference on Artificial Intelligence, 1–12.
as well to solve ontological mismatching for anal-
ogy. The knowledge EMMA uses is the correlation             Falkenhainer, B. (1988). Learning from Physical
of word proximity in text (Latent Semantic Analysis,           Analogies. Technical Report No. UIUCDCS-
                                                        1557

  R-88-1479, University of Illinios at Urbana-            MAPS-TO T-PLATE) (S-BUTTERDISH MAPS-TO
  Champaign. (Ph.D. Thesis)                               T-NAPKIN)) ((S-NAPKIN MAPS-TO T-BUTTERDISH)
Forbus, K., & De Kleer, J. (1993). Building Problem       (S-GLASS MAPS-TO T-GLASS) (S-FORK-AGGREGATE
  Solvers. MIT Press.                                     MAPS-TO T-FORK-AGGREGATE) (S-KNIFE MAPS-TO
                                                          T-KNIFE) (S-SPOON-AGGREGATE MAPS-TO
Forbus, K., Gentner, D., Markman, A. B., & Fer-           T-SPOON-AGGREGATE) (S-PLATE MAPS-TO
  guson, R. W. (1998) Analogy just looks like high        T-PLATE) (S-BUTTERDISH MAPS-TO T-NAPKIN))
  level perception. Why a domain-general approach         ((S-BUTTERDISH MAPS-TO T-BUTTERDISH)
  to analogical mapping is right. Journal of Experi-      (S-GLASS MAPS-TO T-GLASS) (S-FORK-AGGREGATE
  mental and Theoretical Artificial Intelligence, 10,     MAPS-TO T-SPOON-AGGREGATE) (S-KNIFE
  231–257.                                                MAPS-TO T-KNIFE) (S-SPOON-AGGREGATE
Gentner, D. (1983). Structure-mapping: A theoret-         MAPS-TO T-FORK-AGGREGATE) (S-PLATE MAPS-TO
  ical framework for analogy. Cognitive Science, 7,       T-PLATE) (S-NAPKIN MAPS-TO T-NAPKIN))
  pp 155-170.                                             ((S-BUTTERDISH MAPS-TO T-BUTTERDISH)
                                                          (S-GLASS MAPS-TO T-GLASS) (S-FORK-AGGREGATE
Goel, A., Bhatta, S. & Stroulia, E. (1997) Kritik:
                                                          MAPS-TO T-FORK-AGGREGATE) (S-KNIFE MAPS-TO
  An Early Case-Based Design System. In Maher,
                                                          T-KNIFE) (S-SPOON-AGGREGATE MAPS-TO
  M. and Pu, P. (Eds.) Issues and Applications of
                                                          T-SPOON-AGGREGATE) (S-PLATE MAPS-TO
  Case-Based Reasoning in Design, Mahwah, NJ:
                                                          T-PLATE) (S-NAPKIN MAPS-TO T-NAPKIN)))
  Erlbaum, pages 87–132.
                                                          CL-USER(36): (dribble)
Hummel, J. E., & Holyoak, K. J. (1997). Distributed
  representations of structure: A theory of analog-
  ical access and mapping. Psychological Review,
  104, 427–466.
Klenk, M. & Forbus, K. (2007). Cross domain analo-
  gies for learning domain theories. In A. Schwer-
  ing et al. (Eds.) Analogies: Integrating Multiple
  Cognitive Abilities, Volume 5-2007. Publication
  of the Institute of Cognitive Science, University
  of Osnabruck.
Ramscar, M. & Yarlett, D. (2003).           Semantic
  grounding in models of analogy: an environmental
  approach. Cognitive Science 27:1. 41–72.
                     Output
CL-USER(33): (find-mappings ’s-face-simage
’t-face-simage) ; Fast loading
/net/hc283/yaner/work/current/7613/bps/proj/memory.fasl
(((S-FACE-HEAD MAPS-TO T-FACE-HEAD)
(S-FACE-MOUTH MAPS-TO T-FACE-MOUTH)
(S-FACE-EYE MAPS-TO T-FACE-EYE)
(S-FACE-NOSE MAPS-TO T-FACE-NOSE)))
CL-USER(34): (find-mappings ’s-lot-simage
’t-lot-simage) ; Fast loading
/net/hc283/yaner/work/current/7613/bps/proj/memory.fasl
(((S-PUDDLE MAPS-TO T-PUDDLE)
(S-TRUCK-AGGREGATE MAPS-TO
T-TRUCK-AGGREGATE) (S-DUMPSTER
MAPS-TO T-DUMPSTER) (S-CANS
MAPS-TO T-CANS))) CL-USER(35):
(find-mappings ’s-table-simage
’t-table-simage) ; Fast loading
/net/hc283/yaner/work/current/7613/bps/proj/memory.fasl
(((S-NAPKIN MAPS-TO T-BUTTERDISH) (S-GLASS
MAPS-TO T-GLASS) (S-FORK-AGGREGATE
MAPS-TO T-SPOON-AGGREGATE) (S-KNIFE
MAPS-TO T-KNIFE) (S-SPOON-AGGREGATE
MAPS-TO T-FORK-AGGREGATE) (S-PLATE
                                                      1558

