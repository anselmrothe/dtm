UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
A Computational Model of How Learner Errors Arise from Weak Prior Knowledge
Permalink
https://escholarship.org/uc/item/08k9t92c
Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 31(31)
Authors
Cohen, William W.
Koedinger, Kenneth
Lee, Andrew
et al.
Publication Date
2009-01-01
Peer reviewed
 eScholarship.org                                 Powered by the California Digital Library
                                                                    University of California

 A Computational Model of How Learner Errors Arise from Weak Prior Knowledge
                                        oboru Matsuda (noboru.matsuda@cs.cmu.edu)
                                                 Andrew Lee (andrewlee@cmu.edu)
                                             William W. Cohen (wcohen@cs.cmu.edu)
                                           Kenneth R. Koedinger (koedinger@cmu.edu)
                                        School of Computer Science, Carnegie Mellon University
                                              5000 Forbes Ave., Pittsburgh, PA 15213 USA
                               Abstract                                    from only being aware of shallow features to learning to
                                                                           encode problems in terms of deep features. Our strategy
   How do differences in prior conceptual knowledge affect the
   nature and rate of learning? To answer this question, we built          toward tackling this important question is to create a
   a computational model of learning, called SimStudent, and               computational model of the learning process in complex
   conducted a controlled simulation study to investigate how              math and science domains and to use fine-grain data from
   learning a complex skill changes when the system is given               student learning over time to constrain model development.
   “weak” domain-general vs. “strong” domain-specific prior                Our first steps involve demonstrating how a computational
   knowledge. We measured SimStudent’s learning outcomes as                model of learning can learn when given shallow (or “weak”)
   the rate of learning, the accuracy of learned skills (test scores),
   and the fit to the pattern of errors made by real students. We
                                                                           knowledge, how such learning is slower than when deep (or
   found that when the “weak” prior knowledge is given, not                “strong”) knowledge is available, and how learning based
   only the accuracy of learned skills decreases, but also the             on shallow/weak knowledge better predicts patterns of real
   learning rate significantly slows down. The accuracy of                 student errors.
   predicting student errors increased significantly – namely,                  In this study, we focus on the process of learning
   SimStudent with the weak prior knowledge made the same                  problem-solving skills from examples, where students
   errors that real students commonly make. These modeling                 generalize examples to inductively learn skills to solve
   results help explain empirical results connecting prior
   knowledge and student learning (Booth & Koedinger, 2008).               problems. We are particularly interested in errors that are
                                                                           made by applying incorrect skills, and our computational
   Keywords: Computational model of learning; machine                      model explains the processes of learning such incorrect
   learning; SimStudent; weak prior knowledge; patterns of                 skills as incorrect induction from examples. A number of
   student errors; mathematics education.
                                                                           models of student errors have been proposed (Brown &
                                                                           Burton, 1978; Langley & Ohlsson, 1984; Sleeman, Kelly,
                           Introduction                                    Martinak, Ward, & Moore, 1989; Weber, 1996; Young &
In this paper, we present an innovative application of a                   O'Shea, 1981). Our effort builds on the past works by
synthetic student for modeling the error-prone process of                  exploring how differences in prior knowledge affect the
student learning in a complex problem-solving domain.                      nature of the incorrect skills acquired and the errors derived.
      Previous studies have shown that student                                  We hypothesize that incorrect generalizations are more
misconceptions or flaws in their prior knowledge not only                  likely when students have weaker, more general prior
directly cause errors in solving problems (VanLehn & Jones,                knowledge for encoding incoming information. This
1993), but may also affect learning. For instance, Booth                   knowledge is typically perceptually grounded and is in
and Koedinger (2008) demonstrated that particular                          contrast to deeper or more abstract encoding knowledge.
limitations in prior knowledge (e.g., treating terms in an                 An example of such perceptually grounded prior knowledge
equation as though terms and numbers were equivalent                       is to recognize 3 in x/3 simply as a number instead of as a
concepts) were correlated with particular strategic errors                 denominator. Such an interpretation might lead students to
later in instruction (e.g., subtracting 4 from both sides of x-            learn an inappropriate generalization such as “multiply both
4=13). The presumed causal connection is that the nature of                sides by a number in the left hand side of the equation” after
student prior knowledge changes the learning process and                   observing x/3=5 gets x=15. If this generalization gets
thus leads to differences in the problem-solving knowledge                 applied to an equation like 4x=2, the error of multiplying
that is acquired. But what is this learning process and how                both sides by 4 is produced. We call this type of
is it affected by differences in prior knowledge?                          perceptually grounded prior knowledge “weak” prior
      A classic result from Chi, Feltovich, and Glaser’s study             knowledge in a similar sense as Newell and Simon’s weak
(1981) that experts categorize problems with deep solution-                reasoning methods (1972). Weak knowledge can apply
relevant features while novices categorize problems with                   across domains and can yield successful results prior to
shallow, perceptually apparent, features is also relevant to               domain-specific instruction.       However, in contrast to
our endeavor. Also, Novick and Holyak (1991) found that                    “strong” domain-specific knowledge, weak knowledge is
domain expertise is a significant predictor of analogical                  more likely to lead to incorrect conclusions.
transfer, but general analogical reasoning skill is not. We are                 The goal of the present paper is to investigate an impact
ultimately interested in understanding how a novice goes                   of the prior knowledge on learning problem-solving skills
                                                                       1288

using a computational model of inductive learning. We have         Table 1: The three most common error schemata. The
implemented the proposed learning model as an interactive          problem schema is an abstracted form of an equation with A,
machine-learning agent, called SimStudent that learns skills       B, and C representing numbers and v representing a variable.
through tutored problem-solving. To test the hypothesis            An error schema represents the error pattern by using letters
about the impact of “weak” prior knowledge on learning, we         from the problem schema
conducted a controlled simulation study by giving
SimStudents different types of prior knowledge and                   Error Schema        Frequency    Problem Schema
measuring learning outcomes as well as a fit to human                multiply by A           73       A/v=C, A/v=-C,
students’ error patterns.                                                                             -C=A/v, C=A/v, Av=C,
     In the rest of the paper, we first analyze typical errors                                        v/-A=-C, C=v/-A, …
that human students commonly make. The analysis is based             divide by A             42       -Av=C, -Av=-C,
on student-tutor interaction log data collected from a                                                C=-Av, -C=-Av,
classroom study. We then provide a brief overview of                                                  v/A=-C, C=v/A, …
SimStudent, mostly focused on its learning algorithms to             add –B                  32       C=-B+Av, -B+(-Av)=-C,
present how prior knowledge affects the SimStudent                                                    C=Av+(-B), -B+(-Av)=C,
learning. Finally, we describe an empirical simulation study                                          -C=-B+Av
to test our hypotheses where SimStudents are trained with          recognized as a known type of error by the Tutor, or “Error”
different kinds of prior knowledge to measure the impact of        otherwise.      There were a total of 11040 “Correct”
prior knowledge on learning outcome.
                                                                   transactions, 2010 “Bug” transactions, and 1097 “Error”
                                                                   transactions in the dataset. The remaining transactions were
                      Student Errors                               hint requests.
For the current study, we used a dataset collected from a
classroom study where students learned Algebra I with a            Error Analysis
commercially available Cognitive Tutor (called the Algebra         To analyze errors made by students, we categorized the total
Tutor hereafter) developed by Carnegie Learning Inc. The           of 3107 Bug and Error transactions by abstracting an error
classroom study was conducted to investigate how students’         itself as well as the equation on which the error was made.
prior knowledge affect the way students develop                         We abstracted errors and equations by replacing
misconceptions (Booth & Koedinger, 2008).                          numbers and variables with letters. For example, when a
     While students were learning equation solving with the        student made an error to “multiply by 3” for “3/x=-4,” the
Algebra Tutor, the interaction between the individual              equation was represented as “A/v = -B” and the error was
students and the Algebra Tutor was recorded and stored in a        represented as “multiply by A.” We call the abstracted form
free, open-resource repository, called DataShop (Koedinger,        of error and equation the Error Schema and Problem
Cunningham, Skogsholm, & Leber, 2008) that shares                  Schema. Table 1 shows the three most common error
experimental data collected from in vivo studies conducted         schemata observed in the dataset.
in LearnLab participating schools maintained by the
Pittsburgh Science of Learning Center (www.learnlab.org).                                   SimStudent
This section describes the student-tutor interaction log data
used and the analysis of errors made by students.                  SimStudent is an application of programming by
                                                                   demonstration (Cypher, 1993) with an underling inductive
Data                                                               logic programming technique (Muggleton, 1991) that
                                                                   generalizes examples of correct and incorrect skill
There were 71 students involved in the classroom study. A
                                                                   applications to learn individual skills and their applications
total of 19,683 transactions between the students and the
                                                                   sufficient to solve problems.
Algebra Tutor were recorded. A transaction represents                   For SimStudent, generalization for a particular skill
either (1) a student’s attempt at a step with possible             application is done by providing a pragmatic explanation on
feedback from the Tutor, or (2) a student’s request for a hint     “when” the skill should be applied on “what” part of the
with the actual hint message provided by the Tutor. During         problem and “how” a step is made. A generalization of a
tutoring, students had to perform a step correctly to proceed      skill application is then represented in the form of
to the next step, but students could make multiple mistakes.       production rule. The what- and when-parts of an
They could also ask for a hint when they could not perform         explanation compose the condition part (left-hand side) of
a step correctly. The Tutor first provided an abstract hint,       the production rule. The how-part composes the action part
but then students could have asked for a more detailed hint        (right-hand side) of the production rule.
if necessary, until the Tutor finally provides very specific
instruction on what to do next (e.g., “enter 3x in the             Learning Algorithms
highlighted cell”), the so-called “bottom-out hint.”
     The transactions in which students made an attempt at a       During tutoring, SimStudent accumulates positive examples
step were coded as “Correct” if the Tutor recognized the           of a particular skill application when (1) the Tutor provides
attempt as a correct behavior, “Bug” if the attempt was            a bottom-out hint on a step on which the skill is applied, or
                                                               1289

(2) SimStudent correctly applies the skill. On the other           by A.” This error schema can be modeled with
hand, SimStudent accumulates negative examples for a skill         getNumberString() and multiply() – get a number and
application when (1) SimStudent applies the skill                  multiply both sides by that number. Without the weak
incorrectly and gets negative feedback from the Tutor, or (2)      operator, we need to have different (disjunctive) production
when a tutor provides a hint on a different skill – the context    rules to model the same error schema for different problem
where that skill was applied becomes an implicit negative          schemata – getNumerator() for A/v=C and getCoefficient()
example for all other skills. SimStudent composes a                for Av=C.
production rule for each individual skill so that the                   Based on the above observations, we have hypothesized
production rules agree all positive examples and do not            that we can simulate how students’ learning incorrect skills
agree any of the negative examples.                                from tutored problem-solving by providing SimStudent with
     To compose production rules, SimStudent uses two              weak operators. The next section describes an empirical
types of prior knowledge: feature predicates and operators.        study to test this hypothesis.
Feature predicates are boolean functions used to test
whether a particular condition holds in a given situation. For                        Error Analysis Study
example, a feature predicate isPolynomial(P) returns the
boolean value true when P is a polynomial expression.              Method
Feature predicates are used to compose conditionals in the
                                                                   SimStudent was tutored on how to solve linear equation by
left-hand side of the production rules. Operators are general
                                                                   interacting with Carnegie Learning Algebra I Tutor like
string manipulation functions. For example, an operator
                                                                   human students learn with the Tutor interactively. That is,
getCoefficient(T) returns a coefficient of the term T when T
                                                                   SimStudent was posed a problem and asked to solve it.
is a variable term. Operators are used to compose a right-
                                                                   When SimStudent performed a step, the Tutor provided
hand side action sequence to generate the target step in an
                                                                   flagged feedback on the correctness of the step performed.
example.
                                                                   SimStudent attempted to apply rules until a step is
Manipulating Prior Knowledge                                       performed correctly. If SimStudent failed to perform a step
                                                                   correctly, then SimStudent asked the Tutor for a hint. The
Students often make errors by treating numbers and                 Tutor then provided a bottom-out hint by demonstrating
variables superficially without taking the surrounding             how to perform the step.
context into account. For example, when a student says                  There were two experimental conditions: a Strong Prior
3x+2 becomes 5x, he/she may have added 3 and 2 to get 5            Knowledge condition, in which SimStudent was given only
and concatenated x to it. Such behavior can be explained as        strong prior knowledge, and a Weak Prior Knowledge
if the student had recognized the tokens 3 and 2 in the            condition, in which some of the strong operators were
expression as numbers and since there is a “+” in between,         replaced with weak operators. Specifically speaking, the
the student adds these numbers together.                           strong operators to get a coefficient, to get a name of a
     The error analysis mentioned in the previous section          variable in a variable term, to get a denominator, and to get
showed that indeed, many of the common errors made by              a numerator were omitted. Instead, SimStudent was given
students can be explained in this way. Namely, students            weak operators such as to get a first number, to get a first
often rely exclusively on “shallow” features that are more         number with sign, and to get a first alphabet letter.
directly perceived in the input rather than taking the broader          There were also 12 student conditions to control a
context into account to infer a deep feature. An example of        difference in training problems. In each student condition,
use of shallow features is the mental equivalent of “to get a      there were 13 to 20 training problems. Those training
number in front of a variable” instead of “to get a                problems were randomly extracted from the same dataset
coefficient of a variable term.” We model such a shallow           used to analyze student errors in the previous section.
features with the “weak” operators, as opposed to the                   To measure learning gain, the production rules learned
“strong” domain dependent operators.                               by SimStudent were tested on the 11 test problems each
     In general, a particular example can be modeled both          time a tutoring was done on a single training problem. A set
with weak and strong operators. For example, suppose a             of 11 test problems were also selected from the same dataset
step x/3=5 gets demonstrated to “multiply by 3.” Such step         from which the training problems were extracted, but they
can be explained by a strong operator getDenominator(x/3),         were semi-randomly selected so that four of the most
which returns a denominator of a given fraction term and           commonly observed error schemata shown in Table 2 were
multiply that number to both sides. On the other hand, the         included.
same step can be explained by a weak operator                           Notice that since the test problems were extracted from
getNumberStr(x/3), which returns the left-most number in a         a classroom study where (human) students solved the test
given expression. In this context, the operator                    problems. Thus, some of the steps in the test problems were
getNumberStr() is considered to be weaker than the operator        correct and some were incorrect. To assess the accuracy of
getDemonimator(), because a production rule with                   the model, we asked SimStudent to predict what action
getNumberStr() explains broader errors. For example,               could be made for each intermediate state recorded in a test
imagine how we could model the error schema for “multiply          problem. Namely, we gave SimStudent intermediate states
                                                               1290

                                                                    across the test problems and student conditions. The X-axis
Table 2: A list of the four most commonly observed error            shows the number of training iterations.
schemata appeared in the 11 test problems. In the Error and              The Weak-PK and Strong-PK conditions had similar
Problem Schemata, the letters A, B, and C shows a number            success rates on test problems after the first 8 training
whereas the letter v shows a variable.                              problems. After that, the performance of the two conditions
                                                                    began to diverge. On the final test after 20 training problems,
   Error Schema        Problem Schema                               the Strong-PK condition was 82% correct while the Weak-
   add A               -A = B+Cv, A-Bv = C, -Av + B = C             PK was 66%, a large and statistically significant difference
   subtract A          -A + Bv = -C, Av = B, A = -Bv – C            (t = 4.00, p < .001). Further, we fit simple power law
   multiply A          -Av = B, A/v = B, Av = B                     functions to the learning curves (converting success rate to
   divide A            -Av = -B, -Av + B = -C, v/A = -B             log-odds) and observed that the slope (or rate) of the Weak-
                                                                    PK learning curve (.78) is smaller (or slower) than that of
in a test problem one at a time and (using a terminology in a       the Strong-PK learning curve (.82). To test whether this
literature of production system) asked SimStudent to                learning rate difference is significant, we subtracted the two
computed a conflict set for each state of the given test            functions in their log-log form and verified in a linear
problem. We then used an existing Carnegie Learning                 regression analysis that the coefficient of the number of
Algebra I Tutor to evaluate the correctness of individual rule      training problems (which predicts the difference in rate) is
applications in the conflict set.                                   significantly greater than 0 (p < .05).
     In each of the 12 student conditions, SimStudent was                While it is obvious that differences in prior knowledge
trained on 113 steps in average (the number of actual               can yield to differences in initial performance (as might be
training problems varies). Test problems have 140 correct           measured by a pre-test), this demonstration shows how
and 28 incorrect steps. For the current study, we only              differences prior knowledge can also affect the rate at
analyzed skills for addition, subtraction, division, and            which learning occurs.
multiplication.
Measurements
To measure the learning outcome, we have conducted both
qualitative and quantitative assessment for the production
rules learned.
     For a quantitative assessment, we computed a step
score for each step in the test problems as follows: 0 if there
is no correct rule application made, otherwise it is a ratio of
the number of correct rule applications to the number of all
rule applications allowing SimStudent to show all possible
rule applications on the step.
     For a qualitative assessment, we are particularly
interested in errors made by applying learned rules as well
as the accuracy of prediction. Given a step S performed by a        Figure 1: Average step score after each of the 20 training
human student at an intermediate state , SimStudent is             problems for SimStudents with either strong or weak prior
asked to compute a conflict set on . Rule application Ri           knowledge.
(i = 1, …, n) is coded as follows:
     True Positive: Ri yields the same step as S, and S is a
           correct step.                                            Impact on Prior Knowledge on Error Prediction
     False Positive: Ri yields a correct step that is not same      Figure 2 shows a number of true negative predictions made
           as S (S may be incorrect).                               on the test problems for each of the training iterations.
     False egative: Ri yields an incorrect step that is not        Surprisingly, the Weak PK condition did make as many as
           same as S (S may be correct).                            22 human-like errors on the 11 test problems. On the other
     True egative: Ri yields the same step as S and S is an        hand, the Strong PK condition hardly made human-like
           incorrect step.                                          errors.
                                                                       To understand how well SimStudent predicted human-like
                           Results                                  errors, we computed an accuracy of error prediction, called
                                                                    Error Prediction score, as True Negative / (True Negative +
Impact of Prior Knowledge on Learning                               False Negative) on incorrect steps in test problems. Figure 3
                                                                    shows the average of Error Prediction score for each of the
Both the Weak Prior Knowledge (Weak-PK) and Strong                  training iterations.
Prior Knowledge (Strong-PK) conditions learned skills and              As can be seen in the figure, the Error Prediction score
the performance on test problems improved as learning               improved for the Weak PK condition as learning proceeded.
proceeded. Figure 1 shows average step score, aggregated
                                                                1291

                                                                    explained using those operators. For example, an error to
25                                                                  “add B” for “A = B+Cv” can be learned as the follows:
                                                                        IF       right-hand side (RHS) is polynomial
20
                                                                        THEN     get a first number from RHS, and
                                                                                 add that number to both sides
15
                                                        Weak
                                                                    The italicized operation corresponds to a weak operator of
10
                                                                    first-number. This rule might be learned from A=-B+Cv
                                                        Strong
                                                                    gets “add B.”
                                                                          Probably the most striking finding is that SimStudent
 5
                                                                    sometimes learned correct production rules by combining
                                                                    weak operators.
 0                                                                        In one student condition, SimStudent first learned a
     001
     002
     003
     004
     005
     006
                                                                    skill to divide as “when the left-hand side (LHS) has a
     007
     008
     009
     010
     011
     012
     013
     014
     015
     016
     017
     018
     019
     020
                                                                    coefficient and RHS is a constant number then divide both
                                                                    sides by the first number with sign in LHS,” which is
Figure 2: Number of True Negative predictions, which are            represented as a production rule as follows:
the same errors made both by SimStudent and human
students on the same step in the test problems.                         IF   LHS has a number before alphabet, and
                                                                             RHS is constant number
                                                                        THEN get a first number with its sign from LHS, and
                                                                             divide both sides with it
                                                                    This production rule generated a human-like error to “divide
                                                                    A” for “v/A=B” during tutoring. SimStudent then revised
                                                                    the rule as follows:
                                                                        IF   LHS consists of a number and an alphabet
                                                                        THEN get the first alphabet from the LHS, and
                                                                             compute a quotient of LHS divided by the
                                                                             alphabet, and
                                                                             divide both sides with the quotient
                                                                    The first two operations in the action part of this production
Figure 3: Average of Error Prediction score after each of the       rule are basically extracting a coefficient of a variable term.
20 training problems for SimStudents with either strong or          Namely, SimStudent eventually learned how to take a
weak prior knowledge.                                               coefficient of a variable term by combining given weak
                                                                    prior knowledge. This observation suggests that SimStudent
This implies that SimStudent made more human-like errors            can also model students learning prior knowledge for future
than non-human like errors when trained on more problems.           learning. This must be further investigated this in the future
This observation further implies that the proposed model            studies.
predicts that it is difficult to get rid of human-like errors
                                                                    Table 3: Errors and problem schemata that appeared during
when the learner does not have Strong prior knowledge.
                                                                    the test as shown in Figure 2.
     Table 3 shows the types of human-like errors made by
SimStudent and the corresponding type of equations on
which the error was made on the test problems.                            Error Schema       Problem Schema       Freqency
     Although that SimStudent with Weak PK did actually                   add B              A = B + Cv              55
make many human-like errors is an encouraging result,                     add A              -Av+B = C               52
knowing the contents of production rules that SimStudent                  add A              A-Bv = C                44
learned (which reveals the cause of the errors) provides us               add C              Av+B = C                23
more knowledge about the impact of Weak PK on learning.                   add C              Av+B = -C               23
The next section shows qualitative analysis of production                 add A              -A = B+Cv               22
rules learned with the Weak prior knowledge.                              subtract A         -A+Bv = C               20
                                                                          subtract A         -Av+B = C               20
Production Rules Learned                                                  divide A           v/A = B                 14
Recall that we gave the Weak PK conditions three weak                     multiply A         A/v = B                 11
operators – first-number, first-number-with-sign, and first-              multiply A         Av = B                  2
alphabet. All human-like errors shown in Table 3 can be                   subtract C         Av+B = -C               1
                                                                          subtract A         A = Bv+C                1
                                                                 1292

                         Discussion                                Science of Learning Center, which is funded by the National
                                                                   Science Foundation Award No. SBE-0354420.
In this paper, we showed that SimStudent can be treated as a
computational model of human learning, and demonstrated
the ability to model the error-prone process of student                                    References
learning in a complex problem-solving domain. The                  Booth, J. L., & Koedinger, K. R. (2008). Key
fundamental hypothesis is that when students rely on more            misconceptions in algebraic problem solving. In B. C.
perceptually grounded, shallow prior knowledge then they             Love, K. McRae & V. M. Sloutsky (Eds.), Proceedings of
are more likely to learn incorrect skills.                           the 30th Annual Conference of the Cognitive Science
     We have seen the impact of Weak prior knowledge on              Society (pp. 571-576). Austin, TX: Cognitive Science
learning in two ways: (1) although SimStudent learns skills          Society.
with the Weak prior knowledge, the rate of learning slows          Brown, J. S., & Burton, R. R. (1978). Diagnostic models for
down and the accuracy of learned skills is not as good as the        procedural bugs in basic mathematical skills. Cognitive
ones learned with the Strong prior knowledge, and (2) the            Science, 2(2), 155-192.
Weak prior knowledge leads SimStudent to learn                     Chi, M. T. H., Feltovich, P. J., & Glaser, R. (1981).
qualitatively different production rules than the ones learned       Categorization and representation of physics problems by
with the Strong prior knowledge. With the Weak prior                 experts and novices. Cognitive Science, 5, 121-152.
knowledge, SimStudent often learned incorrect production           Cypher, A. (Ed.). (1993). Watch what I do: Programming
rules that produced the same errors the human students               by Demonstration. Cambridge, MA: MIT Press.
made.                                                              Koedinger, K. R., Cunningham, K., Skogsholm, A., &
     In prior comparisons of SimStudent with real student            Leber, B. (2008). An open repository and analysis tools
data (Matsuda, Cohen, Sewall, Lacerda, & Koedinger,                  for fine-grained, longitudinal learner data. In Proceedings
2007), we found that SimStudent started off behind real              of the international Conference on Educational Data
students (perhaps because real students have equation                Mining.
solving experience prior to using the tutor), but then quickly     Langley, P., & Ohlsson, S. (1984). Automated cognitive
passed them. Namely, in these prior runs of SimStudent,              modeling. In Proceedings of the Fourth ational
which used only strong prior knowledge, the learning rate            Conference on Artificial Intelligence (pp. 193-197).
was too fast relative to human students. The current weak-           Melon Park, CA: AAAI.
PK version of SimStudent is not only producing plausible           Matsuda, N., Cohen, W. W., Sewall, J., Lacerda, G., &
student errors but is learning at a slower rate that may well        Koedinger, K. R. (2007). Predicting Students
better correspond with the learning rate of real students. We        Performance with SimStudent that Learns Cognitive
will explore such a comparison in future work.                       Skills from Observation. In R. Luckin, K. R. Koedinger &
     In the study shown in this paper, we controlled prior           J. Greer (Eds.), Artificial Intelligence in Education (pp.
knowledge only for the operators to manipulate algebraic             467-476). Amsterdam, Netherlands: IOS Press.
expressions. We also noticed that human students often pay         Muggleton, S. (1991). Inductive Logic Programming ew
attention only to surface (shallow) features of the problems.        Generation Computing, 8(4), 295-318.
Such skewed perception on features can be modeled as               Newell, A., & Simon, H. A. (1972). Human problem
weak feature predicates for SimStudent. An impact of                 solving. Englewood Cliffs, NJ: Prentice-Hall.
having perceptually grounded weak feature predicates along         Novick, L. R., & Holyoak, K. J. (1991). Mathematical
with the weak operators on learning must be tested in the            problem solving by analogy. Journal of Experimental
future studies.                                                      Psychology: Learning, Memory, and Cognition, 17(3),
     In the current study, we have designed weak operators           398-415.
based on the observation of errors made by human students.         Sleeman, D. H., Kelly, A. E., Martinak, R., Ward, R. D., &
One way to increase a cognitive fidelity of the proposed             Moore, J. L. (1989). Studies of Diagnosis and
computational model is to provide more human-like “weak”             Remediation with High School Algebra Students.
prior knowledge. Analyzing students’ misconceptions and              Cognitive Science, 13(4), 551-568.
beliefs in conceptual knowledge (as opposed to the                 VanLehn, K., & Jones, R. M. (1993). What mediates the
procedural skills represented as production rules) would             self-explanation effect? Knowledge gaps, schemas or
provide insight into designing such human-like “weak”                analogies? In M. Polson (Ed.), Proceedings of the
prior knowledge. Such an attempt would also lead us to               Fifteenth Annual Conference of the Cognitive Science
better understanding on how and why prior knowledge                  Society (pp. 1034-1039). Hillsdale, NJ: Erlbaum.
affects not only solving problems but also learning                Weber, G. (1996). Episodic learner modeling. Cognitive
procedural skills.                                                   Science, 20(2), 195-236.
                                                                   Young, R. M., & O'Shea, T. (1981). Errors in Children's
                    Acknowledgments                                  Subtraction. Cognitive Science, 5(2), 153 - 177.
The research presented in this paper is supported by the
National Science Foundation Award No. REC-0537198.
This work was also supported in part by the Pittsburgh
                                                               1293

