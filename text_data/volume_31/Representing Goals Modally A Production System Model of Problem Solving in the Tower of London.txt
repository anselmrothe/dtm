UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
Representing Goals Modally: A Production System Model of Problem Solving in the Tower of
London
Permalink
https://escholarship.org/uc/item/1w68b9z3
Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 31(31)
Author
Miles, Gareth
Publication Date
2009-01-01
Peer reviewed
 eScholarship.org                                 Powered by the California Digital Library
                                                                    University of California

 Representing Goals Modally: A Production System Model of Problem Solving in the
                                                          Tower of London
                                               Gareth E. Miles (gmiles@glam.ac.uk)
                                                          University of Glamorgan
                                                         Trefforest, CF37 1DL, UK
                             Abstract                                    GLAM-PS is a competent model of complex human
                                                                         behaviour and an effort is made in this paper to compare it
   GLAM-PS (Glamorgan Problem Solver) is a production
   system model of problem solving in the Tower of London                with human data.
   (TOL) puzzle. It is introduced as a draft cognitive architecture        GLAM-PS is also an example of an implemented
   that is similar to John Anderson’s (1998, 2004) ACT-R, but            simulation-based grounded cognition theory of the type
   represents system goals, long term memory and production              proposed by Barsalou (2008). A criticism of some
   memory modally, rather than amodally. The current paper               grounded cognition theories is that they lack symbolic
   demonstrates how GLAM-PS models problem solving on 3-                 computational explorations that implement the somewhat
   disk TOL problems (a comparison with human data is also
   made). GLAM-PS uses representations of intended actions
                                                                         abstract ideas they are based on (Dennett & Viger, 1999).
   to control behaviour and planning utilizes the simulation of          Whilst GLAM-PS was not designed to be a computational
   future problem states.                                                implementation of theories of grounded cognition, it never-
                                                                         the-less behaves in a way that is almost entirely congruent
   Keywords: Grounded Cognition; Production               Systems;
   Problem Solving; Goal Handling
                                                                         with these grounded theories. As such, GLAM-PS provides
                                                                         a much-needed symbolic explication of ideas inherent in
                          Introduction                                   grounded cognition.        The status of GLAM-PS as a
                                                                         simulation-based theory is most evident when it is planning
   Our ability to engage in goal-directed action is a defining           ahead. GLAM-PS does this by simulating the consequences
characteristic of human behaviour. Different cognitive                   of intended actions.
architectures have taken various approaches to modelling                   The paper is structured in the following way: The first
goal driven behaviour. Early versions of Anderson’s ACT                  principal section outlines the theoretical assumptions that
included a goal stack as part of the architecture (e.g.                  GLAM-PS is based upon, highlighting its relationship with
Anderson, 1993), more recent versions (Anderson et al.,                  existing cognitive architectures. The second principal
2004) have modeled goals as alike to other memories in                   section describes the computational implementation of
terms of representation and storage, but distinct in the way             GLAM-PS. Following this, the main section demonstrates
they are utilised (through the action of an architecturally              in detail how GLAM-PS solves a 3-disk TOL problem. The
specified goal buffer). Other prominent architectures have               paper ends with a general discussion of key features of
placed significant emphasis on the role of amodal goal                   GLAM-PS and a brief outline of how it is hoped GLAM-PS
representations (e.g. EPIC, Meyer & Kieras, 1997).                       will be developed in the future.
   The current paper presents GLAM-PS a draft cognitive
architecture which has been computationally implemented                    Principal Assumptions of GLAM-PS Theory
in the domain of knowledge-lean problem solving
(specifically the Tower of London problem, a classic test of             Whilst GLAM-PS is similar to existing Cognitive
executive function commonly used in the diagnosis of                     Architectures, the differences of interest emerge from
Dyexecutive Syndrome). GLAM-PS is a production system                    number of simple assumptions. These assumptions and
architecture that represents goals modally, indeed the only              their rationale are outlined below.
cross-modal representation used is a ‘system state’
representation, containing details of active modal                         Assumption 1: Output modules (buffers in ACT-r) can be
representations in each of the architectures modules.                    loaded with a response, without that response being
   A key feature of GLAM-PS is that it is derived heavily                necessarily executed
from current production system architectures (primarily                    Assumption 2: The contents of output modules are
ACT-R and EPIC). In this respect it allows for an                        available as an input to other cognitive processes
interesting comparison between current modal-amodal
architectures and a draft modal-only architecture. In the                  These two related assumptions partially specify the action
current paper these differences are examined, in particular              of the output modules in GLAM-PS. The impact of these
the paper explores how executive control is handled by                   assumptions, and indeed GLAM-PS as a whole, is easiest to
GLAM-PS in a classic problem solving domain. GLAM-PS                     understand by relating it to ACT-r (the architecture it is
can be interpreted as a simplification of existing                       primarily derived from). The key difference between the
architectures and broadly speaking is functionally similar to            two architectures is the absence of a goal buffer/module and
ACT-R / EPIC. Given this, a key question is whether                      retrieval buffer/module in GLAM-PS. The former is a
                                                                     1852

                                                                                                             Output Threshold
               Visual/Spatial Input
               Module        PRODUCTION                                                        Manual Output Module
                  LTM          MEMORY
                                                                                              PRODUCTION
                                                                                                MEMORY               LTM
               Tactile Input Module                   System State                                Visual Focus Output
                             PRODUCTION             Representation                            PRODUCTION       Module
                  LTM          MEMORY             [Contains most active WM elements             MEMORY                LTM
                                                          from each module]
                                                                                                       Speech Output
               Auditory Input Module                                                          PRODUCTION       Module
                                                                                                MEMORY               LTM
                             PRODUCTION
                  LTM          MEMORY
             Figure 1: Diagrammatic Summary of GLAM-PS (LTM = Long Term Memory, WM = Working Memory).
direct result of Assumptions 1 and 2 (the absence of the               handles WM is conceptually different from WM in ACT-r
retrieval buffer is linked to Assumption 3, see below).                and other traditional production system architectures. In
Crucially, Assumptions 1 and 2 allow the output modules of             particular all WM types and elements are modality and
GLAM-PS to control action in a similar way to how ACT-                 input/output specific. Hence not only is the seen image of a
r’s goal buffer exerts control over action. Essentially the            square and the spoken word 'square' coded as separate WM
motor, eye movement and speech output modules are used                 elements, but the word 'square' heard is coded separately
to control and structure action in a broadly similar way to            from the word 'square' spoken. Each WM type and element
how amodal goal representations are used in ACT-r. This is             is specific to one module.
best illustrated by seeing how GLAM-PS uses its output                    WM types are defined with a type-name, a module
modules to control action in an example task (see the                  assignment, and then a list of slot names. For example the
section on modelling problem solving in the TOL).                      WM type representing seen disks in the Tower of London is
   Whilst Assumptions 1 and 2 are to the author’s                      defined below (left, VisIn = Visual Input):
knowledge unique to GLAM-PS (at least in the
                                                                          Type: Disk, Module: VisIn         Red_disk
computational modelling of problem solving), a version of                  Slots: Label, Display,             Type: Disk
the third assumption is also found in many embodied                        Disks_above, Disks_below,          Label: F
theories of cognition.                                                     Rea, Disks, Parent                 Display: Current_state
                                                                                                              Disks_above: 0
                                                                                                              Disks_below: 2
   Assumption 3:        All Long Term Memories (incl.                                                         Real: Yes
productions) are stored modally.
                                                                          Individual WM elements (WME) are then specified using
   One of the primary purposes of GLAM-PS is to attempt to             the format outlined in the WM type definition. The disk
provide a modal-only account of complex behaviour. The                 labelled ‘F’ in the TOL problems used is represented as
combination of Assumptions 1 to 3 allows for an                        shown above, when it is viewed.
architecture that does not need to assume the existence of                Each WME has an activation level. This activation
any amodal representations (cf. Harnad, 1990).                         decreases over time, but is increased when the WME is used
                                                                       (e.g. in production matching) or when activation spreads
                The GLAM-PS Theory                                     from an associated WME. The level of activation can also
   GLAM-PS (shown diagrammatically in Figure 1) is a                   be increased or decreased (inhibited) through the action-side
draft cognitive architecture based on a production system              of productions. The action-side of productions is also able
formalism. As implemented (in Microsoft Visual Studio                  to create new WMEs.
2005) the architecture is also supported by simple modality               When a WME is referenced in the action-side of a
specific semantic networks that help regulate the activation           production then other WMEs associated with this WME
levels of elements of working memory (ACT-r adopted a                  have their activation level increased. Associations are
similar hybrid architecture, see Anderson, 1993). Below the            formed when a particular WME (e.g. A) is replaced as the
key features of GLAM-PS are discussed in sub-sections                  most active WME within a module by a second WME (e.g.
dedicated to Working Memory, Production Matching and                   B). Everytime this occurs one unit of association is added
Action Execution.                                                      between these two elements (e.g A and B become associated
                                                                       +1 unit).        This, of course, dictates that inter-WME
Working Memory                                                         associations will be all within-module.
                                                                          Activation is spread from a WME to other associated
   The syntax of both the working memory elements and
                                                                       WMEs whenever the source WME’s activation level is
working memory (WM) types used by GLAM-PS will be
                                                                       raised. A parameter is set to control how much activation is
familiar to ACT-r users. However the way GLAM-PS
                                                                       spread (e.g. currently .5 in the TOL model).
                                                                1853

Production Matching and Conflict Resolution                              is judged to be unwise). Typically though the threshold will
   The productions used by GLAM-PS are matched against                   play a role and the output module will gather evidence for
the active elements in each module.1 As an example, two                  and against a suggested action (in the form of exciting
simple productions, initializing TOL problem solving after               productions and inhibiting productions), with the action
reading the instructions on screen are shown below. The                  only executed when a sufficient level of excitation is
first searches for instructions, whilst the second represents            reached. Executed actions are automatically inhibited to
them in the speech output buffer.                                        zero activation.
 Prod mve_vis_focus_to_instr [P1]      Prod recode_instructions [P2]      Modeling Problem Solving Competence in the
  VisIn =problem                        VisIn =instructions
    Type: TOL_problem                     Type: written_verb_noun                  Tower of London using GLAM-PS
 >>                                       Verb: =verb1                      The Tower of London (TOL) is a variant of the Tower of
  +VisFoc                                 Noun: =noun1
    Type: Search_for_target             -speech =not_already_recoded
                                                                         Hanoi (TOH) that has been used in problem solving
    Target_type: written_verb_noun        Type: spoken_verb_noun         research and clinical settings for nearly 30 years. It is
    Search_Area: all_screen               Verb: =verb1                   particularly important within Cognitive Neuropsychology,
    Activate: +20                         Noun: =noun1                   where it has been used as a test of frontal function, for
                                       >>
                                        +speech
                                                                         instance in the diagnosis of Dysexecutive Syndrome.
                                          Type: spoken_verb_noun         Example 3-disk problems are shown in Figures 2 and 3.
                                          Verb: =verb1                   Like the TOH, the goal is to transform the start state into the
                                          Noun: =noun1                   goal state, only one disk may be moved at a time, and there
                                          Activate: +1
                                                                         are three pegs. Unlike the TOH there are no size
                                                                         restrictions, so any disk may be stacked on top of any other
   Buffer dependant matching of productions was explored                 disk. A key requirement of the TOL is that the shortest
in EPIC, and is now an established part of the ACT-R                     route (in terms of number of moves) is taken to the goal
architecture (post 2000). However in GLAM-PS although                    state. In essence, it is a planning task, with marked
production-matching is achieved in a very similar way to                 similarity to the classic blocks world task as well as to the
ACT-r and EPIC, the modules used do not act as buffers.                  TOH.
Rather any active WME specific to a particular module can
potentially be matched to a production's conditions.                              Current State                      Goal State
     Productions are matched in parallel. Conflict between
productions occurs when two or more productions try to act                   Disk F
on the same module (ACT-r handles conflicts in a similar                     Disk C                                     Disk F
way). This conflict is resolved by summing activation                        Disk X                                     Disk C   Disk X
across the WMEs that were matched on the condition side
of the production. The production with the greater summed                    Peg 1     Peg 2     Peg 3        Peg 1     Peg 2    Peg 3
activation is selected.
   Productions in GLAM-PS are modal. Like WMEs, each                            Figure 2: First three-disk Tower of London (TOL)
production is tied to, and stored in, one module. Each                       problem (correct solution: F to 3, C to 2, F to 2, X to 3)
production can only act on the module it is stored in, but is
able to take input from all of the modules (including the one               The best way of highlighting the impact of the unusual
it is stored in).                                                        elements of GLAM-PS is to step through an example of
                                                                         GLAM-PS’s behaviour on TOL problems. In the following
The Action Execution Threshold (AET)                                     section the key features of GLAM-PS (the action-based
                                                                         control mechanism and the modal long term memory) are
   GLAM-PS as thus far described has no means of acting.
                                                                         shown in action to help facilitate understanding of how
The output modules hold actions ready to be executed, but
                                                                         these features work in practice.
this execution is not automatic or compulsory. So when
will an action held in an output module be used? GLAM-
PS answers this question by requiring a given action to
                                                                         Problem Solving the TOL without Planning
reach a threshold level of excitation before it will be                  In the first (and principal) example GLAM-PS is solving the
executed. Each output module’s production memory not                     problem shown in Figure 2. The first thing GLAM-PS
only contains productions that instantiate new actions, but              needs to do is initalise the problem solving process. This is
also contains productions that review suggested actions and              achieved via Production 3 (P3, see top of next page).
either excite or inhibit that action. In addition, productions              A verbalised instruction to solve the problem, held in the
are able to force execution (if the suggested action is judged           speech output module, is the catalyst of the problem solving
ideal), or remove the suggested action from the module (if it            process. The production then loads the manual output
                                                                         module with an underspecified disk move action (neither the
   1
                                                                         disk to be moved or the location it is to be moved is
     See Figure 1 for module architecture; though note more and/or
different modules are likely in future versions of GLAM-PS
                                                                     1854

specified, all GLAM-PS knows is that it needs to move a                   Prod find_move_loc_in_current [P8] Prod project_move [P9]
disk).                                                                     VisIn =disk_focus                  VisIn =target_peg
  Prod start_to_move_disks [P3]      Prod specify_disk_for_move [P5]         Type: disk                         Type: Peg
   VisIn =problem                     VisIn =disk_focus                      Label: =disk_id                    Display: Current_state
     Type: TOL_problem                 Type: disk                            Display: goal_state                Label: =peg_id
   Speech =goal                        Label: =disk_id                     manual =move1                        Disks_on_peg: =X
     Type: spoken_verb_noun            Display: Current_state                Type: disk_move                  manual =move1
     Verb: Complete                    Peg: =peg_id                          Disk: =disk_id                     Type: disk_move
     Noun: Problem                    manual =move1                          To_peg: =peg_id                    Disk: =disk_id
   -manual =no_move_in_progress        Type: Disk_move                       Not_to: [EMPTY]                    To_peg: =peg_id
     Type: Disk_move                   Disk: [EMPTY]                      >>                                    Not_to: [EMPTY]
  >>                                 >>                                    +VisFoc                           >>
   +Manual                            manual =move1                          Type: Search_for_match           +VisIn
     Type: Disk_move                   Disk: =disk_id                        Target: peg                        Type: disk
     Activate: +1                      From_peg: =peg_id                     Label: =peg_id                     Label: =disk_id
                                                                             Search_area: current_state         Display: Current_state
                                                                             Activate: +20                      Peg: =peg_id
                                                                                                                Disks_below: =X
   The next actions taken by GLAM-PS are to look for a                                                          Disks_above: 0
                                                                                                                Real: No
disk. The production (P4, not shown) matches all three
disks in the problem, triggering a conflict resolution process
that favours the most activated disk. The problem (shown in                P10 (see below) then compares the simulated state with
Figure 2) is a relatively easy problem for human problem                the goal state. If there is a mismatch in the number of disks
solvers, the majority of whom select the optimal move                   beneath the two disks then the intended move is inhibited.
choices (61 of 87 in Miles, 1998). Though in a significant              Note the production does not check the identity of the disks
minority of cases a second pattern of moves is followed (21             beneath the simulated and goal disks.2
of 87 in Miles, 1998; this pattern in Figure 2 would start F
to 2, C to 2, X to 3). Both of these patterns stem from the               Prod project_goal_mismatch [P10]     Prod execute_move [P13]
same set of productions in GLAM-PS, with the different                     VisIn =disk_goal                     VisIn =disk_goal
patterns a result of a different disk being the focus of visual              Type: Disk                          Type: Disk
attention initially.                                                         Disk: =disk_id                      Disk: =disk_id
                                                                             Display: Goal_state                 Display: Current_state
   The next production to execute, specifies which disk is to                Peg: =peg1                          Peg: =peg1
be moved (P5, see above). Once the disk to be moved has                      Disks_below: =X                     Disks_above: 0
been specified, the next production looks at the disks                     VisIn =disk_projected                 Parent: [EMPTY]
location in the goal display (P6, see below)                                 Type: Disk                         Manual =move1
                                                                             Disk: =disk_id                      Type: disk_move
                                                                             Display: Current_state              Disk: =disk_id
 Prod find_disk_in_goal_display [P6]   Prod disk_requires_move [P7]          Peg: =peg1                          From_peg: =peg1
  VisIn =disk_focus                      VisIn =disk_focus                   Disks_below: NOT[=X]                To_peg: NOT[EMPTY]
    Type: disk                            Type: disk                       Manual =move1                       >>
    Label: =disk_id                       Label: =disk_id                    Type: disk_move                    Manual =move1
    Display: Current_state                Display: Goal_state                To_peg: =peg1                       Activation: +1
  manual =move1                           Peg: =peg_id                    >>
    Type: disk_move                      manual =move1                     Manual =move1
    Disk: =disk_id                        Type: disk_move                    Activation: -1
 >>                                       Disk: =disk_id
  +VisFoc                                 From_Peg: NOT[=peg_id]
    Type: Search_for_match             >>                                  A similar production (P11, not shown) checks for a match
    Target: disk                         manual =move1                  and then returns visual focus to the actual disk in the current
    Label: =disk_id                       To_peg: =peg_id               state. There is also a production (P12 not shown) that
    Search_area: goal_state               Activation: +5
    Activate: +20
                                                                        returns visual focus to the disk in the current state without
                                                                        checking for a match, indeed without the need for P8 to P11
                                                                        to be invoked. This helps simulate common beginner errors
   If the disk is on different pegs in the current and goal             in the TOL where a moved disk is placed on top of a disk
displays, then the location of the intended move is specified           occupying the moved disks goal location.
in P7 (see above).                                                         Once the ‘real’ disk is back in visual focus with the move
   At this point P8 and possibly P9 will typically be                   fully specified, the move is excited by repeated firings of
instantiated (see below). P8 looks at the location of the               P13 (see above), but only if the disk is free to move.
intended move and then P9 projects the impact on the
current state of the intended move (in a way very similar to               2
                                                                             This helps simulate an error common in human participants,
simulation models).                                                     that occurs when a disk is moved to a target location, but the disks
                                                                        below it are in the wrong order, and subsequently the participant
                                                                        cannot understand why the problem has not be ‘solved’ (as
                                                                        evidenced by an extreme next move latency).
                                                                    1855

   If the disk is not free to move then P14 will focus visual            Problem Solving with Planning
attention on the blocking disk or disks3 and then P15 will               The 3-disk problem shown in Figure 3 cannot be
create a new action moving the blocking disk or disks to a               successfully solved by these productions alone. P18 (not
location that is not the goal location of the original disk (see         shown) can be used to generate random moves,
below). In this manner GLAM-PS is effectively creating a                 implementing a generate-and-test style strategy. However,
subgoal to remove the blocking disks in order to allow the               solving the problem in Figure 2 requires GLAM-PS to use
originally intended move. Note that association will be                  limited planning (or be lucky). Its planning capabilities
established between the original intended move and the new               emerge from the ability to simulate a short sequence of
move representation.                                                     actions and the related outcomes.4 Previously we saw how
  Prod vis_focus_to_block [P14]      Prod subgoal_remove_block [P15]     P9 projects the impact of a move. P19 maintains the
   VisIn =disk_goal                   VisIn =block                       activation of a projected disk position and inhibits the disk’s
     Type: Disk                        Type: Disk                        actual position, instead of trying to execute a possible move
     Disk: =disk_id                    Disk: =disk_id
     Display: Current_state            Display: Current_state            (it competes with P13). This allows P20 to initiate planning
     Disks_above: NOT[0]               Disks_above: 0                      Prod maintain_proj_disk [P19]   Prod init_planned_move [P20]
     Peg: =peg1                        Peg: =peg1                           VisIn =disk_goal                 manual =parent_move
   Manual =move1                      Manual =move1                           Type: Disk                      Type: disk_move
     Type: disk_move                   Type: disk_move                        Disk: =disk_id                  Disk: =disk_id
     Disk: =disk_id                    Disk: NOT[=disk_id]                    Display: Current_state          From_peg: NOT[EMPTY]
     From_peg: =peg1                   From_peg: =peg1                        Peg: =peg1                      To_peg: =peg1
     To_peg: NOT[EMPTY]                To_peg: =peg2                          Disks_above: 0                 VisIn =projected_disk
  >>                                 >>                                       Real: Yes                       Type: Disk
   +VisFoc                            +manual                               VisIn =projected_disk             Disk: =disk_id
     Type: Objects_above               Type: disk_move                        Type: Disk                      Display: Current_state
     Target: disk                      Disk: =disk_id                         Disk: =disk_id                  Peg: =peg1
     Search_area: =disk_goal           From_peg: =peg1                        Display: Current_state          Real: No
     Activate: +20                     Not_to: =peg2                          Peg: =peg2                   >>
                                                                           >>                                +manual
   Critically the representation of the move in the manual                  VisIn =projected_disk             Type: disk_move
output module is different from the representation of the                     Activation: +1                  Parent: =parent_move
                                                                            VisIn =disk_goal                  Activate: +1
originally intended move. The fact that the move is being                     Activation: -1
used to remove a block allows that move to be executed
without being assessed by P8 to P11 (which only assess                      The effect of P19 is to create a simulated problem state in
moves designed to get disks into their goal locations).                  the visual input module. The existing productions in the
Further productions (P16 and P17, not shown) move visual                 model are then able to 'act' on that simulated state. The
focus to the peg the block is to be moved to, and then add               majority of the productions in the model will process
the peg to the To_peg slot of the move. Once this is done                simulated disk positions as well as ‘real’ disk positions.
P12 returns visual focus to the block and then P13 will                  These productions may in turn create further simulated
execute the removal of the blocks.                                       states.      As the simulated state becomes increasingly
   When this occurs activation passes from the successfully              different from the actual state the ability of P19 to maintain
executed representation to other associated representations              the simulated state will decrease. In the TOL if GLAM-PS
in the same buffer. In this case the activation will pass to             is limited to maintaining a maximum of three simulated disk
the move representation that was present when the block                  positions then a decent match to practiced human problem
removal was subgoaled. In this way GLAM-PS implements                    solving is achieved (preliminary runs of GLAM-PS on more
an implicit form of goal stack, with executed actions                    complex TOL problems suggests that 4 or more simulated
triggering other actions that were active when they were                 disk positions allows GLAM-PS to solve some 5-disk
first represented.                                                       problems that humans often cannot solve unaided).
                                                                            The handling of plan execution in GLAM-PS is currently
            Current                               Goal State             rather inelegant. P21 (not shown) matches moves with
          State                                                          existing parent moves (found through the parent slot) that
     Disk F
                                                                         have reached the AET (due to matching P13), it reduces the
     Disk C                                                 Disk F       moves activation (-5), and then forces execution (+20) of
     Disk X                                        Disk C   Disk X       any move that does not have an existing parent (this should
                                                                         almost always be the first move of the plan assuming it is
     Peg 1     Peg 2     Peg 3           Peg 1     Peg 2     Peg 3
                                                                         active enough to match P21). Then, spreading activation
      Figure 3: Second three-disk Tower of London (TOL)                  from this initial move should be enough to trigger the next
problem (correct solution: F to 3, C to 2, F to 2, X to 3, F to 3        move in the plan, and so on. A production (P22, not shown)
                                  3)
   3                                                                        4
     Note GLAM-PS uses the disk WM type to represent adjacent                 GLAM-PS planning is conceptually similar to the interacting
disks as perceptual groups, as well as representing individual disks.    inverse and forward models used by Moller & Schenck (2008) for
This facilitates the modelling of perceptual grouping in the TOL.        planning robot movement
                                                                     1856

is used to restart a plan when the activation of the next move           Finally, it is also important to note the important role
is not greater than the AET (it looks for moves with no               played by the speech-output buffer in GLAM-PS. There is
existing parents and increases their activation).5                    much evidence to show that inner speech / articulation plays
                                                                      a role in goal-based behaviour (e.g. Saeki, 2007). In
GLAM-PS Vs Human Behaviour on the TOL                                 GLAM-PS the speech output module provides a necessary
   The emphasis in the current paper is on providing a                way of controlling complex sequences of action. In addition,
detailed account of how GLAM-PS solves 3-disk TOL                     it would also appear to have a pivotal role to play in any
problems, but it is important to note that this model has been        GLAM-PS based account of semantic memory.
compared to human data taken from Miles (1998). The                      The next stage for GLAM-PS is the modelling of human
human data was taken from 231 problem solving episodes                performance on 4-disk and 5-disk TOL problems. Although
on five different 3-disk problems (involving 99 different             detailed matches to human behaviour haven’t been
participants). GLAM-PS was able to provide a good match               established yet on these more complex problems, early
for this data. Overall GLAM-PS was able to predict 209 of             model runs indicate that the 3-disk model generalizes to
231 observed move patterns (90.5%) without the need for               these more difficult problems. It is anticipated that GLAM-
assuming random move choices (i.e. using P18). Fourteen               PS will eventually be used to simulate performance as well
of the 22 unpredicted cases were on the problem shown in              as competence in the TOL. There are also plans to extend
Figure 3 (versus 75 that were predicted on this problem).             GLAM-PS to Tower of Hanoi problem solving, Episodic
This was the hardest of the five problems used, and GLAM-             Memory Recall, and Serial Recall.
PS is much more inclined to resort to random moves (P18)                 Presently GLAM-PS is a work in progress. It has only
on this problem than on any of the other four problems,               been used as a computational model in one domain, the
reflecting the human data.                                            conflict resolution mechanism is underspecified, it does not
                                                                      currently have a learning mechanism (though one has been
                    General Disucussion                               outlined on paper), and it is not yet suitable for comparison
                                                                      to detailed performance data (e.g. RTs). It is hoped these,
   In summary, GLAM-PS provides an insightful account                 and other, shortcomings will be addressed in future.
into problem solving in the TOL, using a draft cognitive
architecture based on modal-only represenatation. Space
constraints do not allow a full discussion of GLAM-PS and
                                                                                              References
its relationship with existing theories of cognition, however         Anderson, J. R. (1993). Rules of the mind. Hillsdale, NJ:
it is important to highlight three key features within GLAM-             Lawrence Erlbaum Associates.
PS that suggest interesting future directions.                        Anderson, J. R., Bothell, D., Byrne, M. D., Douglass, S.,
   The Action Execution Threshold (AET) in GLAM-PS                       Lebiere, C., & Qin, Y. (2004). An integrated theory of
allows actions to be represented and held, without                       mind. Psychological Review, 111, 1036-1060.
necessarily being executed. They can then be used to control          Barsalou, L. W. (2008). Grounded cognition. Annual
action (in a similar way to goal representations in other                Review of Psychology, 59, 617-45.
architectures). There are several questions about the AET             Dennett, D. C., & Viger, C. D. (1999). ”Sort-of symbols?”.
that are only tentatively answered in GLAM-PS: Are there                 Behavioural and Brain Sciences, 22, 613.
different thresholds for different modules? Are there                 Harnad, S. (1990). The symbol grounding problem. Physica,
individual differences in AET? What factors influence the                42, 335-346.
AET? However, the potential usefulness of the AET                     Howard, J. L., & Miles, G. E. (2008). A behavioural
construct is suggested by recent work on modelling                       threshold and fluency theory of play. BPS Education
playfulness in young children by Howard & Miles (2008).                  Section Conference, Milton Keynes, UK.
They modelled a child in a playful state as having a reduced          Meyer, D. E., & Kieras, D. E. (1997). A computational
AET (Vs the same child when not playful), thus explaining                theory of executive cognitive processes and multiple-task
the increased behavioural fluency observed in play.                      performance: Part 1. Basic mechanisms. Psychological
   The System State Representation (SSR) used by GLAM-                   Review, 104, 3-65.
PS to match productions has the potential to be used to               Moller, R., & Schenck, W. (2008). Bootstrapping cognition
model consciousness. Intriguingly, the SSR proposal is                   from behaviour – A computational thought experiment.
congruent with the idea that executive function emerges                  Cognitive Science, 32, 504-542.
from consciousness. Each module within GLAM-PS                        Miles, G. E. (1998). Reminding in a knowledge lean
functions independently of one another, except for the                   domain. Unpublished PhD Thesis, Cardiff University.
influence of the SSR, which in essence binds the                      Miles, G. E. (2009). How can executive function emerge
independent sub-systems into a cohesive whole. This idea is              from consciousness? Evidence from a production system
explored in more detail by Miles (2009).                                 model. Paper to be submitted to International Conference
                                                                         on Cognitive Modeling 2009.
   5
                                                                      Saeki, E. (2007). Phonological loop and goal maintenance:
     The +5 activation in the action-side of P7 ensures that plans       Effect of articulatory suppression in number size
that place disks in their goal positions will be much preferred to       consistency task. Psychologia, 50, 122-132.
plans consisting of guessed moves (i.e. using P16).
                                                                  1857

