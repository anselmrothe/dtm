UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
Effects of Problem Format in Arithmetic: ‘3+9’ versus ‘three + nine’ versus ‘thrie + nyne’

Permalink
https://escholarship.org/uc/item/8xj282v3

Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 31(31)

Authors
LeFevre, Jo-Anne
Pyke, Aryn

Publication Date
2009-01-01
Peer reviewed

eScholarship.org

Powered by the California Digital Library
University of California

Effects of Problem Format in Arithmetic:
‘3+9’ versus ‘three + nine’ versus ‘thrie + nyne’
Aryn Pyke (apyke@connect.carleton.ca)
Institute of Cognitive Science, Carleton University, 1125 Colonel By Drive
Ottawa, ON K1S 5B6 Canada

Jo-Anne LeFevre (jo-anne_lefevre@carleton.ca)
Institute of Cognitive Science and Department of Psychology, Carleton University
Ottawa, ON K1S 5B6 Canada

Abstract
We explored the impact of operand format (digit, word,
pseudo-homophone)
on
single-digit
addition
and
multiplication. Format manipulations are of theoretical
interest because models of arithmetic knowledge differ with
respect to predicted format effects. Latencies were shortest
when operands were digits, and longest when they were
pseudo-homophones. However, there was also an interaction
of problem size with format: problem size effects were
smaller in the pseudo-homophone condition relative to the
digit condition, and were larger in the word format condition
relative to the digit condition. We discuss our results with
respect to the following question: Can this interaction be
attributed (solely) to an encoding phase of processing, or
might it (also) arise from a solution phase?
Keywords: math cognition, arithmetic, number, input format,
homophone, surface form, encoding, retrieval, computation,
problem size

Introduction
In elementary school, children typically learn to do simple
arithmetic (e.g., 2+3). Arithmetic fluency is a key predictor
of employment and income outcomes (Finnie & Meng,
2006). Thus, cognitive research on arithmetic performance
is important for pedagogical as well as theoretical reasons.
In the present research, our goal was to learn more about the
representations and processes underlying arithmetic
performance. In particular, we explored the impact of
operand format (i.e., digits: 2+3; words: two + three;
pseudo-homophones: tue + thrie) on solution latency and
accuracy for simple addition and multiplication problems.
Prior research indicates that response latencies tend to
increase by about 30% when operands are in number-word
versus digit format (e.g., Campbell, 1994). Practically,
Arabic digits are the most conventional and convenient
operand format. However, format manipulations are of
theoretical interest because different theories about
arithmetic representations and processes predict different
format effects and interactions. In particular, there has been
a debate about whether format costs originate only in an
initial encoding phase of processing, or also in the phase in
which the answer is accessed. Indeed, it may be that these
phases cannot be cleanly individuated but rather are
interactive. However, let’s start with the simplified

assumption that answer production involves an encoding
phase followed by a solution phase (in general, the solution
phase could involve either direct retrieval or computation).
For problems in regular digit format, a robust effect that is
attributed to the solution phase is the problem size effect –
response latencies are smaller for problems with small
operands (2+3; 2x3) than large operands (9+8, 8x9;
reviewed by Zbrodoff & Logan, 2005). For simple
arithmetic, self-report data suggests that adults often retrieve
answers from memory, but also sometimes use computation
procedures (e.g., counting; LeFevre et al., 1996). Even
among the subset of problems solved via retrieval (vs.
computation), a problem size effect is often still present
(LeFevre et al., 1996). Thus, an aggregate problem size
effect presumably owes to several contributions: i) among
problems that are computed (vs. retrieved), computation
takes longer for large (vs. small) problems; ii) among
problems that are retrieved, retrieval is faster for small
versus large problem, possibly due to differences in practice
frequency (e.g., Zbrodoff, 1995), and finally, iii) retrieval,
which is faster than computation, is used more frequently
for small than large problems (e.g., LeFevre et al, 1996).
That said, in digit format, the majority of arithmetic
problems are solved via retrieval. What happens when
format changes, say from digit format to word format?
Mean latencies are larger in word versus digit format,
however the problem size effect is also larger for word
versus digit format, that is, there is a format x size
interaction (e.g., Campbell, 1994; 1999).
In general, if arithmetic facts in memory are not
represented in the same format as the current problem
stimulus (e.g., word format), then the current problem
stimulus must be encoded (mentally translated) into a form
that corresponds to that of the stored arithmetic knowledge.

Encoding Accounts
It seems clear that format (e.g., 3 vs. three) will, at the
very least, impact latencies in any encoding phase. Some
theories go so far as to suggest that format effects in
arithmetic could be attributed entirely to encoding (vs.
access) processes (e.g., Blankenberger, 2001). For example,
McCloskey (1992) suggested that arithmetic knowledge is
stored in an abstract format, independent of the input format

1988

or input modality (e.g., visual vs. auditory). On this view,
to obtain an answer, a person first encodes (translates) the
problem stimulus into an abstract representation to access
the answer, which in turn is then converted into the required
output format. Under this abstract-representation model,
manipulations of input format should only affect the
encoding phase rather than the answer access phase (which
involves the same abstract representations regardless of
input/output format).
Thus, to account for why word problem latencies are
longer than digit problem latencies, McCloskey’s model
implies that converting words into this hypothetical abstract
format is more costly that converting digits into abstract
format. Note that word (vs. digit) format produces delays in
various tasks besides arithmetic (e.g., number comparison,
Noel et al., 1997; parity judgments; Campbell et al., 2004).
Another possibility is that arithmetic knowledge is
represented exclusively in digit format (rather than an
abstract format). Consequently, longer latencies for wordformat problems occur because these problems require an
encoding step to mentally translate the input from words to
digits. Alternately it is possible that all facts are stored
phonologically, and that number-word stimuli, digit stimuli,
and auditory stimuli all invoke a common phonological
access route. In this case problems in both word and digit
format would require an encoding step to convert them to
phonological format. To account for the shorter response
latencies for digit problems (vs. words), this phonologicalfact model implies that the digit-to-phonology conversion is
more efficient than the word-to-phonology conversion. For
example, phonology may be slower for multi-character
words versus single character digits. Thus, again, such an
account would imply that the (phonological) encoding step
is more costly for word inputs than digit inputs.
In summary, models which suggest that arithmetic
knowledge is stored exclusively in one format (be that
abstract, phonological or digit-orthographic) are compatible
with longer RTs for word (vs. digit) problems.
However, could such encoding-based accounts explain
the inflated problem size effect for problems in word (vs.
digit) format? The inflated problem size effect for numberword problems could be attributed (at least partly) to the
influence of word frequency on encoding (i.e., text-tophonology conversion). Number words, like all known
words, are subject to frequency effects: the more frequently
a word has been encountered, the more quickly it can be
recognized and named. Words for small numbers (e.g., four)
appear more frequently in print than words for larger
numbers (e.g., nine). Thus, phonological encoding will take
longer for large number-word problems (eight + nine) than
small number-word problems (three + four). In contrast,
there is less variation in frequency (and naming time) across
digits than number words. Thus, part of the problem size
effect for number-word problems is arguably the artifact of
a word-frequency effect (i.e., an encoding locus vs. an
access locus; McCloskey et al., 1992; Noel et al., 1997).
Consequently, one motivation for our inclusion of a

pseudo-homophone condition (e.g., thrie x ait) was to
include a format condition that was amenable to text-tophonology conversion, but reduced problem-size artifacts
associated with the variable frequencies of actual number
words. Pseudo-homophones are non-words, and are thus
all equally infrequent in the corpus. Thus, the encoding cost
of converting pseudo-homophones into phonological form
should not vary systematically with operand size. Thus, any
persisting problem-size effects and format interactions can
be more clearly attributed to access processes rather than
encoding processes. To the extent that the inflated problem
size effect for word format arises from word-frequency
encoding effects, we expected smaller problem size effects
for pseudo-homophone format than number-word format.
Thus, above we discussed encoding-based explanations
for word format effects – that is, longer latencies and
inflated problem size effects for word (vs. digit) problems.
Alternately or additionally, format might influence the
solution phase. Below we will discuss some access-based
explanations for format effects.

Access-based Accounts
At the opposite end of the spectrum from McCloskey’s
abstract-representation model is the possibility that
arithmetic fact knowledge might be stored in multiple
(redundant) formats – for example, in Dehane’s (1992;
Dehaene & Cohen, 1995) model, memory contains both
digit-orthographic representations (visual Arabic Number
Form) and phonological representations (auditory verbal
word frame) of arithmetic facts. Presumably then, the
format of the stimulus problem would influence which type
of representation (i.e., which access route) would be
employed. For example, a problem presented aloud
(auditory input format) would likely trigger the
phonological route; whereas a problem presented as visual
digits (e.g., 2+3) would likely activate the digit-orthographic
route. Because people rarely solve problems or see facts in
word format (two + three = five), it is unlikely that memory
contains arithmetic representations explicitly encoded in
number-word format. Thus, we expect that when people
solve word-format problems, the access to the answer is
mediated by mentally converting the operands into
phonological and/or digit form.
Under this view involving digit and phonological
retrieval routes, one co) format via the following
assumptions: i) digit input format induces a head-start or
bias to access digit-orthographic representations of
arithmetic facts; ii) the digit-orthographic access route is
more efficient than the phonological route, because people
are most frequently exposed to facts in digit (vs. auditory)
format; iii) digit input may also be amenable to rapid
conversion to phonological form, so the answer may
arguably receive activation from both routes.
Thus, number-word format would lead to longer latencies
than digit-format for several reasons. First, access to stored
information first requires the conversion of number words to
phonological (or digit) form. Phonological conversion could

1989

be costly because it may involve the serial sub-vocalization
of the problem (vs. perhaps processing a digit problem more
holistically, in parallel: 2+3). Second, we expect that the
phonological access route itself is less efficient (i.e., less
practiced) than the orthographic access route – again,
because facts are more frequently seen (i.e., digit format)
than heard (i.e., auditory format). It is also possible that
number-words could be mentally converted to digits, so the
digit-orthographic access route could be employed instead
of, or in addition to, the phonological route. However, we
suspected in general that number-words would lend
themselves more naturally to phonological (vs. digit)
encoding, and thus to the use of a phonological access route.
Similarly, under this account, one would expect that
pseudo-homophone input format would also prompt the use
of stored phonological (vs. digit) representations or
arithmetic information. Thus, the same access route and
arithmetic representation would be in play for words and
pseudo-homophones – so one might predict that
performance for pseudo homophones might parallel that for
words (perhaps plus some extra delay for the phonological
encoding of the unfamiliar pseudo-homophones).
However, the above suggestion that different formats
may promote the use of different access routes (i.e.,
different fact representation formats) does not readily
explain the inflated problem size effect for word format
problems.
In general, the surface familiarity of a problem stimulus
may influence which solution strategy is employed – in
particular, the less familiar the stimulus, the lower the
likelihood that retrieval is even attempted (e.g., Schunn et
al., 1997). Thus, one access-based (vs. encoding-based)
explanation for the increased problem size effect in word
format is that the less familiar word format increases the use
of computation versus retrieval. In some studies on
addition, participants self-reported more procedure use for
problems in word versus digit format (Campbell et al.,
2004; Campbell & Penner-Wilger, 2006). Such a strategy
shift towards computation would indeed cause an increase
in the problem size effect, because even within digit format
problems, the problem size effect (i.e., slope) is larger
among problems solved via computation then among
problems solved via retrieval (LeFevre et al., 1996a;
1996b). Thus, format may interact with problem size
because non-digit formats can result in a ‘strategy’ shift
leading, in the case of number-words, to a heavier reliance
on computation (vs. retrieval).
Consequently, our pseudo-homophone condition also
constitutes a manipulation of apparent familiarity –
participants are most familiar with problems in digit format
and are completely unfamiliar with problems in pseudohomophone format. Under this account, one would expect
that the highly unfamiliar pseudo-homophone format would
promote an even stronger shift from retrieval to computation
– producing an even greater inflation in problem size for
problems in pseudo-homophone relative to digit format.
Conversely, Penner-Wilger and LeFevre (2005) did not find

such a shift when participants solved single-digit
multiplication problems. Thus, we included both addition
and multiplication problems in the present research.
In summary, under an encoding-based (word frequency)
account of word format effects, pseudo-homophones should
not exhibit an inflated problem size effect relative to digit
format, however, under an access-based (strategy shift)
account, pseudo-homophones would exhibit an even larger
inflation in problem size (over that for word problems).
These predictions were tested in the present study. In
particular, we manipulated three independent variables:
operation (addition, multiplication); format (digit, word,
pseudo-homophone) and problem size (small: operands < 5;
large: an operand >=5).

Method
Participants.
Undergraduates (N=28) received course credit for their
participation.

Materials
The stimuli were simple addition and multiplication
problems with operands between 1 and 9. The operands
were presented in three formats:
i)
ii)
iii)

digits: 2 x 5;
words: two x five;
pseudo-homophones: tue x fyve

Pseudo-homophones are non-words (English) that are
pronounced the same as the corresponding number words.
The complete set of pseudo-homophones used in the present
experiment was: wun, tue, thrie, fowr, five, siks, sevin, ait,
and nyne. For each operation, participants solved the nine
tie problems (e.g., 2+2, 2x2); and 36 non-tie problems in
each of the three formats. Operand order (2+3 vs. 3+2) was
counterbalanced so that if a participant saw 2+3 in the
addition block, the other operand order was used in the
multiplication block (3x2). Within each operation (block)
half the problems had the larger operand first, and half had
the larger operand second. Following Campbell (1994),
small problems were classified as those with both operands
less than 5.

Procedure
Problems were blocked by operation (multiplication vs.
addition), however, format varied within each block. Each
problem was presented horizontally on the screen after a
central fixation prompt (prompt duration 500 ms). The
problem remained visible until the participant made a verbal
response, triggering a microphone. The experimenter then
recorded the participant’s response (or an error code in the
rare cases in which the microphone did not register the
response, or accidentally triggered prior to the response).
No accuracy or latency feedback was provided.

1990

digit

w ord

pseudo-w ords

100
98

accuracy (%)

A few trials (<5%) were excluded from the analyses
because the participant’s response did not trigger the
microphone, or another sound prematurely triggered it.
Repeated measures ANOVAs were conducted for the
dependent measures of accuracy and latency. Analyses of
response times are based on trials in which correct responses
were received. The independent variables were operation
(addition, multiplication); format (digit, word, pseudohomophone) and size (small: operands < 5; large: an
operand >=5). If the format variable failed Mauchly’s test
of sphericity, the Greenhouse-Geisser adjustment was used
to assess significance. The Bonferroni adjustment was used
for all pairwise comparisons.
Accuracy. Accuracy was higher on addition problems
than multiplication problems, F(1,26) = 4.38, p < .046, and
for small (both operands <=5) versus large problems,
F(1,26) = 26.94, p < .001. Problem-size interacted with
operation, F(1,26) = 10.60, p < .003, such that for small
problems accuracy was comparable across operations, but
for large problems, accuracy was lower for multiplication
than addition. There was also a main effect of format on
accuracy, F(1,26) = 13.99, p < .001. In particular,
participants were less accurate on words than digits (p <
.034), and less accurate on pseudo-homophones than on
either words (p < .030) or digits (p < .030). There was no
interaction of format and operation (addition vs.
multiplication), F(1.5,38.1) = .88, p = .393 . However, as
shown in Figure 1, there was a marginal interaction of
problem size and format, F(1,26) = 3.12, p < .053 – For
small problems, accuracy was comparable for word and
digit formats, whereas for large problems accuracy was
highest for digit format and comparable for word and
pseudo-homophone format. .
Latency. Ties and non-ties were analyzed separately
because ties may be subject to distinctive processing (e.g.,
they typically have attenuated problem size effects and
encoding may be different when the same operand is
repeated) .
Latency (Non-Ties): Addition problems were solved
more quickly than multiplication problems, F(1,26) = 12.23,
p = .002; and small problems were solved more quickly than
large problems, F(1,26) = 103.67, p < .001. Size interacted
with operation, F(1,26) = 4.77, p < .039 such that thee
problem size effect was larger for multiplication than
addition. In terms of format, RT was smallest in the digit
condition and largest in the pseudo-homophone condition,
F(1,42.38) = 228.747, p < .001. There was also an
interaction of size and format, F(2,52) = 6.62, p = .003, such
that the problem size effect was smallest in the pseudohomophone condition and largest in the word condition. As
was the case in the accuracy analysis, format did not interact
significantly with operation (addition vs. multiplication).
Mean response latencies and problem size effects are
presented in Table 1 (collapsed across operation).
Latency (Ties). Ties exhibited the same pattern as nonties in that there were the three main effects of operation,

F(1,26) = 18.26, p < .001, problem size, F(1,26) = 35.47, p
< .001, and format, F(2,52) = 76.04, p < .001. Again there
was in interaction of problem size and format, F(2,52) =
5.50, p = .007, such that the problem size effect was
smallest in the pseudo-homophone condition and largest in
the word condition. No other interactions reached
significance.

96
94
92
90
small
large
problem size

Figure 1. Accuracy (collapsed across operation).
digit

word

pseudo-words

1890
response latency (ms)

Results

1690
1490
1290
1090
890
690
490
290
90
small

large
problem size

large-small

Figure 2. Latency (ms) collapsed across operation
Table 1. Response times (ms) collapsed across operation

Format
Digit
Word
Pseudo

Small
836
929
1054

Ties
Large
936
1096
1130

L-S
100
167
76

Small
875
1153
1426

Non-ties
Large L-S
1160 285
1486 333
1647 221

Discussion
The present study explored the impact of operand
format (digit, word, pseudo-homophone) on single digit
addition and multiplication. Latencies were shortest when
operands were digits, were longer for number word
operands, and longest for pseudo-homophone operands. We
did not find an interaction of format and operation (addition

1991

vs. multiplication; cf. Campbell, 1994). However, in accord
with Campbell (1994; 1999) we did find an interaction of
format with problem size – that is, there was a bigger
problem size effect in word format compared to digit
format. Note that our stimuli included an extra format
condition – pseudo-homophones – that was not present in
the prior research. Consequently, our account of the format
by size interaction(s) is somewhat distinct and more general.
Overall, however, our pattern of results seems
incompatible with Campbell et al.’s (2004) access-based
account in which the increase in the problem size effect (in
word format) arises because low format familiarity produces
a shift from retrieval to computation. If low familiarity with
a problem’s surface form induces a bias towards a
computation strategy, then computation (vs. retrieval)
should be most likely for problems in pseudo-homophone
format. Consequently, under a familiarity account, the
problem-size effect should be largest in the pseudohomophone condition. Contrary to this prediction, however,
the problem size effect was actually smaller in the pseudohomophone than in either the word or digit condition 1 .
Thus, decreases in format familiarity per se are not cleanly
correlated with increases in problem-size effects (nor, by
inference, with increases in the use of computation vs.
retrieval). Recall also LeFevre and Penner-Wilger (2005)
found no increase in procedure use with word format for
multiplication.
An encoding-based account is, however, compatible
with the finding that problem size effects are smaller in
pseudo-homophone format than in word format. Following
Dehaene (1992), we assume that arithmetic knowledge can
be stored/accessed in phonological format. Further, to
access this knowledge, we assume that both word and
pseudo-homophone problem formats typically involve a
mental conversion from text to phonology. For word-format
problems this conversion to phonology causes problem-size
contributions associated with word frequency effects. In
contrast, the pseudo-homophone format should produce
systematic frequency-related problem-size contributions in
this encoding stage. Thus, it is possible that the inflated
problem size effect associated with word format is
predominantly due to encoding (vs. access).
An encoding-based account can also address why mean
RTs are larger for problems in pseudo-homophone format
relative to word format. For regular number words which
are in our mental lexicon, text-to-phonology conversion can
be holistic (i.e., a stored association mapping the whole
word to its sound), whereas for non-words, like our pseudohomophones, participants have to sound them out serially,
which takes more time. In summary, an encoding-based
account seems able to address the differences between the
word and pseudo-homophone formats (i.e., the latter has
larger latencies but smaller problem size effects).
1
However, if the pseudo-homophone format somehow inflated
procedure use for small problems more than large problems then it
is possible such a procedure shift could result in no overall
inflation of the problem-size effect.

That said, we have not yet contrasted digit format with
pseudo-homophone format. Our pseudo-homophone pattern
evidenced a similar slow down for small and large problems
relative to digit format. In fact, the The psuedo-homophone
format does not contribute any additional problem-size
effect beyond that present for digits. Why would the
problem-size effect was slightly smaller for problems in
pseudo-homophone format than for digit format. Because
the phonological encoding of a pseudo-homophone problem
is arguably a serial process (sounding out the first operand
and then the second), the answer-access phase may begin
before the phonological encoding of the second operand is
complete – in particular, once encoded, the first operand
may prime the phonological representations of relevant facts
involving that operand. Thus, by the time the second
operand is encoded, a relatively small amount of time is
needed to individuate the needed fact from among the facts
already primed by the first operand. Inter-fact retrieval
interference (which contributes to the problem size effect;
Zbrodoff, 1995) is reduced because the first operand
constrains the solution context. In contrast, we assume that
digit problems are processed and accessed more holistically
(both operands in parallel) so the context is initially
unconstrained, and latency (problem size) is sensitive to the
problem as a whole (i.e., practice frequency). That said, the
digit-orthographic route is still far more efficient than the
phonological route (which involves the serial encoding of
pseudo-homophones). In summary, a phonological access
route (i.e., for pseudo-homophones) could explain the
reduced problem-size effect relative to digit-format because
the serial nature of phonological encoding may allow the
some of the access phase (fact-priming based on the first
operand) to proceed in parallel with the encoding of the
second operand.
In support of our suggestion that a phonological route
might result in reduced problem size effects, researchers
have reported smaller problem size effects for multiplication
problems presented in auditory format versus visual digit
format (e.g., LeFevre et al., 2001; Metcalfe & Campbell,
2008). However, context effects due to processing a
problem serially should also then have been present for
word format problems, but word format lead to an inflated
problem size effect.
We have suggested that word format may encourage the
use of a phonological access route (vs. digit-orthographic
access route). Further, we have suggested that digit-format
problems may be processed holistically (i.e., both operands
simultaneously) whereas the phonological encoding of a
problem is serial (first operand then second operand). This
distinction correctly predicts that word-format problems will
be processed more slowly than digit-format problems.
However, we would expect the serial nature of phonological
encoding to also attenuate problem size effects in the wordformat condition relative to the digit condition. Contrary to
this expectation, problem size effects are larger in the word
condition than the digit condition. Thus, either serial
processing does not confer much of an access (problem-

1992

size) advantage, or word-frequency effects might exacerbate
the problem size effect to the point of drowning out any
serial processing advantage.

Acknowledgments
Sincere thanks to Velian Pandeliev, Marcie Penner-Wilger,
and Martha Roberts for their contribution to data collection
and experimental design. Support for this research was
provided by a grant from NSERC to J. LeFevre.

References
Blankenberger, S. (2001). The arithmetic tie effect is mainly
encoding based. Cognition, 82, B15-B24.
Campbell, J. (1994). Architectures for numerical cognition.
Cognition, 53, 1-44.
Campbell, J. (1999). The surface form x problem size
interaction in cognitive arithmetic: Evidence against an
encoding locus. Cognition, 70, B25 – B33.
Campbell, J., Parker, H. & Doetzel, N. (2004). Interactive
effects of numerical surface form and operand parity in
cognitive arithmetic.
Journal of Experimental
Psychology: Learning, Memory & Cognition, 30, 51-64.
Dehaene, S., 1992. Varieties of numerical abilities.
Cognition, 44, 1–42.
Dehaene, S., Cohen, L., 1995. Toward an anatomical and
functional model of number processing. Mathematical
Cognition, 1, 83–120.
LeFevre, J., Lei, Q., Smith-Chant, B., & Mullins, D. (2001).
Multiplication by eye and by ear for Chinese-speaking
and English-speaking adults.
Canadian Journal of
Experimental Psychology, 55, 227-284.
LeFevre, J., Shanahan, T., DeStefano, D. (2004). A tie
effect in simple arithmetic: An access-based account.
Memory & Cognition, 32(6), 1019-1031.
LeFevre, J., Sadesky, G. S., & Bisanz, J. (1996). Selection
of procedures in mental addition: Reassessing the
problem-size effect in adults. Journal of Experimental
Psychology: Learning, Memory, & Cognition, 22, 216230.
Metcalfe, A. & Campbell, J. (2008). Spoken numbers versus
Arabic numerals: Differential effects on adults`
multiplication and addition.
Canadian Journal of
Experimental Psychology, 62(1), 56-61.
McCloskey, M., 1992. Cognitive mechanisms in numerical
processing: Evidence from acquired dyscalculia.
Cognition, 44, 107–157.
McCloskey, M., Macaruso, P., Whetstone, T., (1992). The
functional architecture of numerical processing
mechanisms: defending the modular model. In J.
Campbell, (Ed.), The Nature and Origins of Mathematical
Skills (pp. 493-537). Elsevier, Amsterdam.
Noël, M.-P., Fias, W., Brysbaert, M., (1997). About the
influence of the presentation format on arithmetical fact
retrieval processes. Cognition, 63, 335–374.
Noël, M., Robert, A., & Brysbaert, M. (1998). Does
language really matter when doing arithmetic? Reply to

Campbell (1998). Cognition, 67, 365-373.
LeFevre, J., & Penner-Wilger, M. (2005, November). All
mixed up: The effect of numeral format on single-digit
addition and multiplication. Presented at the annual
meeting of the Psychonomic Society, Toronto, ON.
Schunn, C. D., Reder, L. M., Nhouyvanisvong, A.,
Richards, D. R., & Stroffolino, P. J. (1997). To calculate
or not to calculate: a source activation confusion model of
problem familiarity's role in strategy selection. Journal of
Experimental Psychology: Learning, Memory, and
Cognition, 23, 3-29.
Zbrodoff, N. J. (1995). Why is 9 + 7 harder than 2 + 3?
Strength and interference as explanations of the problemsize effect. Memory & Cognition, 23, 689-700.
Zbrodoff, N. J. & Logan (2005). What everyone finds: The
problem size effect. In J. Campbell (Ed.), Handbook of
Mathematical Cognition, (pp. 331-345). Taylor and
Francis: Psychology Press

1993

