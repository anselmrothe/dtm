UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
Scaling up from Micro Cognition to Macro Cognition: Using SGOMS to build Macro Cognitive
Models of Sociotechnical Work in ACT-R
Permalink
https://escholarship.org/uc/item/0g36w404
Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 33(33)
Authors
West, Robert
Somers, Sterling
Publication Date
2011-01-01
Peer reviewed
 eScholarship.org                                 Powered by the California Digital Library
                                                                    University of California

                          Scaling up from Micro Cognition to Macro Cognition:
  Using SGOMS to build Macro Cognitive Models of Sociotechnical Work in ACT-R
                                           Robert L. West (Robert_west@carleton.ca)
                                         Institute of Cognitive Science, 1125 Colonel By Drive
                                                       Ottawa, ON K1S 5B6 Canada
                                        Sterling Somers (sterling@sterlingsomers.com)
                                         Institute of Cognitive Science, 1125 Colonel By Drive
                                                       Ottawa, ON K1S 5B6 Canada
                              Abstract                                    GOMS is based on the theory that all expert routine
   SGOMS is a way of scaling up GOMS models to model multi
                                                                       behaviors and cognitions can be explained using a limited
   agent work in complex sociotechnical systems. In particular,        set of control structures. These are: Goals, Operators,
   it allows GOMS to handle interruptions, multi-tasking, and          Methods, and Selection-Rules (implemented as Production
   re-planning. West and Pronovost (2009) discussed some of            Rules). In addition GOMS assumes that these elements are
   the theoretical issues around building an SGOMS model in            organized as Unit Tasks (Newell, 1990). Unit Tasks are a
   ACT-R. This paper presents work in progress for two such            means of partitioning a task to avoid overloading the
   models. Specifically, we used ACT-R to create a model of a          cognitive system (i.e., taking in information too fast) and
   worker in a sandwich shop and a model of a commercial
   airline pilot. Problems with scaling ACT-R up to the macro          downtime (i.e., taking in information too slowly). GOMS
   cognitive level are discussed and solutions are presented.          works well for modeling isolated, individual tasks.
                                                                       However, GOMS does not work well in environments
   Keywords:          ACT-R,        GOMS,         microcognition,      where interruptions, multi tasking, and teamwork are
   macrocognition, sociotechnical systems, cognitive modeling.
                                                                       common (West & Nagy, 2007). Simon’s (1962) story
                                                                       suggests that this is due to insufficient hierarchical structure.
                                                                          SGOMS augments GOMS by adding additional structure
As Simon (1962) pointed out in his story about the two
                                                                       to allow the productive use of GOMS in complex
watchmakers, when a system gets more complex it is more
                                                                       sociotechnical environments. To accomplish this, SGOMS
likely to be organized in a hierarchical way, especially if the
                                                                       adds a higher-level control structure and introduces an
system has to exist in a noisy environment. In the story, two
                                                                       additional constraint on unit tasks related to this structure. In
watchmakers make identical watches but one goes out of
                                                                       addition to avoiding overload and downtime, unit tasks must
business will the other one flourishes. The unsuccessful
                                                                       also be small enough to avoid most interruptions (West &
watchmaker does not have a hierarchical approach to
                                                                       Nagy, 2007). By adding this constraint unit tasks become
making watches. Instead he makes a watch in one go, but if
                                                                       islands of work that will likely be completed without
he is interrupted it all falls apart. The successful
                                                                       interruption and where normal GOMS modeling can be
watchmaker makes various parts of the watch separately,
                                                                       applied.
and then assembles them together into higher-level parts,
                                                                          In SGOMS, control of the unit tasks is accomplished by
which are then assembled into even higher-level parts, and
                                                                       planning units. Planning units are higher-level
so on until the watch is made. If he is interrupted only the
                                                                       representations of the work that specify how to use unit
part he is working on falls apart. Because the watches are
                                                                       tasks to accomplish a particular part of the task. In our
popular there are many calls to order them and therefore
                                                                       experience so far, planning units can often be represented as
many interruptions, which are catastrophic for the first
                                                                       a list of unit tasks. Planning units can be interrupted,
watchmaker but manageable for the second watchmaker.
                                                                       bookmarked, and restarted; therefore planning units provide
   SGOMS is a theory of Macro Cognition that is based on
                                                                       a cognitive mechanism to deal with task interruptions and
this idea. The argument behind SGOMS is that cognitive
                                                                       multi-tasking.
modeling designed to work at the level of psychology
                                                                          West and Provnost (2009) characterized sociotechnical
experiments (micro cognition) can scale up to higher-level
                                                                       systems as having a tension between sticking to an existing
tasks where interruptions are common, if additional
                                                                       plan and adapting to unforeseen local circumstances.
hierarchical structure is added. If the system is truly
                                                                       Sociotechnical systems require that workers act in a
hierarchical then the micro cognitive processes should not
                                                                       coordinated way and this frequently involves having a plan.
change when macro level processes are needed for a task.
                                                                       Planning meetings and briefing sessions are common in the
SGOMS is a theory about what sort of macro level
                                                                       sociotechnical workplace. However, it is often the case that
processes need to be added. Specifically, SGOMS is a
                                                                       workers have to adapt to or work around events or
theory of what needs to be added to GOMS modeling (Card
                                                                       circumstances that were unforeseen in the plan. According
et al., 1983).
                                                                       to SGOMS theory, when a worker is interrupted and cannot
                                                                   1788

continue on a planning unit, they use constraint-based                visual imagery). ACT-R also has a specific goal buffer,
decision making to switch to another planning unit. In an             which represents where it is in a task. However, we defined
SGOMS model, each planning unit is associated with a set              the goal as the contents of all the buffers, which is the de
of constraints that can change based on events in the                 facto definition of goals in most ACT-R models. In fact, the
workplace. These constraints include constraints related to           term goal is misleading as all of the buffers, including the
the plan; therefore, a worker can work around a problem (if           goal buffer, represent the current state of the system, not a
possible) without disrupting the existing plan.                       goal that the system wants to achieve. The goal directed
   Planning units are also theorized to produce a common              behavior of the system is emergent from the contents of the
ground representation of the task (Klein, 2004), allowing             buffers and the productions that they trigger
workers to communicate what they are doing or to instruct
others using the planning unit names. That is, planning units         Operators
are meant to represent the level at which the cognitive               We defined operators as the lowest level at which a
representation of the work becomes shared. However, this              production in ACT-R can hand off an action to a module. In
does not imply that everyone’s planning units would be the            ACT-R, once an action has been handed off to a module,
same; instead it would depend on their role in the planning           that action can occur in parallel with the actions of
unit. For example, a pilot and an air traffic controller might        productions, so the level at which an operator is defined is
share a planning unit names for various parts of the landing          important. However, there is no firm theory about this.
sequence, but the contents of these planning units would not          Instead, judgments about the size of operators are based
be the same.                                                          mainly on introspection about the task. For example, move
                                                                      hand to mouse, would be a typical GOMS operator because
                    ACT-R and GOMS                                    intuitively we feel that, in most cases, we do not consciously
   GOMS models are often implemented in ACT-R                         guide our hand to the mouse. However, we could break it
(Anderson & Lebiere, 1998). The reason for this is that               down more if we wanted to. For example, I could
there are similarities between ACT-R and GOMS, and                    consciously choose to guide my hand over the mouse and
ACT-R is capable of expressing all of the functionality               then consciously place my hand on the mouse, which would
needed for GOMS modeling. In fact, it is arguable that a              be two operators. To deal with this we propose that there is
GOMS model represents the simplest and most direct way                a level of natural operators that the motor system commonly
to express something in ACT-R. However, it is important to            uses and that, while it is possible to consciously control
note that ACT-R has more functionality than GOMS (the                 actions below this level, it requires a deliberate decision to
biggest difference being that ACT-R can learn) and that               do so and does not often occur. In addition to introspection,
ACT-R has a detailed sub symbolic model for each type of              research on motor actions should be used to define these
functionality, which GOMS does not have. Therefore,                   actions.
expressing a GOMS model in ACT-R means adopting
specific ACT-R assumptions defining the sub-symbolic                  Methods
systems. This is important to note because expressing a               In GOMS, methods are sets of actions that are commonly
GOMS model in a different architecture could result in                repeated in a task. In ACT-R, if a set of actions is frequently
important differences.                                                repeated in the same order the actions will become
   It is also important to note that there are different versions     compiled. What this means is that instead of using
of GOMS. The four most well known systems are the                     productions to retrieve information about what to do next
original version of GOMS, known as CMN-GOMS (Card et                  (typically stored in declarative memory) the compiled
al., 1983); the keystroke level model, KLM (Card, Moran &             version will consist of productions that directly call each
Newell, 1980); NGOMSL (Natural GOMS Language,                         other in a fixed order and therefore fire ballistically, as a set.
Kieras, 1996); and CPM-GOMS (Cognitive-Perceptual-                    This allows ACT-R to model the process of moving from
Motor GOMS, John, 1988, 1990). To be clear about the                  deliberate actions to automatic behaviors, although in
relationship between ACT-R and GOMS in our model we                   GOMS models the learning part is not needed since experts
defined our GOMS/SGOMS mechanisms in act-r terms.                     would be expected to have optimized sets of compiled
Please note that these are our definitions and may differ             productions. Therefore, we defined methods as compiled
from definitions elsewhere in the GOMS literature.                    sets of productions. This puts a limit on the size of methods
                                                                      because in order to compile, the sequence must be exactly
Goals                                                                 the same and must occur relatively quickly. Therefore,
In ACT-R the productions (i.e., selection rules) are triggered        anything with variability or with delays introduced from the
by the content of the buffers, which contain chunks. Chunks           environment will not become a method.
contain a limited number of predicate information bits (e.g.,
isa:dog name:rover color:brown). Productions fire if their if         Selection rules
condition matches the buffer contents. ACT-R has a number             Selection rules in ACT-R are production rules, so this is
of different buffers to represent the activity of different           exactly the same. However, we found it useful to make a
modules (e.g., vision, audition, declarative memory, motor,           conceptual distinction between task-related productions, i.e.,
                                                                  1789

productions associated directly with the task, and system          model of how these processes operate and interact provides
production rules, i.e., production rules that implement the        a much more rigorous and testable model. It also provides a
general mechanisms for executing expert behaviors in               test for ACT-R to see if it has the functionality to scale up to
complex environments. Although the ACT-R architecture              the macro level. West and Provnost (2009) discussed how
treats all productions equally, it is the case that productions    this might be done. However, the key is to actually build
can be specific to a task or generic.                              and test models of different tasks. The goal is to show that
                                                                   our ACT-R model of SGOMS can parsimoniously model
Unit tasks                                                         different types of expert tasks, or to falsify it by showing
In ACT-R, a unit task is a set of related productions,             that this is inherently problematic. To do this we chose two
including compiled productions, or methods, that call              tasks, working in a busy sandwich/wrap restaurant (located
perceptual, motor, and cognitive operators to complete the         on our campus) and landing a large commercial jet airplane.
unit task. As in GOMS, unit tasks are about how the task is           In addition to specifying how to build a model, SGOMS
divided up                                                         is also a way of observing and analyzing human behavior.
                                                                   Essentially, the SGOMS structure specifies what to pay
Planning units                                                     attention to and what to analyze in order to get the data to
                                                                   build the model. In turn the model provides an organized,
We represented planning units as sequentially chained
                                                                   principled way of understanding the data. The first phase of
chunks in declarative memory. Each chunk represents a unit
                                                                   data gathering involves the researchers tentatively filling in
task and also the unit task that should follow it. A planning
                                                                   as much of the model as possible by reading manuals and
unit is executed by a set of productions that retrieves the
                                                                   interviewing experts. Later phases involve iteratively testing
next unit task in a series after the current unit task is
                                                                   and adjusting or amending the model (see West & Nagy,
finished. Each planning unit also separately stores a set of
                                                                   2007). In this paper we report our progress at modeling data
constraints, information about where the agent is in the
                                                                   from the first phase.
planning unit, and information about the task that is non-
routine. These are stored separately as chunks and allow the
                                                                   Sandwich making model
agent to judge if a planning unit is appropriate for the
situation, to remember where they were in a task when they         We began by trying to make a simple model of an expert
return to it, and to incorporate non-routine information, such     sandwich maker working in a sandwich shop. The model
as exceptions in the plan and unexpected events by altering        was, on the surface, very simple. The worker could make
the chunks.                                                        different types of sandwiches, work the cash, or clean up
                                                                   (each of these was a planning unit). However, we
Constraint based decision-making                                   immediately ran into an issue. SGOMS needs to keep track
                                                                   of a lot of information. In particular, at any given time a
The selection of productions in ACT-R is a form of
                                                                   worker knows what planning unit they are in, what unit task
constraint-based decision-making (i.e., the contents of the
                                                                   they are in, what method they are doing, and where they are
buffer provide the constraints for choosing a production).
                                                                   in the method. While this amount of information can be
However, the time scale for ACT-R production selection
                                                                   placed in a single chunk in the goal buffer, the size of the
seemed wrong. West and Nagy (2007) found that workers
                                                                   chunk is very large and this goes against ACT-R theory.
could spend a considerable amount of time ruminating on
                                                                   Therefore, we created a set of goal buffers, with a buffer for
these decisions if the situation was complex. They also
                                                                   each of the SGOMS levels (i.e., planning units, unit tasks,
found a lack of uniformity at this level. Our belief is that
                                                                   methods, and operators). This solution is very similar to
this process is, itself, a form of expertise, and not a direct
                                                                   Salvucci & Taatgen (2008) who added more goal buffers to
product of the architecture. In ACT-R terms, this means that
                                                                   allow ACT-R to multi-task. However, they added one buffer
the constraint based decision-making system would be built
                                                                   for each task, which is different from the way we did it.
out of productions and chunks and could be considerably
                                                                   These differences are discussed below but here we wish to
different across tasks and across individuals for non-routine
                                                                   note the convergence of opinion that multiple goal buffers
decisions. For example, West and Nagy (2007) found that
                                                                   are needed for ACT-R to be flexible at the macro cognitive
network maintenance workers often had to consider a large
                                                                   level.
number of constraints when deciding how to respond to an
                                                                      A second issue that arose was the need to interrupt unit
unexpected event. In ACT-R terms this means that the
                                                                   tasks with environmentally driven events. This requires that
information needed to make the decision exceeded the
                                                                   the system be open to bottom up information from different
capacity of the buffers to hold it. Therefore, West and Nagy
                                                                   modalities (e.g., such as seeing the cheese on the floor, or
(2007) proposed that the workers were using memory-based
                                                                   hearing something drop). ACT-R is driven by the
heuristics to cope with this.
                                                                   production system representing procedural memory, which
                                                                   can be thought of as a top down system. However, this
                            Models                                 system can receive bottom up information from the
The claim behind SGOMS is that all expert tasks can be             environment through the perceptual modules and react to it
described with these mechanisms. Creating an ACT-R                 by firing a production. For example, there could be a
                                                               1790

production that fires when the auditory buffer contains the       than making a sandwich and also had more real time
sound of a fire alarm. If this production has a higher utility    components.
it will fire instead of the top down, goal driven productions.        The task fit well into the planning unit/unit task
However, using this approach means that the production            framework, although we will follow this up by having real
system can be interrupted at any point, which creates an          pilots evaluate the model. We found that unit tasks often
ACT-R programming nightmare. A second, related problem            reoccurred in different planning units, which was handled
is what happens when two bottom-up interruptions occur            easily and conveniently by our model. However, we also
close together. In this case the reaction to the first            found that the task involved a lot of monitoring and
interruption is immediately canceled in order to react to the     adjusting, which is different from a unit task that steps
second interruption, which creates more chaos. Although it        through a series of procedures towards a goal. For this we
is possible to use ACT-R in this way, the problems created        introduced “looping” unit tasks. These are unit tasks that
suggest that this aspect of the architecture is incomplete.       continuously repeat until they are interrupted. Normally we
   Our solution to this was to add a module to ACT-R              think of interruptions as a bad thing, but in this task we
representing the activity of the amygdala. The amygdala is        found that task interruptions could function in a positive
widely believed to function as a monitoring system for            way, as a signal to change unit tasks. For example, a voice
negative events (Sergerie, Chochol, & Armony 2008;                coming over the radio can act as signal to monitor the radio.
Damasio, 1994). However, in order to do this the amygdala         However, decisions have to be made about how much
module needed to function in a way similar to the                 information can be handled by the modules processing
procedural module. Therefore, we created a second, parallel       bottom up information. For example, we initially thought
production system to model the amygdala. However, the             the auditory module should monitor the radio for the call
productions it contains are merely reactionary, with each         sign of the airplane but our experience with the flight
production representing something the system finds                simulator indicated that novice pilots cannot do this.
alarming. The amygdala module monitors the buffers of the         Instead, based on our own experience, we had the auditory
perceptual modules and if there is a match to a production it     module monitor for a voice over the radio, which could
fires and places a chunk in the amygdala buffer indicating a      trigger a top down monitoring to listen for the call signal.
problem and the modality that detected the problem (so            The issue of how much intelligence can go into modules
attention can be directed there). This releases the procedural    that monitor the environment for information is important as
module production system from having to react to an               it can make a big difference in these models. An interesting
interruption immediately when the interruption occurs.            question related to this is whether these modules can learn
Under these conditions the procedural module production           to handle more, as in the case of an expert, or if the
system can monitor for interruptions within a cycle of            limitations are fixed.
executing methods and/or operators. Furthermore, by                   Our discussions with real pilots also revealed some
making the system for dealing with interruptions                  differences in terms of the constraint satisfaction process
interruptible in the same way, further interruptions can be       used to select planning units. West and Nagy (2007) had
dealt with by simply updating the representation of the           found that network maintenance workers often considered
situation and restarting the system for dealing with              large numbers of constraints and used heuristics to make
interruptions.                                                    decisions. In contrast, pilots often have definite rules or
   With these augmentations in place we were able to model        decision-making schemes. For example, if a pilot is landing
the sandwich maker in a robust way so that they could make        and an incursion occurs on the runway they must switch to
sandwiches, respond to unexpected events in intelligent           aborting the landing. Because this rule is simple it can be
ways, and work around problems. Although it was a                 modeled with a single production rule. Also, pilots are
relatively simple task we required the agent to be able deal      taught clearer priorities. For example, they learn first to
with an interruption at any point and also to respond             aviate, then to navigate, and last to communicate. They are
differently to different types of interruptions. As far as we     also taught rules for specific instances. For example, on the
can see, this would be difficult to achieve without our           last part of the landing they explicitly ignore radio
augmentations, and the model would certainly be less              communications. This finding was consistent with the claim
parsimonious.                                                     that constraint satisfaction methods will be task dependent
                                                                  (West and Nagy 2007).
Airplane pilot model
Our second task was to model the landing procedures on a                                 Multi tasking
commercial airliner. Our eventual goal is to produce a            As mentioned above, our approach to multi tasking is
detailed model of the distributed cognition analysis              similar to Salvucci & Taatgen (2008) in that we increased
presented in Hutchins (1995). To start on this model we           the number of goal buffers, but it is also different. One point
used the Microsoft Flight Simulator and the X Plane flight        that is important to keep in mind is that the Salvucci &
simulator to gain a basic knowledge of landing procedures.        Taatgen (2008) model is not a model of experts or of macro
We also discussed how we were modeling the procedure              cognition. The Salvucci & Taatgen (2008) model does a
with actual pilots. This task was considerably more complex       good job of modeling how people learn to multi-task in lab-
                                                              1791

based situations. We have no story about learning; instead          it allows us to get at the micro mechanisms that underlie
we based our model on the broader requirements of                   macro level behavior. Salvucci & Taatgen’s (2008) model
performing complex tasks in busy environments. In                   of multi-tasking is a good example of a micro theory. It is a
Salvucci & Taatgen’s (2008) model, each task gets one goal          way of understanding and experimenting on some of the
buffer. This allows switching between tasks without loosing         factors that underlie real world task switching. SGOMS is a
track of where you are in the task. Salvucci & Taatgen              macro level theory. It is aimed instead at understanding how
(2008) also use a greedy polite resource-sharing model,             real world multitasking can be understood in the context in
where resources are the modules that receive instructions           which it occurs.
from the procedural production system. Greedy means that                In our view the macro and micro levels should be
task productions will take over a module if it is available         complementary. For example, consider someone making a
and needed. Polite means that if one task is controlling a          cell phone call while driving, if it is the first time they have
module, when it is finished it will not re-take it, but instead     done this then they are not experts, SGOMS does not apply,
will let another task use it.                                       and the Salvucci & Taatgen model would be a good choice.
    As Salvucci & Taatgen (2008) note, there are other              However, if they frequently and routinely socialize on the
models of multi-tasking with different abilities. These             cell phone while driving (e.g., some taxi drivers) then
include the ability to delay, interrupt, and prioritize (Freed,     SGOMS predicts that they could have acquired expertise at
1998), the ability to direct multi-tasking using schemas            switching between their planning unit for driving and their
(Norman and Shallice, 1986), and the ability to adapt to            planning unit for socializing via cell phone. This would take
constraints (Howes et al., 2004, 2007). Essentially our goal        the form of a more sophisticated understanding of the
was to develop a model that could do all of these things.           constraints involved in phoning and driving.
However, we also made things easier for ourselves by                    Alternatively, consider a husband who picks up his wife
focusing only on experts, thus ignoring the problem of how          everyday from a busy downtown office building where there
people learn to do these things. Our way of doing this was          is no stopping allowed. To get around this he uses his cell
to use the ACT-R production system and the ACT-R                    phone to call her just before he gets there so she can come
declarative memory system to build a hierarchical control           out, but otherwise he does not use the cell phone in the car.
structure based on SGOMS. Within this hierarchy, multi-             In an SGOMS model the cell phone call and the driving
tasking can occur in different ways.                                would be part of the same planning unit – picking up his
    At the level of switching planning units, multi-tasking         wife. Because there is no switching between planning units
involves a constraint-based decision each time the task is          SGOMS does not predict the use of constraint based
switched. However, if the there are simple rules for this, as       switching, instead SGOMS predicts the use of rules specific
sometimes occurs with pilots, the switch can be achieved by         to that situation (e.g., phoning when in a particular merging
a single production rule and is therefore quite fast. The more      lane that is always slow). However, in all cases, the micro
complex the constraint based decision process, the longer           cognitive bottlenecks for resource allocation that underlie
the decision would take. As noted above, we believe that the        the Salvucci & Taatgen model, and ACT-R in general,
constraint based decision process is specific to the task.          would still apply. SGOMS is a theory of what else may
    Multi-tasking can also take place within a planning unit.       apply in specific contexts. In other words, it is a way of
This could occur if a planning unit required two or more            scaling up micro cognition to macro cognition.
distinct tasks to be completed. This could involve using a              In terms of buffers, Salvucci & Taatgen (2008) use
deliberate schema for switching between the unit tasks              different buffers to represent the goals of different tasks
associated with each of the tasks. In the simplest case, this       whereas we use different buffers to represent different levels
could be expressed by the order of the unit tasks in the            of information about the task. As noted above, the most
planning unit.                                                      important thing is the consensus that a single goal buffer is
    Finally, multi-tasking can take place within a unit task if     not enough. If we were to allow for multiple buffers the
the multi-tasking is a normal routine part of the unit task. In     most natural place would be within planning units to
this case we would expect the multi-tasking to be managed           represent different unit tasks.
by productions in the unit task in a way that is appropriate to
the task. The question of what happens below this brings up                                   Conclusion
an interesting question, which is, when does something              We have reported our progress so far in building two
cease to be multi-tasking and become a single task?                 SGOMS models of very different tasks. Building the models
Methods involve coordinating different activities, as do            is part of the SGOMS process, which involves iterating
operators, so really we are always multi-tasking.                   between model building and gathering real world data. The
                                                                    claim of SGOMS theory is that one cognitive framework
Micro versus Macro                                                  can be used to model all expert behavior. To test this and to
Psychology experiments are designed to get at micro                 make SGOMS more specific we want to try SGOMS on
cognitive processes and to avoid the influence of macro             many different tasks. So far, we have not found a task that
cognitive processes. To do this, experiments often involve          cannot be easily accommodated by the SGOMS structure.
abstract and artificial tasks. This is useful and good because
                                                                1792

    In terms of implementing SGOMS in ACT-R, two issues              meta-analysis of functional neuroimaging studies.
were found. The first was the need for a hierarchical goal           Neuroscience and Biobehavioral Reviews 32, 811–830.
structure instead of the single goal buffer that ACT-R uses.       Simon, H. (1962). The Architecture of Complexity.
However, it is important to note that the extra buffers are to       Proceedings of the American Philosophical Society,
keep track of activity within disruptive, multi-agent                106:6, 467-482.
environments and are not needed to model Psychology                West, R.L., & Nagy, G. (2007). Using GOMS for modeling
experiments, which almost always involve simple, isolated            Routine Tasks Within Complex Sociotechnical Systems:
tasks. The other thing we found was the need for a system to         connection Macrocognitive Models to Microcognition.
evaluate bottom up information. We created such a system             Journal of Cognitive Engineering and Decision Making.
by modeling the amygdala as a production system, with the          West, R.L. & Pronovost, S. (2009). Modeling SGOMS in
caveat that it can contain only simple, reactive productions.        ACT-R. Linking macro and micro cognition. Journal of
Something like this is needed to allow the ACT-R                     Cognitive Engineering and Decision Making.
procedural memory production system to deal with bottom
up interruptions, otherwise, in a noisy environment, the
procedural memory production system would be constantly
interrupted in order to evaluate bottom up information.
                         References
Anderson, J. R. & Lebiere, C. (1998). The atomic
   components of thought. Mahwah, NJ: Erlbaum.
Card, S., Moran, T., & Newell, A. (1983) The Psychology of
   Human-Computer Interaction. Hillsdale, NJ: Lawrence
   Erlbaum Associates.
Damasio, A.R. (1994). Descartes’ Error: emotion, reason,
   and the human brain. New York: Grosset/Putnam.
Freed, M. (1998). Managing multiple tasks in complex,
   dynamic environments. In Proceedings of the 1998
   National Conference on Artificial Intelligence, Madison,
   Wisconsin, 1998.
Howes, A., Vera, A., Lewis, R.L., and McCurdy, M. (2004).
   Cognitive constraint modeling: A formal approach to
   supporting reasoning about behavior. In Proc. Cognitive
   Science Society.
Howes, A., Vera, A., Lewis, R.L. (2007). Bounding rational
   analysis: Constraints on asymptotic performance. In W.
   D. Gray (Ed.) Integrated Models of Cognitive Systems
   (pp. 403-413). Oxford University Press.
Hutchins, E. (1995). How a Cockpit Remembers Its Speeds.
   Cognitive Science, 19, 265-288.
Klein, G., Woods, D. D., Bradshaw, J. D., Hoffman, R. R.,
   and Feltovich, P. J. (November/December 2004). Ten
   challenges for making automation a “team player” in joint
   human-agent activity. IEEE: Intelligent Systems, pp. 91-
   95.
Newell, A. (1990). Unified theories of cognition.
   Cambridge: Harvard University Press.
Norman, D. A., & Shallice, T. (1986). Attention to action:
   Willed and automatic control of behavior. In R. J.
   Davidson, G. E. Schwartz, & D. Shapiro (Eds.),
   Consciousness and Self-Regulation (pp. 1-18). New York:
   Plenum.
Salvucci, D. D., & Taatgen, N. A. (2008). Threaded
   cognition: An integrated theory of concurrent
   multitasking. Psychological Review.
Sergerie, K., Chochol, C., & Armony, J. L. (2008). The role
   of the amygdala in emotional processing: A quantitative
                                                               1793

