UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
A Case Study in Computational Math Cognition and Embodied Arithmetic
Permalink
https://escholarship.org/uc/item/7xd205jv
Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 29(29)
Author
Goldfain, Albert
Publication Date
2007-01-01
Peer reviewed
 eScholarship.org                                 Powered by the California Digital Library
                                                                    University of California

       A Case Study in Computational Math Cognition and Embodied Arithmetic
                                                Albert Goldfain (ag33@cse.buffalo.edu)
                                             Department of Computer Science and Engineering,
                                                          Center for Cognitive Science,
                                                   University at Buffalo, Buffalo, NY 14260
                               Abstract                                   the semantics for the natural numbers and quantities come
                                                                          from? (2) Where do the semantics for the arithmetic op-
   This paper defends the claim that a part of human mathemat-
   ical cognition can be realized in a computational cognitive            erations come from? (3) Where do the semantics for post-
   agent (thereby rejecting the claim that the human embodiment           arithmetic operations come from? A theory of math cogni-
   has a privileged status with respect to mathematical cognition).       tion can be formulated that is both cognitively plausible and
   The defense of this position rests on two points: (1) The em-
   bodied activities that provide a semantics for arithmetic are          computational, i.e., suitable for an symbolic-AI agent imple-
   performable by computational agents and (2) abstraction from           mentation. The preliminary implementation of such an agent
   these activities yields representations that can be reasoned with      using the SNePS system and the GLAIR architecture is de-
   by such agents (while still remaining associated with the origi-
   nating embodied activities). In particular, such representations       scribed below. First, we will look at some features of a com-
   can be used in a justification of arithmetic results. A case study     putational theory of math cognition.
   in computational math cognition is presented using the task
   of finding the greatest common divisor (GCD) of two natural                         Computational Math Cognition
   numbers. An overview of a preliminary agent implementation
   is given using the SNePS knowledge-representation, reason-             This work is part of a larger project whose long-term goal is a
   ing, and acting system and GLAIR architecture.                         computational theory of math cognition with a particular em-
   Keywords: knowledge representation; cognitive architecture;            phasis on counting and arithmetic routines. The focus of the
   cognitive modeling
                                                                          theory is on mathematical understanding rather than concept
                                                                          acquisition, learning, or teaching (although these are inextri-
                            Introduction                                  cably tied to understanding).
Mathematical cognition is an interdisciplinary investigation
into the cognitive mechanisms underlying human mathemat-                  Ability and Understanding
ical activity. This emerging branch of cognitive science has              It will first be necessary to make a sharp distinction between
seen contributions from psychology (Piaget, 1965; Gelman                  mathematical ability and mathematical understanding. It is
& Gallistel, 1978), linguistics (Wiese, 2003), and neuro-                 fairly uncontroversial to claim that computers (even the un-
science (Dehaene, 1997). Lakoff and Núñez (2000) have pro-              sophisticated pocket calculator) have mathematical ability.
vided one of the seminal unifying works in the field of math              Simply put, they are able to produce correct results reliably.
cognition. The central claim of this work is that mathematics             Even though it is left to the human user to interpret these re-
is not objective and disembodied, but rather is subjective and            sults, it is clear that the computer is the one doing the “work”
highly dependent on the embodied human mind, along with                   (and thus the request from teachers to “show your work in-
its particular conceptual system, inference mechanisms, and               stead of using a calculator”). In contrast, it is not at all clear
representations. The possibility of realizing human mathe-                what the necessary and sufficient conditions for mathematical
matical cognition in a non-human embodiment (e.g., a com-                 understanding are or what it would mean for a computational
puter) is dismissed as being a part of the “Romance of Mathe-             agent to have mathematical understanding. The term ‘under-
matics” that Lakoff and Núñez hope to dispel. In their view, a          standing’ is both vague and ambiguous.
computational agent’s mechanical embodiment and rigid rep-                   Roughly, I take understanding to be a process that happens
resentations prevent the kind of experiences and conceptual-              alongside and after the learning of procedures and acquisi-
izations that give rise to human mathematical cognition.                  tion of concepts. From a methodological standpoint, the best
   In this paper, I argue that at least a part of (developmen-            we can do is try to identify empirically testable features of
tally) early mathematical cognition can be realized in a com-             mathematical understanding and then look for these features
putational cognitive agent. By this I mean that such an agent             in both human and computational agents. Treated this way,
would be capable of passing an empirical test for mathemat-               understanding is a gradient of features. A cognitive agent
ical understanding. Mathematical understanding is a notion                with more of these features can be said to have more under-
I will make more precise and distinguish from mathematical                standing than one with less.
ability. As a case study, I look at the problem of finding the               The feature of mathematical understanding that I will be
GCD of two natural numbers and consider how a cognitive                   focusing on is the ability to justify mathematical results in a
agent (either human or computational) would justify its un-               common-sense explanation. Although a logic will be used,
derstanding of GCD.                                                       this is opposed to a formal proof-as-explanation. This will
   Along the way, the following semantic questions must be                constitute a sort of mathematical Turing test for a computa-
considered and at least partially answered: (1) Where do                  tional agent.
                                                                      293

Towards a Theory                                                     simpler arithmetic concepts and operations (or else the geo-
This section summarizes four important claims from existing          metric analog of arithmetic) and thus can be a showcase for
research on human mathematical understanding that inform a           these concepts and operations. However, a solution to the
computational theory.                                                GCD problem need not include the advanced conceptualiza-
                                                                     tions of algebra or calculus. Also, there are many ways to find
   The representation of numbers and quantities must be flex-
                                                                     the GCD of two numbers (perhaps a characteristic of all in-
ible. To be cognitively plausible in a symbolic AI system,
                                                                     termediate level problems). Intuitiveness, efficiency, and ap-
numbers should be associable with various numeral systems
                                                                     plicability will vary greatly from one GCD algorithm to the
(e.g., Arabic numerals, Roman numerals, talleys) and naming
                                                                     next.
systems (e.g., the number names in some natural language).
The representation of number must also allow for the use of             When asked to find the GCD of two natural numbers x and
numbers as cardinal quantities (e.g., “three apples”), ordinal       y I have found that most non-mathematicians who learned
positions (e.g., “the third apple from the right”), and nominals     GCD at some point come up with a “back-of-the-envelope”
(e.g., “House number 3”) (Wiese, 2003). Quantities must also         algorithm similar to the following:
be able to present themselves in various sensory modalities,         1. List the divisors of x
   The representation of procedures must be flexible. Math-          2. List the divisors of y
ematical routines can be viewed structurally or opera-               3. List the divisors common to the two lists
tionally (Sfard, 1991). An agent should be able to consider          above
both a given operation and the result of that operation. There       4. Circle the greatest number from the list of
is an interplay between procedural and declarative knowledge         common divisors
in mathematical reasoning.
                                                                     This “common-sense” algorithm isolates the semantics of
   Embodied acts are a source for meaning in early arithmetic        “greatest” and “common” (terms which occur frequently in
Actions involving object collection, object construction, and        natural language) from divisor-finding. I would speculate that
motion along a path serve as source domains for conceptual           most non-mathematicians would respond with a similar algo-
metaphor mappings to the abstract objects and operations of          rithm (although I have not subjected this hypothesis to a for-
arithmetic (Lakoff & Núñez, 2000). So addition, for exam-          mal trial) and it would be more surprising to see a non-expert
ple, can be conceived of as accumulating two collections of          using a recursive version of the Euclidean GCD algorithm:
objects, constructing a new object from two pieces, or walk-
ing for a distance to a given point and then walking further to      gcd(x,y)
another point. Beyond addition, removal can be construed as                   if y=0 return x
an implementation of subtraction, iteration as an implemen-                   else return gcd(y, x mod y)
tation of multiplication, and sharing as an implementation                    end if
of division. According to Lakoff and Núñez, these ground-          This more efficient and optimized algorithm lacks the intu-
ing metaphors are combined with further metaphoric map-              itive semantics of the common-sense algorithm.
pings (called linking metaphors) and the mapped concepts                To probe the understanding of a cognitive agent who
become applicable to mathematics beyond arithmetic. Mac              believes that the GCD of 8 and 6 is 2, we can imagine the
Lane (1981) speculates that other “originating” human ac-            following idealized question and answer dialogue unfolding:
tivities serve as the basis for the various branches in higher
mathematics.                                                         Q1: Why is 2 the greatest common divisor of 8 and 6?
   Mathematics often involves extended cognition. This claim         A1: 2 is the greatest of the common divisors of 8 and 6.
is consistent with observations made by Hutchins (1995). An          Q2: Why is 2 a common divisor of 8 and 6?
agent must have the ability to act externally and the ability        A2: 2 is a divisor of 8 and 2 is a divisor of 6.
to represent information beyond the boundary of its embodi-          Q3: Why is 2 a divisor of 6?
ment. This includes using external tools to represent this in-       A3: There is a number that, when multiplied by 2, gives 6, and that
formation (e.g., marks on paper, results on a calculator). For       number is 3.
a computational agent, this amounts to providing access to           Q4: Why is 2 times 3 = 6?
external resources and providing a representation scheme for         A4: Multiplication is repeated addition: 2 plus 2 is 4; 4 plus 2 is 6
external information that is compatible with the framework           Q5: Why is 2 plus 2 = 4?
already in place for internal information.                           A5: When I count from 2 for two numbers I end up at 4
                                                                     Q6: How do you know that you will end up at 4?
                     Case Study: GCD                                 A6: I counted two groups of apples, with 2 apples in each, ending
I focus on the task of finding the greatest common divisor           up with 4 total apples.
(GCD) of two natural numbers as a representative case study          Q7: What is 2?
in computational math cognition. There are several merits            A7: It is a number and the greatest common divisor of 8 and 6.
to choosing this task. Finding the GCD is an “intermediate-          Q8: What is a number?
level” problem for a cognitive agent. Its solution requires the      A8: Some examples are 2,4,6 and 8 . . . It is something that can be
                                                                 294

counted, added, multiplied . . . and something that can be the result     the truth value of unasserted propositions. SNePS is propo-
of finding a greatest common divisor                                      sitional in that all propositions are represented as first-class
                                                                          terms in the logic. Thus, in the representation of the proposi-
This Turing-Test style idealization is often not repro-                   tion “3 is the successor of 2”, Cassie explicitly represents “3”,
duced by humans. Again informally, I have found that most                 “2”, and the belief “3 is the successor of 2”. This an is impor-
people will stop somewhere along the line of explaining a                 tant feature of SNePS because the agent’s beliefs may be the
complex act in terms of simpler acts and give “It just is”                the object of further beliefs in the context of an explanation.
answers (especially when asked things like “Why is 2 times                   The SNePS system includes an inference package (SNIP)
3 = 6?”). Nevertheless, I think such a dialogue is what we                that allows Cassie to infer new beliefs through rule-based rea-
should strive for from a computational agent because at each              soning (by following explicit rules that she is given) and path-
point a result is justified in terms of simpler, antecedently             based reasoning (by using relations holding between nodes in
understood procedures. Humans tend to pack away the                       her network to infer new relations). SNIP also allows a user to
procedural knowledge after an arithmetic operation has been               ask Cassie a question by triggering inference. Cassie can han-
understood at a higher level of abstraction. For example,                 dle both true/false/don’t know questions and wh-questions
once the multicolumn addition is learned, it seems unnatural              (represented by variables to be filled in open propositions). If,
to cite counting as a method of addition (see Sfard (1991) for            in the course of reasoning, Cassie encounters a contradiction
a discussion of this sort of reification).                                between propositions, SNePS has a belief-revision package
   The dialogue shows the different sources of meaning used               (SNeBR) that prompts the user to remove one of the contra-
in a mathematical justification. Natural language semantics               dictory beliefs.
can be used to address Q1 and Q2. A technique of decom-                      SNePSLOG allows a knowledge engineer to select the re-
position into simpler procedures is used for Q3, Q4, and                  lations that structure Cassie’s concepts. This is done by defin-
Q5. An empirical embodied activity is cited for Q6. Finally,              ing case-frames with the define-frame command. For exam-
conceptual-role semantics are applied to answer Q7 and Q8                 ple, the command define-frame P(rel0 rel1 rel2) will
(for a further discussion of these semantic sources, see (Gold-           make the following case-frame available:
                                                                                                           @ABC
                                                                                                           GFED
fain, 2006a)).
   I now consider a how a SNePS-based computational agent                                                    m! @
                                                                                                           ~     @@
might be designed with the ability to compute GCDs and                                                   ~~
                                                                                                                  rel2@@
                                                                                                     ~~
                                                                                                      rel0  rel1
                                                                                                                        @@
enough understanding (in my sense of the word) to carry out                                       ~~~                    
such a question and answer dialogue.                                                            P            x              y
                                                                          Here, x and y are place-holders. Whenever an assertion is
                              SNePS
                                                                          made involving this frame, for example P(a,b), the network
SNePS is a knowledge-representation, reasoning, and act-                  structure is built (with a and b filling in the place-holder slots)
ing system implemented in Lisp (Shapiro & Rapaport, 1987,                 and P(a,b) becomes an asserted wff in Cassie’s belief space.
1995). As an agent design platform, SNePS has been used
for computational theories of natural-language competence,                SNeRE
belief revision, cognitive robotics, and contextual vocabulary            SNeRE, the SNePS Rational Engine, is Cassie’s subsystem
acquisition (among many other applications; see (Shapiro,                 for acting. SNeRE provides a set of dedicated case frames
2007) for a more complete list). As such, SNePS has not been              for representing acts. There is a distinction made between
built specifically for mathematical representations or acts, but          primitive acts and composite acts. Primitive acts are Cassie’s
rather as a general tool for cognitive modeling.                          basic repertoire of actions and cannot be further decomposed.
   SNePS can function as a frame system, a logical rule-based             Primitive acts are implemented in Lisp. Composite acts are
system, or a propositional semantic network. Correspond-                  built up out of primitive acts and other acts (both compos-
ing to these representational facets of SNePS are two inter-              ite and primitive) using SNeRE primitive acts for sequence,
face languages for the agent designer: SNePSUL (a Lisp-like               conditional, and iteration. I will make use of the following
language for using SNePS as a semantic network or frame                   SNeRE primitive acts:
system) and SNePSLOG (a Prolog-like language for using                    • ActPlan(a1,a2): Act a1 can be performed by performing
SNePS as a logical rule-based system). For the rest of this                  plan a2. In other words, a2 is a plan for doing a1.
paper, I will be expressing SNePS interactions using SNeP-
SLOG, but occasionally showing the semantic network when                  • believe(p): A mental act. The proposition p is asserted
the relational structure of terms is illustrative. In either inter-          and added to the list of asserted wffs.
face language, the well-formed formulas (wffs) of the SNePS               • disbelieve(p): A mental act. The proposition p is
interface languages represent the intensional beliefs of a cog-              unasserted and removed from the list of asserted wffs.
nitive agent named Cassie. A proposition can either be as-
serted or unasserted in Cassie’s belief space. Cassie believes            • snsequence(a1,a2): The act of first performing a1 and
asserted propositions to be true and makes no commitment to                  then performing a2
                                                                      295

                                                                                             @ABC
                                                                                             GFED                                @ABC
                                                                                                                                 GFED
• withsome(v,p(v),a,d): For some v such that p(v)
   holds, a is performed; if no such v can be found, then d                                   m2! F                               m4! F
                                                                                          xxx      FF                         xxx      FF
   is performed.                                                                        x            F                      x            F
                                                                                     pred
                                                                                     x                  FF
                                                                                                     succ                pred
                                                                                                                         x                  FF
                                                                                                                                         succ
                                                                                                          FF                                  FF
For a complete list of the SNeRE constructs along with their                     {xxx                        #       {xxx                        #
syntax and semantics, see (Shapiro, 2004).                                N1 O                                 N2O                                 N3
                                                                                                                                                    O
   What is most important for our current purposes is that
                                                                         @ABC
                                                                         GFED                               @ABC
                                                                                                            GFED                                GFED
                                                                                                                                                @ABC
                                                                         ob ject                            ob ject                             ob ject
Cassie reasons while acting and she leaves a trail of beliefs
as an act unfolds. This trail of propositions represents an               m1!                                  m3!                                 m5!
episodic memory of the particular act that was performed.
                                                                        numeral                            numeral                             numeral
GLAIR                                                                                                                                               
GLAIR, the Grounded Layered Architecture with Inte-                        1                                    2                                   3
grated Reasoning, is an architecture for embodied SNePS
agents (Hexmoor & Shapiro, 1997; Shapiro & Ismail, 2003).
                                                                      Figure 1: Associating numbers with a syntactic public lan-
This architecture has been implemented in various physically
                                                                      guage (e.g., numerals). Jm1K = numeral 1 represents JN1K.
embodied agents (robots) and agents with simulated embodi-
                                                                      Jm2K = N2 is the successor of N1. Jm3K = numeral 2 rep-
ments (softbots). GLAIR is composed of three layers:
                                                                      resents JN2K. Jm4K = N3 is the successor of N2. Jm5K =
• Knowledge Layer (KL): Implemented in SNePSLOG. Con-                 numeral 3 represents JN3K.
   tains Cassie’s beliefs, plans, and policies.
• Perceptuo-Motor Layer (PML): Implemented in Lisp.                   • Collection(B,NumSort(N,P)): B is a collection of N Ps.
   Contains Cassie’s primitive actions and low-level functions
   for controlling her embodiment and perception as well as           • Measure(B,NumSort(N,P)): B is an object that measures
   synchronizing percepts with the KL.                                    N Ps.
• Sensori-Actuator Layer (SAL): Implemented in the partic-            B is a KL base node associated with a perceptual value in the
   ular device implementation language(s) of the selected em-         PML alignment table (see Figure 2). While not a complete
   bodiment. Lowest-level routines for sensing and affecting          solution to the symbol-grounding problem, this is a form of
   the outside world. This layer is sometimes omitted or sim-         anchoring (Shapiro & Ismail, 2001; Goldfain, 2006b) that al-
   ulated in softbots.                                                lows Cassie to reason about external quantities.
Using GLAIR makes Cassie an agent that can be situated
in the real-world or any number of simulated virtual worlds.
This allows her to perform concrete embodied activities that
will impact her abstract KL beliefs.
    Number and Quantity Semantics in SNePS
Numbers for Cassie are positions in a structure exemplifying
the natural number progression. All that is required of this
structure is a first element and an arbitrary number of unique
successive elements ordered by a successor relation. A finite
initial segment of this structure must be generated by Cassie
during a counting act. The Lisp gensym function is used in the
PML to produce arbitrarily named unique symbols that be-
come base nodes in the KL (in Figure 1 they are listed as N1,
N2, N3 for readability). During counting, each number base
node is inserted into the natural-number progression and as-
sociated with a numeral. This act of counting numbers differs
from counting something with numbers. Numbers must par-
ticipate in quantities, which I take to be a number associated
with a sortal. I make an ontological distinction between non-         Figure 2: Anchoring of quantities in GLAIR. KL symbols
unit sortals like “three apples” and unit sortals “three inches”.     (such as b6) are aligned to perceptual values (such as top-
Non-unit sortals like apples are to be found in object collec-        left-object pixels) in the PML alignment table
tion activities whereas unit sortals are more useful for ob-
ject construction and measurement acts. Quantities are repre-             Numbers must also play various roles in abstract arith-
sented in SNePSLOG using the Collection or Measure and                metic. For example, the number expressed by the numeral
NumSort case-frames with the following semantics:                     2 can be considered as the successor of 1, the quotient of 8
                                                                  296

and 4, or the difference of 3 and 1. Thinking of 2 in these var-     explanation (see (Shapiro et al. (2007))) for further discus-
ious roles will be dictated by the acts Cassie has performed.        sion). The second rule ties together the result frames from
This is captured in SNePSLOG using result frames with the            the specific act of multiplication and the general act of multi-
following semantics (e.g., for a binary operation):                  plication by saying that a summed-product is a product sim-
                                                                     pliciter. The general act result frame allows Cassie to pull
• R(arg1 arg2 result): The result named R of arg1 and                together results obtained from different sources under a com-
   arg2 is result.                                                   mon representation. Thus, arithmetic can be expressed recur-
                                                                     sively for Cassie with a basis of the counting act. Addition is
So, for example, Sum(N2,N3,N5) expresses that the result ex-
                                                                     counting from the first addend for the-second-addend-many-
pressed by “sum” of N2 and N3 is N5. The result name must
                                                                     numbers (a sort of metacounting). Subtraction is inverted ad-
also be abstracted, because the result named Sum may also be
                                                                     dition (i.e., finding a number that, when added to the num-
expressed by words like Total or Accumulation.
                                                                     ber being subtracted, will yield the number being subtracted
                                                                     from). Multiplication is iterated addition as shown. Division
                   Embodied Arithmetic
                                                                     is inverted multiplication.
One of the immediate benefits of the GLAIR architecture for
embodied arithmetic is that abstract mathematical entities like                           GCD-Specific Acts
numbers can be associated with real world objects (like col-
                                                                     What remains is to account for how the arithmetic acts are
lections) in the form of anchored quantities. This allows var-
                                                                     linked to the GCD specific acts of building divisor lists, build-
ious implementations of perceptual routines in the PML to
                                                                     ing a common list, and picking out the greatest element of a
remain independent of the KL logic and reasoning. For ex-
                                                                     list.
ample, there is some debate in mathematical cognition as to
                                                                        The building of the divisor lists is done by repeatedly try-
whether enumeration is performed through the visual modal-
                                                                     ing successive “candidate” divisors along the number line for
ity using object recognition along with a counting routine
                                                                     each input argument to GCD. Cassie does not need a notion
or whether pattern recognition is used through a subitization
                                                                     of a remainder for division since she only knows about the
routine (e.g., as in the automatic recognition of what is rolled
                                                                     natural numbers (and thus she will only infer whole number
on a die without having to count the dots). Using GLAIR,
                                                                     answers to division problems). A list of common divisors is
either perceptual routine could be implemented to work with
                                                                     constructed by using the logical and connective provided by
the vision modality without impacting the “conscious” (i.e.,
                                                                     SNePSLOG to have Cassie pick out elements that are in both
agent-aware) KL reasoning used in a justification. An object-
                                                                     lists. These lists are built in the KL but represented in a Lisp
collection implementation is described in detail in (Goldfain,
                                                                     “scratch pad”, a form of extended cognition so that Cassie
2006b). This activity is sufficient for answering questions like
                                                                     does not have to keep the lists “in her head”. The semantics
Q6 in the dialogue above.
                                                                     from “greatest” are given by path-based reasoning. If a num-
        Recursive (Disembodied) Arithmetic                           ber y can be reached using a path consisting of inverse pred
                                                                     arcs and forward succ arcs (see Figure 1) from a number x, it
The recursive notion of understanding demonstrated in the            must be the case that x < y. Basically, this represents Cassie’s
idealized interrogation above suggests that a new act is un-         implicit knowledge that the numbers said later in the counting
derstood in terms of previously understood acts. Mathematics         act are greater than those said earlier.
in general and arithmetic in particular are very prerequisite-
dependent subjects of thought. This creates a continuum                                       Conclusion
of understanding (Rapaport, 1995) that links up procedural
knowledge (how can I do this with things I already know how          I have shown how a series of mathematical acts can be imple-
to do?) and conceptual knowledge (how do the results of my           mented in a computational cognitive agent. In principle, the
actions relate to one another?).                                     effects of these acts (represented by result-frames in SNePS)
                                                                     are all that an agent would require to carry out a Turing-test
   Figure 3 shows how multiplication as iterated (strictly
                                                                     style demonstration of understanding. I believe that those
speaking recursive) addition can be expressed in SNePSLOG,
                                                                     who, like Lakoff and Núñez, maintain that computational
a procedure I am calling add-multiplication. The procedural
                                                                     agents cannot attain mathematical understanding must spec-
link between addition and multiplication is also augmented
                                                                     ify some empirical test by which a feature of mathematical
by two important rules:
                                                                     understanding can be measured in humans and demonstrate
all(x,y)({Number(x),Number(y)} &=>                                   why a computational agent would fail such a test.
          ActPlan(Multiply(x,y),AddMultiply(x,y))).
all(x,y,z)(SumProduct(x,y,z) => Product(x,y,z)).                                          Acknowledgments
The first rule says that one way of multiplying two numbers          I am grateful to William J. Rapaport, Stuart C. Shapiro, four
is add-multiplication. In fact Cassie might know several ways        anonymous reviewers and the members of the SNePS Re-
of performing the act Multiply(x,y) and may decide to use            search Group for commenting on previous versions of this
another procedure for multiplication outside the context of          work.
                                                                 297

all(x)(ProductResultSoFar(x) =>
          ActPlan(AddFromFor(x,0),believe(SumProduct(x,1,x)))).
all(w,x,y,z)({NumToAdd(w), Successor(y,z),ProductResultSoFar(x)} &=>
                 {ActPlan(AddFromFor(x,y),
                             snsequence(disbelieve(ProductResultSoFar(x)),
                             snsequence(Add(x,w),
                                          withsome(?p,
                                                    Sum(x,w,?p),
                                                    snsequence(believe(ProductResultSoFar(?p)),
                                                                  AddFromFor(?p,z)),
                                                    Say(‘‘I don’t know the sum’’)))))}).
all(x,y)({Number(x),Number(y)} &=>
             ActPlan(AddMultiply(x,y),
                        snsequence(believe(ProductResultSoFar(x)),
                        snsequence(believe(NumToAdd(x)),
                        snsequence(withsome(?p,Successor(?p,y),AddFromFor(x,?p),AddFromFor(x,0)),
                        snsequence(withsome(?z,ProductResultSoFar(?z),
                                               snsequence(believe(SumProduct(x,y,?z)),
                                                             disbelieve(ProductResultSoFar(?z))),
                                               SayLine("I could not determine the product.")),
                                     disbelieve(NumToAdd(x)))))))).
 Figure 3: Add Multiplication in SNePS. The recursive and base cases of the act AddFromFor and the plan for AddMultiply
                        References                              Sfard, A. (1991). On the Dual Nature of Mathematical Con-
Dehaene, S. (1997). The Number Sense. Oxford, UK: Oxford          ceptions. Educational Studies in Mathematics, 22, 1–36.
  University Press.                                             Shapiro, S. C. (2004). SNePS 2.6.1 User’s Manual. http:
Gelman, R., & Gallistel, C. R. (1978). The Child’s Under-         //www.cse.buffalo.edu/sneps/.
  standing of Number. Cambridge: Harvard University Press.      Shapiro, S. C. (2007). The SNePS Research Group
Goldfain, A. (2006a). A Computational Theory of Inference         Bibliography. http://www.cse.buffalo.edu/sneps/
  for Arithmetic Explanation. Proceedings of ICoS-5, 145–         Bibliography/.
  150.                                                          Shapiro, S. C., & Ismail, H. O. (2001). Symbol-Anchoring
Goldfain, A. (2006b). Embodied Enumeration: Appealing to          in Cassie. In S. Coradeschi & A. Saffioti (Eds.), Anchor-
  Activities for Mathematical Explanation. Cognitive Robot-       ing Symbols to Sensor Data in Single and Multiple Robot
  ics: Papers from CogRob2006, 69–76.                             Systems (p. 2-8). AAAI Press.
Hexmoor, H., & Shapiro, S. C. (1997). Integrating Skill and     Shapiro, S. C., & Ismail, H. O. (2003). Anchoring in a
  Knowledge in Expert Agents. In P. J. Feltovich and K.           Grounded Layered Architecture with Integrated Reason-
  M. Ford and R. R. Hoffman (Ed.), Expertise in Context (p.       ing. Robotics and Autonomous Systems, 43, 97–108.
  383-404). Menlo Park, CA / Cambridge, MA: AAAI/MIT.           Shapiro, S. C., & Rapaport, W. J. (1987). SNePS Considered
Hutchins, E. (1995). Cognition in the Wild. Cambridge, MA:        as a Fully Intensional Propositional Semantic Network. In
  MIT Press.                                                      N. Cercone & G. McCalla (Eds.), The Knowledge Frontier
Lakoff, G., & Núñez, R. (2000). Where Mathematics Comes         (p. 262-315). New York, NY: Springer Verlag.
  From. New York: Basic Books.                                  Shapiro, S. C., & Rapaport, W. J. (1995). An Introduction
Mac Lane, S. (1981). Mathematical Models. American Math-          to a Computational Reader of Narrative. In J. F. Duchan,
  ematical Monthly, 88, 462–472.                                  G. A. Bruder, & L. E. Hewitt (Eds.), Deixis in Narrative (p.
Piaget, J. (1965). The Child’s Conception of Number. New          79-105). Hillsdale, NJ: Lawrence Erlbaum.
  York, NY: Norton.                                             Shapiro, S. C., Rapaport, W. J., Kandefer, M., Johnson, F. L.,
Rapaport, W. J. (1995). Understanding Understanding. In           & Goldfain, A. (2007). Metacognition in SNePS. AI Mag-
  J. Tomberlin (Ed.), AI, Connectionism, and Philosophical        azine, 28(1), 17–31.
  Psychology (p. 49-88). Atascadero: Ridgeview.                 Wiese, H. (2003). Numbers, Language, and the Human Mind.
                                                                  Cambridge, UK: Cambridge University Press.
                                                            298

