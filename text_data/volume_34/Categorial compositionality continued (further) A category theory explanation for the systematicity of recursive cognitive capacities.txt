UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
Categorial compositionality continued (further): A category theory explanation for the
systematicity of recursive cognitive capacities
Permalink
https://escholarship.org/uc/item/85v7b82q
Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 34(34)
Authors
Phillips, Steven
Wilson, William
Publication Date
2012-01-01
Peer reviewed
 eScholarship.org                                Powered by the California Digital Library
                                                                  University of California

  Categorial compositionality continued (further): A category theory explanation
                             for the systematicity of recursive cognitive capacities
                                                    Steven Phillips (steve@ni.aist.go.jp)
       Mathematical Neuroinformatics Group, National Institute of Advanced Industrial Science and Technology (AIST),
                                                       Tsukuba, Ibaraki 305-8568 JAPAN
                                              William H. Wilson (billw@cse.unsw.edu.au)
                           School of Computer Science and Engineering, The University of New South Wales,
                                                Sydney, New South Wales, 2052 AUSTRALIA
                                Abstract                                   together afford cognition) whereby cognitive capacity is or-
                                                                           ganized around groups of related abilities. A standard exam-
   Human cognitive capacity includes recursively definable con-
   cepts, which are prevalent in domains involving lists, numbers,         ple since the original formulation of the problem (Fodor &
   and languages. Cognitive science currently lacks a satisfactory         Pylyshyn, 1988) has been that you don’t find people with the
   explanation for the systematic nature of recursive cognitive ca-        capacity to infer John as the lover from the statement John
   pacities. The category-theoretic constructs of initial F-algebra,
   catamorphism, and their duals, final coalgebra and anamor-              loves Mary without having the capacity to infer Mary as the
   phism provide a formal, systematic treatment of recursion in            lover from the related statement Mary loves John. An in-
   computer science. Here, we use this formalism to explain the            stance of systematicity is when a cognizer has cognitive ca-
   systematicity of recursive cognitive capacities without ad hoc
   assumptions (i.e., why the capacity for some recursive cogni-           pacity c1 if and only if the cognizer has cognitive capacity
   tive abilities implies the capacity for certain others, to the same     c2 (see McLaughlin, 2009). So, e.g., systematicity is evident
   explanatory standard used in our account of systematicity for           where one has the capacity to remove the jokers if and only if
   non-recursive capacities). The presence/absence of an initial
   algebra/final coalgebra implies the presence/absence of all sys-        one has the capacity to remove the aces (assuming, of course,
   tematically related recursive capacities in that domain. This           one has the capacity to identify jokers and aces).
   formulation also clarifies the theoretical relationship between
   recursive cognitive capacities. In particular, the link between            The classical explanation for systematicity has two compo-
   number and language does not depend on recursion, as such,              nents: (1) combinatorial syntactically structured representa-
   but on the underlying functor on which the group of recursive
   capacities is based. Thus, many species (and infants) can em-           tions; and (2) processes that are sensitive to (i.e., compatible
   ploy recursive processes without having a full-blown capacity           with) those syntactic structures. In a classical cognitive ar-
   for number and language.1                                               chitecture, mental representations of constituent entities (e.g.,
   Keywords: systematicity; category theory; endofunctor, F-               John, Mary) are tokened (instantiated) whenever the mental
   (co)algebra; (final) initial algebra; universal construction; cata-     representations of their complex hosts (e.g., John loves Mary)
   morphism; anamorphism; classicism; connectionism
                                                                           are tokened, with the meaning of a complex host represen-
                                                                           tation obtained (recursively) from the meaning assigned to
                            Introduction                                   its constituent mental representations and their syntactic rela-
Many cognitive domains include recursively definable con-                  tionships. By analogy to language, this form of mental repre-
cepts (i.e., concepts defined with reference to themselves),               sentation is called a language of thought (LoT) (Fodor, 1975).
such as domains involving lists, or languages. In card games,
for example, a deck of cards can be defined (recursively) as a                The three aspects of systematicity, i.e., systematicity of rep-
top card (perhaps turned face up to reveal its value) and a (re-           resentation, systematicity of inference, and compositionality
maining) deck of cards. To include finite decks, the definition            of representation (Fodor & Pylyshyn, 1988), can often be de-
has an alternative clause specifying an empty deck; that is, a             rived from classical cognitive architectures, because the same
deck is either empty, or contains a top card and a (smaller)               component processes are often used for each and every mem-
deck. Operations on recursively defined concepts may also                  ber of a group of systematically-related capacities. For in-
be defined recursively. For example, removing jokers from                  stance, a classical system has the capacity to represent John
a deck of cards can be defined (recursively) as removing the               loves Mary if and only if the system has a capacity to repre-
top card if it is a joker and then removing jokers from the                sent Mary loves John when the common component process
remaining deck of cards. Given that you don’t find people                  is something like a production rule: S → Agent loves Patient
who can remove the jokers from a hand of seven cards with-                 (where John and Mary are produced from Agent and Patient
out being able to remove jokers from a deck of fifty-three,                by other production rules)—systematicity of representation.
recursion-related capacities are further instances (see below)             Likewise, a classical system has the capacity to infer John
of the systematic nature of human cognition.                               as the lover in John loves Mary if and only if it has the ca-
   Systematicity is a property of human cognitive architec-                pacity to infer Mary as the lover in Mary loves John given
ture (i.e., the basic processes and modes of composition that              a common process that is sensitive to the syntactic struc-
                                                                           ture whereby the lover constituent is represented by the first
    1 This paper is a short version of Phillips and Wilson (2012).         token—systematicity of inference. And, again, the capacity
                                                                       869

to assign the semantic content of John being the lover of Mary             any component processes, and so do not provide a basis
to the representation John loves Mary if and only if there is              for systematicity, even though systematicity could be sup-
the capacity to assign the semantic content of Mary being the              ported when both tasks are implemented in either the first
lover of John to the representation Mary loves John derives                style only, or the second style only. Notice that we are not
from the tokening principle (above) mediating classical repre-             unfairly stressing classical theory by apportioning capacity
sentations and processes: the process for juxtaposing tokens               at the level of constituents—systematicity concerns “molec-
(symbols) John, loves, and Mary to form John loves Mary                    ular”, not “atomic” capacities (Fodor & Pylyshyn, 1988).
with corresponding semantic content is the same process that               Rather, given constituent capacities lower and higher, clas-
is used to form Mary loves John with corresponding content.                sical theory admits two independent compositional forms, as
   Classical compositionality would seem to provide an el-                 the example illustrates.
egant explanation for systematicity with regard to recursive                  In this paper, we extend our category theory explanation
capacities, even though it fails to provide a full account of              to recursive capacities using universal constructions called an
systematicity generally (Aizawa, 2003).2 For recursive defi-               initial F-algebra and a final F-coalgebra, which have been
nitions, like the deck of cards, one self-referencing rule typ-            extensively developed in computer science as a theoretical ba-
ically covers all cases (bar the terminating case, such as the             sis for recursive computations (Manes & Arbib, 1986). Our
empty deck). For example, removing jokers from a single                    previous work (Phillips & Wilson, 2010, 2011) dealt with
hand, or an entire deck invokes the same component process.                non-recursive domains using a kind of universal construc-
The two tasks only differ in the number of recursive steps.                tion called adjoint functors—a functor is a way relating cate-
                                                                           gories, which can be viewed as a way of constructing objects
Classical, but not systematically recursive                                and morphisms from one category based on those in another.
However, the classical explanation with regard to recursive                The current work uses endofunctors, which relate categories
capacities still suffers the same general problem that it suffers          to themselves, hence their relevance to recursion.
for non-recursive capacities. To illustrate, suppose one card
game requires removing the lowest value card in the hand                              Category theory: F-(co)algebras
dealt, while another card game requires removing the highest
                                                                           A category theory treatment of recursion starts with the con-
value card. Suppose the following recursive procedure, low-
                                                                           cept of an F-algebra constructed on an endofunctor F.3
est, for identifying the lowest valued card in a deck of cards
(containing at least one card):                                            Definition (F-algebra). For an endofunctor F : C → C, an F-
                                                                           algebra is a pair (A, α), where A is an object and α : F(A) → A
             lowest(c : cs) = lower(c, lowest(cs))                         is a morphism in C.
              lowest(c : [ ]) = c                                             For example, if F(A) = A × A, then the addition operator
                                                                           + : A × A 7→ A is an F-algebra.
where a deck of cards c : cs is represented by a recursively               Definition (F-algebra homomorphism). An F-algebra ho-
defined list with c as the top card and cs as the remaining                momorphism h : (A, α) → (B, β) is a morphism h : A → B (in
deck, [ ] is the empty deck, and lower returns the lower of two            C) such that the following diagram commutes:
cards. Suppose, also, the following classical non-recursive
                                                                                                               α    /A
procedure, highest, for identifying the highest valued card:                                          F(A)                                     (1)
  highest(cs) =         (i, high) ← (0, undefined)                                                  F(h)                h
                                                                                                                     
                        while i < n do                                                                F(B)          /B
                                                                                                               β
                             (i, high) ← (i + 1, higher(high, csi ))
                        return high
                                                                           That is, h ◦ α = β ◦ F(h).
where deck cs is represented by an array of n cards with po-               Definition (F-algebra category). For endofunctor F : C →
sition indexed by i (i.e., csi is the ith card), high maintains            C, an F-algebra category Alg(F) has F-algebras (A, α) for
a representation of the (currently) highest card, higher re-               objects, and F-algebra homomorphisms h : (A, α) → (B, β)
turns the higher of two cards (undefined is some value guar-               for morphisms.
anteed to be lower than any card), and ← indicates variable-               Definition (Initial algebra). An initial F-algebra (A, in),
value assignment. Clearly, the two procedures do not share                 also called initial algebra, is an initial object in the category
    2 Classical theory fails to provide a complete explanation because         3 We omit definitions of category, functor, and initial object (see
one can construct syntactically compositional systems that support         Phillips & Wilson, 2010, 2011, for introductions tailored to the sys-
some but not all members of a group of systematically-related cog-         tematicity problem—short versions appear in CogSci10/CogSci11
nitive capacities. Additional (ad hoc) assumptions are needed to           proceedings). An example category is Set, whose objects are sets,
derive only those classical cognitive architectures that support sys-      morphisms are functions, and composition of morphisms is function
tematicity (Aizawa, 2003). This problem echoes the one originally          composition. Functors are like generalized functions, but map mor-
raised against connectionism as a theory of cognitive architecture         phisms to morphisms as well as objects to objects. An endofunctor
(Fodor & Pylyshyn, 1988; Fodor & McLaughlin, 1990).                        is a functor whose domain and codomain are the same category.
                                                                       870

of F-algebras Alg(F). I.e., there exists a unique F-algebra                          max(2, max(1, max(3, 0))) = 3. Since the two computations
homomorphism from (A, in) to every F-algebra in Alg(F).                              have the morphism [empty, cons] as the common component,
Definition (Catamorphism). A catamorphism h : (A, in) →                              this arrangement accounts for systematicity with respect to
(B, β) is the unique F-algebra homomorphism from initial F-                          these capacities. Since the catamorphisms are uniquely de-
algebra (A, in) to F-algebra (B, β). That is, h ◦ in = β ◦ F(h),                     termined, we have an account of systematicity without further
and the uniquely specified h for each such β is denoted cata β                       (ad hoc) assumptions.
(i.e., h = cata β). In Diagram 1, replace α with in and h with
cata β for a commutative diagram indicating a catamorphism.                               Systematicity: language-related capacities
    Hence the importance of initial algebras to the systematic-                      In this domain, we use an artificial grammar (for arithmetic
ity of recursive capacities: every algebra (process) factors                         expressions) to illustrate our explanation for systematicity
through an initial algebra in a category Alg(F) that has one.                        with regard to language-related capacities. Artificial gram-
    Duals: F-algebra, initial algebra, and catamorphism have                         mars are often used, because their forms are more easily
dual constructs called F-coalgebra, final coalgebra, and                             adapted to the question at hand. Up to this point, we have ad-
anamorphism (respectively), which we shall also use.                                 dressed systematicity with respect to inference, e.g., why the
                                                                                     capacity to infer the smallest list item is systematically related
         Systematicity: List-related capacities                                      to the capacity to infer the largest list item—systematicity
Returning to the example raised as a problem for classical                           of inference. This aspect of systematicity assumes that the
theory: a common task is to select the smallest or largest item                      cognitive system also has the capacity to systematically rep-
in a collection. Systematicity, in this case, means that if one                      resent the entities from which such inferences are made—
has the capacity to distinguish the relative sizes of items, and                     systematicity of representation. Here, we also provide a cat-
one has the capacity to identify the smallest item in a list, then                   egory theory explanation for systematicity of representation,
one also has the capacity to identify the largest item in a list.                    using the closely related, dual notion of an F-coalgebra.
(Notation: 1A is the identity morphism for A; Iv is a constant
                                                                                     Arithmetic expressions: systematicity of inference
function returning v.) List-related capacities are constructed
from the functor FA : S 7→ A × S, f 7→ 11 + 1A × f . (φ : x 7→ y                     The example in this section is based on Hutton (1998), but
means φ(x) = y.) The algebras are the pairs (S, [Iv , f ]). An                       adapted to model cognitive capacity for evaluating numer-
initial algebra for lists is the pair (L, [empty, cons]), where                      ical expressions. The category of F-algebras that includes
L is a set of lists, and [empty, cons] : 1 + A × L → L is the                        language-related capacities is constructed from the functor
list-constructing morphism, consisting of the constant func-                         FA : S 7→ A + S × S, f 7→ 1A + f × f . The F-algebras for
tion empty : 1 → L for constructing the empty list [ ], and                          the category Alg(FA ) are the pairs (S, [ f , g]), where [ f , g] :
the function cons : A × L → L; (a, l) 7→ a · l for constructing                      A + S × S → S, f : A → S is a unary function, and g : S × S → S
the list with element a ∈ A prepended (·) to list l ∈ L. Here                        is a binary function. An initial algebra in this category is
1 + A × L is the disjoint union of a 1-element set with the                          (T, [leaf , branch]), where T is the set of trees of type A,
cartesian product of A and L. If, for example, A is the natu-                        [leaf , branch] : A + T × T → T , leaf : A → T ; a 7→ hai re-
ral numbers N, then L is the set of all finite natural number                        turns a tree consisting of a single leaf a ∈ A, and branch :
lists. Catamorphisms from this initial algebra have the form                         T × T → T ; (l, r) 7→ hl, ri returns a tree consisting of a left
foldL[Iv , f ] : L → S, where foldL[Iv , f ] :                                       branch l and a right branch r, where l, r ∈ T . For exam-
                                                                                     ple, a binary tree of numbers hh1i, hh2i, h3iii has a leaf 1 as
                              [ ] 7→ v                                               its left branch, and a tree, with left leaf 2 and a right leaf
                         (a, l) 7→ foldL[I f (v,a) , f ](l)                          3, as its right branch. A catamorphism from initial alge-
                                                                                     bra (T, [leaf , branch]) to an arbitrary F-algebra (S, [ f , g]) in
The catamorphism for identifying the smallest number is                              Alg(FA ) is the recursive function foldT (i.e., fold for trees),
foldL[1∞ , min], where min : (x, y) 7→ x, if x ≤ y, else y returns                   defined as follows. The (higher-order) function foldT takes a
the smaller of two items, indicated in commutative diagram                           unary function f : A → S and a binary function g : S × S → S
                                                                                     and returns the recursive function foldT [ f , g] : T → S, where
                                       [empty, cons]
                     1+N×L                                  /L                                         hai 7→ f (a)
   11 + 1N × foldL[I∞ ,min]                                     foldL[I∞ ,min]                       hl, ri 7→ g(foldT [ f , g](l), foldT [ f , g](r))
                                                             
                     1+N×N                                  /N                       and T is a set of trees of type A, indicated in diagram
                                         [I∞ ,min]
                                                                                                                               [leaf , branch]
                                                                             (2)                              A+T ×T                                 /T
E.g., foldL[I∞ , min]([2, 1, 3]) = min(2, min(1, min(3, ∞))) = 1.
By replacing min in Diagram 2 with max : (x, y) 7→ x, if x ≥                           1A +foldT [ f ,g]×foldT [ f ,g]                                   foldT [ f ,g]
y else y, and ∞ with 0 (or, −∞ for lists of integers or reals),                                                                                       
                                                                                                              A+S×S                                  /S
we have the catamorphism that corresponds to identifying                                                                            [ f ,g]
the largest number. For example, foldL[I0 , max]([2, 1, 3]) =                                                                                                       (3)
                                                                                 871

   Suppose participants are given arithmetic expressions in-            for retrieving a pair of left and right subtrees from a branch.
volving a particular operator, say, addition, e.g., (1 + 2) +           The dual category CoAlg(FA ) has F-coalgebras (S, (p →
(2+3), which they are required to evaluate. Given that partic-           f , g)) as objects, and F-coalgebra homomorphisms as mor-
ipants can correctly evaluate such expressions, there is a host         phisms. The anamorphism associated with this final coalge-
of other capacities that are also afforded provided that they           bra is called unfoldT (i.e., unfold for trees), defined recur-
have some other basic knowledge. For example, given knowl-              sively as unfoldT (p → f , g) : S → T
edge of another binary operator, say, subtraction, participants
can also evaluate the related expression (4 − 2) − (2 − 1) as             s 7→ h f (s)i                                                 if p(s)
1. The specific catamorphism for the addition case is given               s 7→ hunfoldT p? (p1 ◦ g(s)), unfoldT p? (p2 ◦ g(s)i ¬p(s)
by replacing A in Diagram 3 with the set of numbers N, f
with identity morphism 1N , and g with addition +. For the              where p? abbreviates (p → f , g). The final coalgebra and
case of subtraction, the binary operator (+) for addition is            anamorphism are indicated in commutative diagram
replaced with (−) in Diagram 3. Hence, the second task is
                                                                                                p→ f ,g
computed as foldT [1N , (−)]. The universal construction com-                        S                           / A+S×S
mon to these two capacities is the morphism [leaf , branch].
                                                                          unfoldT p?                                   1A +unfoldT p?×unfoldT p?
So, the explanation for systematicity is essentially the same
                                                                                                                    
as the explanations we provided for list- and number-related                        T                          / A+T ×T
                                                                                        ph i →fmleaf ,fmbranch
capacities, albeit based on a different underlying functor—
the capacities for evaluating expressions involving addition                                                                                  (4)
and subtraction contain [leaf , branch] as the common factor.                Diagram 4 indicates the general form of the anamorphism
                                                                        from which we specify a particular p? (i.e., p → f , g) for our
Arithmetic expr.: systematicity of representation                       domain of arithmetic expressions. That is, we need to define
Evaluating trees is an example of systematicity of inference            the test function p : L → Bool, where Bool = {True, False}
(Fodor & Pylyshyn, 1988; Aizawa, 2003; Phillips & Wil-                  that determines whether an expression indicates a simple
son, 2011). However, such expressions are not given to the              (value) or complex expression, and associated functions f :
cognitive system in tree-form. Typically, such trees are as-            L → N and g : L → L×L for transforming simple and complex
sumed to be constructed from an input (list of characters) by           expressions into numbers and expression pairs (respectively).
another process. The input may take on several different for-                Specifications of f and g (in Diagram 4) are obtained from
mats: e.g., numeric/symbolic, as in “1+(2+3)”, or word form,            case analysis. Examples of simple expressions, which indi-
as in one plus (two plus three), which correspond to the same           cate values, are: “1”, “(2)”, and “((3))”, i.e., any well-formed
tree. Again, these two forms are systematically related: one            expression that does not contain the “+” character. A complex
has the capacity to represent the expression “1+(2+3)” if and           expression is any well-formed expression that is not simple.
only if one has the capacity to represent the expression one            So, p is the function isVal : l 7→ “+” ∈     / l. Since f is associ-
plus (two plus three) assuming, of course, a person knows               ated with p(l) being true, we require a function to convert
that one, two and three denote the same things as 1, 2 and              a string into a (internal) representation for the correspond-
3 (respectively), and plus denotes the same thing as +. This            ing number, i.e., f is the function str2num : L → N. Finally,
form of systematicity is called systematicity of representation         we need a function g for complex expressions. Examples of
(Fodor & Pylyshyn, 1988; Aizawa, 2003; Phillips & Wilson,               complex expressions include: “1+2”, “1+(2+3)”, “(1+2)+3”,
2011). In this section, we show how systematicity of repre-             “(1+2)+(3+4)”, and so on. The purpose of g is to split an ex-
sentation is addressed using coalgebras.                                pression into two subexpressions, one corresponding to the
   Constructing trees from lists is achieved by a dual construc-        left branch of the tree, and the other to the right branch.
tion called an F-coalgebra (Hutton, 1998). The explanation              That is, g must split the expression at the topmost opera-
for systematicity in this case proceeds in a “dual” manner:             tor into two subexpressions containing the strings before and
i.e., every morphism in a category of F-coalgebras with a ter-          after the “+” symbol, after stripping off the outer brackets.
minal (dual to initial) object, called a final coalgebra (dual to       Identifying the split point is also determined by case analy-
initial algebra) is composed of a unique anamorphism (dual              sis: Basically, the split point is the first instance of “+” in
to catamorphism) and a common final coalgebra.                          the absence of an unmatched right bracket “)”. So, one sim-
   Final coalgebras derive from their dual definitions of initial       ply maintains a counter, starting from 0 (i.e., no unmatched
algebras in the category of F-algebras Alg(FA ) on the func-            brackets, or top level), which is incremented/decremented on
tor FA : Set → Set; S 7→ A + S × S, f 7→ 1A + f × f . A final           every occurrence of a left/right bracket, when read from left
coalgebra in this category is (T, (ph i → fmleaf , fmbranch)),          to right. So, g is the function split : L → L × L. Thus, the
where conditional ph i → fmleaf , fmbranch consists of a con-           function for parsing expressions into trees is the anamorphism
dition ph i : T → Bool that tests whether t ∈ T is a leaf (i.e.,        unfoldT(isVal → str2num, split).
t = hai, a ∈ A), or a branch (i.e., t = hl, ri, l, r ∈ T ), and as-          Systematicity of representation (in this example, construct-
sociates functions fmleaf : T → A, hai 7→ a, for retrieving a           ing trees) is obtained in the same way as systematicity of in-
value from a leaf, and fmbranch : T → T × T, hl, ri 7→ (l, r),          ference (“destructing” trees). To represent the same tree from
                                                                    872

the expressions in word form, one simply replaces the argu-           ing with a right-fold version of list fold means keeping all
ment isVal → str2num, split as appropriate. For example, the          list items in memory (if presented once only), so systematic-
function str2num is replaced with, say, word2num which con-           ity would not extend beyond lists of more than a few items.
verts numbers in word form (e.g., “one”, “two”, etc.) to their        Such cases are generally not regarded as evidence against the
corresponding internal representation of number. In any case,         systematicity property—human cognition is ceteris paribus
the resulting anamorphism factors through the same universal          (e.g., memory requirements being the same) largely system-
morphism, i.e., ph i → fmleaf , fmbranch from Diagram 4.              atic (see McLaughlin, 2009). Nonetheless, a more complete
   Given initial algebra in : F(A) → A in a category Alg(F),          theory will address both aspects of cognition. Category the-
the corresponding final coalgebra fin : A → F(A) is guaran-           ory may also provide independent principles for performance,
teed to exist, because F(A) ∼= A, so in has as inverse fin. Thus,     since cognitive development-related limits in children were
further (ad hoc) assumptions are not required to guarantee            identified with the arity of the (co)product underlying the
a correspondence between expressions and evaluations since            task (Phillips, Wilson, & Halford, 2009): e.g., the ability of
they are indivisibly bound by the (final) initial (co)algebra.        children older than the median age of five years to perform
By contrast, classical theory assumes that the processes for          transitive inference and class inclusion in the more difficult
constructing syntactically compositional representations and          condition versus children younger than five was related to
the processes for systematically transforming those represen-         (co)product arity, i.e., binary versus unary (co)products. Note
tations correspond (Phillips & Wilson, 2011).                         that here, too, the difference in “complexity” of the endofunc-
                                                                      tors for number (no/unary product of functors, not given), list
                          Discussion                                  (binary product of constant and identity functors) and tree
Our explanation in regard to recursive domains employs the            (binary product of two identity functors). However, perfor-
same category theory construct (i.e. universal construction)          mance related differences are beyond the scope of our theory
as our previous explanations for (quasi-)systematicity in re-         as it currently stands.
gard to non-recursive domains (Phillips & Wilson, 2010,                  Systematic versus non-systematic cognition: Category the-
2011), albeit with different kinds of functors: here, for re-         ory also provides a principled means for joining two cognitive
cursive domains, the universal constructions involved endo-           (sub)systems via (co)products of categories, where one cate-
functors (i.e., where the domain and codomain are the same            gory models systematic cognitive capacity and the other non-
category), whereas for non-recursive domains, the universal           systematic capacity, and (say) the coproduct category models
constructions involved adjoint functors (which are reciprocat-        both. However, as Aizawa (2003) explains, the required ex-
ing, though not necessarily inverse, functorial maps between          planatory standard for hybrid theories is higher, because one
categories that are not necessarily the same. Every composi-          must also explain why/when component theories are invoked.
tion of left and right adjoints is an endofunctor, but not every      A possible reason is efficiency. A primitive form of addition
endofunctor can be decomposed into a pair of adjoint func-            is supported (systematically) by the category of F-algebras
tors. So, having some (primitive) form of systematicity over          that included number-related capacities via foldN (not pre-
a recursive domain does not imply having systematicity for            sented here), where the number of iterations is proportional
non-recursive domains. Nor, for that matter, does having the          to the size of the addends. The time needed to add numbers
systematicity property for one recursive domain (e.g., num-           can be reduced by memorizing the addition table for small
bers) imply the having the systematicity property for another         numbers, which is what children are taught to do. However,
recursive domain (e.g., lists), when the universal construc-          addition via memorized associations is not a systematic pro-
tions involve functors not related by a natural isomorphism           cess: one can memorize part of a table without memorizing
(Manes & Arbib, 1986)—this distinction also applies to non-           the other part; this is an analog of the phrase-book example
recursive domains. This functorial distinction has implica-           in language (Fodor & Pylyshyn, 1988). Utility may drive the
tions for comparative and developmental psychology (dis-              cognitive system to employ a faster, but non-systematic pro-
cussed later).                                                        cess, but it is also outside the scope of our current theory.
Limitations                                                           Perspective
Our theory may be incomplete at two points: one point is              At the core of our category theory explanation for system-
where competence meets performance, such as when sup-                 atic recursive capacity is a special pair of dual constructions:
posed systematically related capacities span memory or cog-           an (final) initial (co)algebra in a category of (co)algebras on
nitive complexity limits. The other point is where systematic         a polynomial functor F. Although one can reverse the di-
cognition meets non-systematic cognition: not all cognition is        rection of any collection of arrows to form a dual, such du-
regarded as systematic; idioms (e.g., John kicked the bucket—         als may not exist in the category of interest (e.g., some cate-
i.e., he died—is not systematic with Mary kicked the bucket           gories have initial objects but no final objects). Yet, for cat-
[with her foot]) are a paradigm (Fodor & Pylyshyn, 1988).             egories of (co)algebras on a polynomial functor (final) initial
We discuss our theory in the context of both cases.                   (co)algebras are guaranteed to exist (Manes & Arbib, 1986),
   Competence versus performance: In the case of lists where          and an initial algebra in : F(A) → A is guaranteed to have an
the morphism f is not associative (e.g., subtraction), comput-        inverse fin : A → F(A), because the component objects are
                                                                  873

isomorphic (i.e., A ∼= F(A)), which constitutes a final coalge-      better than lay foundations on the shifting sands of syntax.
bra for the domains we have investigated. So, the systematic
relationship between representation and inference is guaran-                             Acknowledgments
teed without further (ad hoc) assumptions, in contrast to the        This work was supported by a Japanese Society for the Pro-
classical explanation where the link between the two is just         motion of Science Grant-in-aid (22300092).
assumed (Phillips & Wilson, 2011). Notice that this dual rela-
tionship between systematicity of representation and system-                                  References
aticity of inference is more general (and more useful) than an       Aizawa, K. (2003). The systematicity arguments. New York:
inverse. In the arithmetic expressions example, lists were rep-        Kluwer Academic.
resented as trees (systematicity of representation), but trees       Carey, S. (2009). The origins of concepts. New York, NY:
were evaluated as numbers (systematicity of inference). This           Oxford University Press.
form of duality goes beyond the simple inverse relationship          Corballis, M. C. (2007). Recursion, language, and starlings.
between sentence recognition and generation found in pars-             Cognitive Science, 31, 697–704.
ing/production rules in a classical approach to language.            Fodor, J. A. (1975). The language of thought. New York,
   The capacity for recursion has been a contentious issue             NY: Crowell.
in the broader interests of cognitive science, which includes        Fodor, J. A., & McLaughlin, B. P. (1990). Connectionism and
comparative and developmental psychology. Some argue that              the problem of systematicity: Why Smolensky’s solution
recursion is specific to humans and depends on language                doesn’t work. Cognition, 35, 183–204.
(Hauser, Chomsky, & Fitch, 2002); more particularly, a fully         Fodor, J. A., & Pylyshyn, Z. W. (1988). Connectionism and
inductive (recursive) basis for number is specific to adults           cognitive architecture: A critical analysis. Cognition, 28,
and distinct from infants’ non-inductive basis (Rips, Bloom-           3–71.
field, & Asmuth, 2008). In contrast, others claim a human            Gelman, R., & Butterworth, B. (2005). Number and lan-
language-like capacity for recursion in songbirds (Gentner,            guage: how are they related? Trends in Cognitive Sciences,
Fenn, Margoliash, & Nusbaum, 2006) (but, see Corballis,                9(1), 6–10.
2007), and that adult understanding of number (in its fully          Gentner, T. Q., Fenn, K. M., Margoliash, D., & Nusbaum,
induced form) is founded on a more primitive infant con-               H. C. (2006). Recursive syntactic pattern learning by song-
ception (Carey, 2009). See also Gelman and Butterworth                 birds. Nature, 440(7088), 1204–1207.
(2005), for a review of the debate over the link between num-        Hauser, M. D., Chomsky, N., & Fitch, W. T. (2002). The
ber and language. Our category theory treatment of recur-              faculty of language: what is it, who has it, and how did it
sive cognitive capacities provides a different perspective on          evolve? Science, 298(5598), 1569–1579.
this issue: specifically, the particular systematic capacities       Hutton, G. (1998). Fold and unfold for program semantics. In
for recursion depend on the underlying functor, not a gen-             Proceedings of the 3rd ACM SIGPLAN International Con-
eral capacity for recursion, as such. In particular, one can           ference on Functional Programming.
have a basic recursive capacity for number without having            Manes, E. G., & Arbib, M. A. (1986). Algebraic approaches
a full-blown capacity for language, because the functor un-            to program semantics. New York, NY: Springer-Verlag.
derlying recursive number-related capacities does not pro-           McLaughlin, B. P. (2009). Systematicity redux. Synthese,
vide a systematic basis for recursive language-related capac-          170, 251–274.
ities, though by our account language-related recursive ca-          Phillips, S., & Wilson, W. H. (2010). Categorial composition-
pacities afford number-related recursive capacities. Analysis          ality: A category theory explanation for the systematicity
of the songbird evidence (Gentner et al., 2006) for supposed           of human cognition. PLoS Computational Biology, 6(7),
center-embedded recursion suggested that these birds were              e1000858.
using a simple counting strategy (Corballis, 2007), which ac-        Phillips, S., & Wilson, W. H. (2011). Categorial composi-
cords with our F-(co)algebraic basis for recursion in cogni-           tionality II: Universal constructions and a general theory of
tion, where simple counting involves a fold for numbers, not           (quasi-)systematicity in human cognition. PLoS Computa-
trees. Thus, other species (and infants) can have elementary           tional Biology, 7(8), e1002102.
recursive capacities without a full-blown capacity for number        Phillips, S., & Wilson, W. H. (2012). Categorial composition-
and language as available in adult humans.                             ality III: F-(co)algebras and the systematicity of recursive
                                                                       capacities in human cognition. PLoS ONE, 7(4), e35028.
   The classicist’s approach to cognitive architecture is funda-     Phillips, S., Wilson, W. H., & Halford, G. S. (2009). What do
mentally limited not in advocating syntax, but in placing syn-         Transitive Inference and Class Inclusion have in common?
tax at the foundation of their theory. Given the often ad hoc          Categorical (co)products and cognitive development. PLoS
and idiosyncratic choices that go into programming language            Computational Biology, 5(12), e1000599.
design, computer scientists in recent decades have turned to         Rips, L. J., Bloomfield, A., & Asmuth, J. (2008). From nu-
category theory for a deeper syntax-free understanding of the          merical concepts to concepts of number. Behavioral and
principles of computation. Cognitive science, as couched               Brain Sciences, 31(6), 623–687.
within the framework of computationalism, can likewise do
                                                                 874

