UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
Mathematical Modeling of a Biological Odometry

Permalink
https://escholarship.org/uc/item/8kc6f45z

Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 34(34)

Author
Danafar, Somayeh

Publication Date
2012-01-01
Peer reviewed

eScholarship.org

Powered by the California Digital Library
University of California

Mathematical Modeling of a Biological Odometry
Somayeh Danafar (somayeh@idsia.ch)
Istituto Dalle Molle di Studi sull'Intelligenza Artificiale (IDSIA),
Galleria 2, Manno-Lugano, 6928, Switzerland

Abstract
Flexible and robust biological navigation are role models for
robots. Biological odometry data from experiments with
human subjects are explained by our novel mathematical
model of biological path integration. We show the
equivalence of neural representations of Polar and Cartesian
egocentric path integration.
Keywords: Odometry;
Mathematical modeling.

Path

integration;

Egocentric;

1 Introduction
Navigation can be defined as a process that answers the
following questions (a) “where am I?” (b) “where are other
places with respect to me?” (c) “how do I get to other places
with respect to me?” (Levitt and Lawton, 1990). Navigation
is different from other forms of spatial behavior such as
exploration, or foraging, in that there is an explicit reference
to a goal location (Franz & Mallot, 2000). While many
animals normally use landmarks or familiar positions to
navigate, arthropods, many mammals and humans can reach
their goal relying solely on their own locomotion signals.
This type of navigation is known as path integration in
biology or odometry in robotics.
Path integration has been studied extensively in desert
arthropods and mammals (Weber et al., 1997; Séguinot et
al., 1998; Etienne & Jeffery, 2004; Merkle, 2007). For
humans, path integration is normally studied through
triangle completion experiments (e.g. Riecke et al.). Wiener
and Mallot (2006) studied visual path integration on human
subjects using more complex paths with a greater number of
segments and turning angles.
In robotics, sensory inputs are used to build and update a
global representation of the environment. Thereafter, motor
actions are derived by an inference procedure from this
representation (McKerrow, 1991). The flexibility and
navigation performance of biological organisms (e.g.
migrating birds, arthropods) has motivated robotics
researchers to adopt biologically-inspired approaches in
order to achieve more accurate and robust navigation.
Viewed in the opposite direction, such robots can help us to
understand the behavior and biomechanics of biological
systems. For instance, Möller et al. (1998) used an
autonomous agent to study path integration in a type of
desert ant. Lambrinos et al. (1997) studied the encoded
signals of robot’s wheels to estimate the moved distance.
Polarized light was used as an allothetic signal. The
navigation ability of a mobile robot using only visual

sensory input was investigated by Chahl and Srinivasan
(1996). Weber et al. (1997) studied image motion
information to estimate the travelled distance by the robot.In
this paper, we address the problem of odometry through the
mathematical modeling of a path integration system which
matches the results from experiments conducted on human
subjects (Riecke et al., 2002). In this way, we investigate
what is happening at the neuronal level during the execution
of the task which can later be used in biomimetic robots.
Generally speaking mathematical models of path
integration can be divided in two types: geocentric and
egocentric. In the present work, we focus on the egocentric
model, described in section 2.1. Section 2.2 defines different
sources of noise that arise in path integration. In section 2.3.
the experimental data obtained from path integration with
human subjects is described. In section 2.4 the mathematical
model of this system is explained. To find the noise
parameters which define the best mathematical model
according to the experimental data, we need to solve an
optimization problem which we elaborate on in section 3.
The results are provided in section 4.

2 Path Integration (Odometry)
Mittelstaedt and Mittelstaedt (1980) established the term
“path integration” and were the first to study it from a
computational standpoint. They hypothesized that the
signals derived from locomotion are used continuously to
estimate the so-called global vector (travelled distance).
This vector connects the reference point (e.g. the nest
position) to the current position of the agent (e.g. the goal or
target point) in a fixed coordinate system. These models of
path integration are known as Geocentric models.
In contrast, Egocentric models center the coordinate
system on the body of the moving agent. The agent
computes and updates the sensory signals pertaining to its
position and orientation in each time step (Gallistel, 1990;
Benhamou and Séguinot, 1995). This approach is
computationally efficient and particularly important in e.g.
ants, given their limited computational resources.
Both models can be defined in terms of Polar and
Cartesian coordinates. The models investigated here are
based on an egocentric computation to formulate the path
integration task conducted in an experiment on human
subjects.

1446

2.1 Egocentric Models
For path integration in egocentric models, two velocities
are measured, the forward (translational) velocity, v, and the
angular velocity, ω (Figure 1). Egocentric related
differential equations formulated by Banhamou and
Séguinot (1995) are obtained considering small time steps.
In the polar coordinates they are,

dr
= −ν cos δ,
dt

(1)

dδ
sin δ
=ν
− ω.
dt
r

(2)

The differential equations in Cartesian coordinates (by
Banhamou and Séguinot , 1995) are,

dx
= −ν + ω y,
dt

(3)

dy
= −ω x.
dt

(4)

Figure 1: Egocentric path integration schema. The global
vector, G, represented in Cartesian coordinates as G =(X, Y), and
the polar coordinates G=(r,δ) (Merkle, 2007).
Sensors measure the actual translational speed υ and rotational velocity ω

υ
ω

This egocentric model linearly applies the parameters v, and
ω, as additive or multiplicative terms.

Vestibular organs
Proprioception
Motor reference
Optic flow
Perception of time

2.3 Experimental Data
To examine whether only vestibular cues are required for
navigation, Riecke et al. (2002) conducted experiments on
spatial orientation tasks. The experiments were conducted in
the 180˚ Virtual Reality (VR) environment lab, with a halfcylindrical screen, where the participant is seated behind a

During motion
the agent uses path
integration
to
update the position

sensor

r
δ

2.2 Noise Type
Homing in mammals and arthropods is imperfect. The lack
of familiar positions or salient objects in identifying the
starting position produces errors during path integration
(Riecke et al., 2002). There are two types of errors in path
integration that should be distinguished: random and
systematic errors. Merkle (2007) mentioned that “there is
evidence that random errors can originate from the
inaccurate measurement of angles or distances, whereas
systematic errors probably arise at the neural level of the
organism”.
We examine the effect of both types of noise in path
integration which is modelled by Monte-Carlo simulation in
each unit of path movement. The first type of noise affects
the sensors which measure v and ω. This is considered due
to the imperfectness of sensors. As the agent moves, it uses
path integration to update its position across movement
steps in relation to the reference point (nest position). The
second type of noise is added to these calculated values to
obtain the agent’s position (Figure 2).

υ
π
ω

The coordinates of the nest
are stored in the working
memory (for example in polar
coordinates) Noise is applied to
these values

Working memory

Figure 2: The types of noise in the navigation system.
table in the centre of the screen with a three button mouse ,
and is presented with visual cues. Pressing the middle
button was used for forward translation and releasing for
ending the motion. The left and right buttons were used for
left or right rotations, respectively. Since there is minimum
proprioceptive feedback in the button-based motion model,
it is normally used as a model in VR related tasks. The
experimental landscapes were streets, trees and houses. In
each trial participants were presented with yellow and blue
light beams, respectively, as the first and the second goal.
The goals disappeared on contact. After the second goal
disappeared there was a 2 second period of darkness. The
task was then to return to the starting position accurately.
The experiment was also done without reliable landmarks in
a 3D field of blobs and with the naturalistic town
environment and temporal landmarks. The reader is referred
to Reicke et al. (2002) for a more detailed description.
Reicke et al. (2002) chose triangle completion since this
task is “the simplest nontrivial combination of translations
and rotations”. Each participant was presented with sixty
isosceles triangles in random order; five different turning

1447

angles (30˚, 60˚, 90˚, 120˚, and 150˚) and two turning
directions (left or right) which were repeated six times.
Experimental results showed that participants could use
their proprioceptive signals to estimate their travelled
distance and turn back to the starting point with some bias
(Figure 3). If we look at the homing trajectory end points for
each participant over all his/her trials in Figure 3, we end up
with a distribution over these sets of end points. We mainly
work with this distribution in the next sections.

compared the home-ending distributions by means of a
Homogeneity test (section 3.1). Determining the best noise
parameter that provides the distribution closest to the real
home-ending distribution of experimental data required
solving an optimization problem (section 3.2). An example
simulated path from our mathematical model, and the homeending distributions are depicted in Figure 4.

3 Mathematical Modeling
As in the experiment above, we model movement along
isosceles triangles with 20 units and five different rotation
angles between equal sides of a triangle. After passing one
side of a triangle and reaching the first goal, the agent
rotates and crosses the second side to reach the second goal
and now it has to compute the third side of triangle. We
used Monte Carlo simulations to simulate the path
integration equations of section 2.1 and the noise of section
2.2. Sensor noise was added by Monte Carlo simulation as
follows:

ν ' = v + N (α | ν | + α | ω |) ,
ω' = ω + N(α | ν | +α | ω |) ,
1

2

3

4

(5)

(7)
(8)
(9)

Suppose {x1, …, xm} and {y1,…,yn} are two-samples
drawn i.i.d. from distributions P and Q, respectively, a twosample test tests whether P ≠ Q (hypotheses are, H0: P=Q,
against the alternative H1: P ≠ Q). We used Maximum Mean
Discrepancy (MMD; Gretton et al., 2007) as our
homogeneity test.
Theorem1. Let (X,B) be a metric space, and let P, and Q
be two Borel probability measures defined on X. The kernel
function k: X× X R embeds the points x ∈ X into the
corresponding reproducing kernel Hilbert space H. Then P
= Q if and only if MMD[P,Q] =0, where
MMD[ P, Q ] := E [ k ( x ,.)] − E [ k ( y,.)] ,
p

where

(10)

or in an absolute form, eqs. 11, 12 (Cartesian coordinates),
13 and 14 (Polar coordinates).

X ' = X + N (σ )
Y ' = Y + N (σ )
r ' = r + N (σ )
δ ' = δ + N (σ )

3.1 Homogeneity Testing to Compare the
Distributions

(6)

where v' and ω' are the noisy sensor values, and α1, α2, α3
and α4 are user-defined free parameters.
The second type of noise was added to the calculated
parameters which define the position of the agent in Polar or
Cartesian coordinate systems. The noise can be added by
Monte Carlo simulation in two ways: in a partial form, eqs.
7, 8 (Cartesian coordinates), 9 and 10 (Polar coordinates),

X ' = X + N(σ ).X
Y ' = Y + N (σ ).Y
r ' = r + N (σ ).r
δ ' = δ + N (σ ).δ

Figure 4: Left: Monte Carlo simulation generated noise.
The agent’s rotation angle of the agent is 45 degrees. Right:
the red ellipse indicates the home-ending distribution of
experimental data, the blue ellipse is the one obtained by
Monte Carlo simulation.

.

H

Q

H

represents the RKHS norm.

For a predefined significance level (e.g. 5%), MMD
values closer to zero indicate higher similarity between the
distributions.

3.2 Optimization
(11)
(12)
(13)
(14)

Tuning the noise parameters of the Monte Carlo
simulation yields different ending distributions around the
reference point of the modelled triangular path.
To evaluate the simulated results predicted by the
mathematical model and the real experimental data, we

To find the noise parameters providing the modeled
distribution closest to real home-ending distributions, we
need to solve an optimization problem,i.e. find the maxima
or minima of a so-called objective function. If the objective
function is differentiable, we can use derivative-based
methods to solve the optimization problem. Direct search
methods are used in cases in which we do not have explicit
information about the objective function, or are unable to
compute the derivatives. The Nelder-Mead simplex method
(Lagarias et al., 1998) is a direct search method which is
widely used to optimize multidimensional objective
functions with no constraints. We use the Nelder-Mead

1448

simplex method since our objective function is a routine that
does not have an analytical form. The input arguments of
this routine are the noise parameters and the output is an
MMD value. It has 6 free noise parameters (α1, α2, α3, α4, σx,
and σy), e.g., of the noise which is generated for instance in
a Cartesian coordination system. Without loss of generality
we simplify equations 5 and 6 by setting α1, α2, α3, α4 equal
to 1:

ν ' = v + N (σ )
ω ' = ω + N (σ )

(15)
(16)

Then our goal is minimization of the simplified objective
function f (συ, σω, σx, σy) under the constraints of nonnegative parameters (standard deviations). The solution is
the minimal MMD values. As mentioned before, the NelderMead simplex method is used to solve unconstrained
problems; then, we need to convert our constrained problem
to an unconstrained one. This is done with the algorithm
introduced by J. D’Errico which uses the transformation
values related to each bound, such as a quadratic function
for ingle bounds and a sinusoidal function for dual bounds.

4 Results
To make sure our objective function is not affected by
sudden unexpected changes due to changing noise
parameters, we approximately cover the variable space by
changing steps of 0.01 to plot the function values (Table 1).
To get a smoothly changing objective function we tuned the
triangular side lengths to 20 meters. This value is 40 m in
real experiments. There are 1000 Monte Carlo-generated
home-ending data points. For MMD we use the Gaussian
kernel with automated standard deviation tuning by the
median sample data distance in distributions. We report
results for the 5% significance level. Results for relative
noise (eq. 7 and 8) and absolute noise (eq. 11 and 12) are
obtained in both Cartesian and Polar coordinate systems.
Results of simulated distributions in polar coordinates with
absolute noise are depicted in Figure 5. Table 2 and 3
compare simulated distributions around the reference point
of the navigation path with the distribution of home-ending
points in experimental data for absolute and relative noise
types.
An interesting question is whether polar or Cartesian
coordinates are used on the neural level. Our results show
they provide similar results. We also generated final
distributions compatible with experimental data.

5 Conclusion
We introduced a novel mathematical model of egocentric
path integration that uses Monte Carlo simulation of both
the path integration equation and the noise. The homeending distributions of data collected from experiments with
human subjects were compared to those predicted by Monte
Carlo. The closest matching distribution simulated by the
model was found using the Nelder-Mead simplex method to

minimize the Maximum Mean discrepancy between the
model and human data. We showed that at the neuronal
level, the perceived advantage, in terms of both
computational overhead and representational power,
between Polar and Cartesian representations, is nonexistent.

6 Acknowledgments
I want to thank Prof. H.A. Mallot, Prof. J. Schmidhuber, Dr.
K. Basten, Dr. F. Gomez, and M. Aschoff for the profound
discussions and help to prepare this paper.

7 References
Benhamou, S., & Séguinot, V. (1995). How to Find One’s
way in the Labyrinth of Path Integration Models. In
Biol.,174, 463-466. (Ed.) Theor, J.
Chahl, J.S., & Srinivasan, M.V. (1996). Visual Computation
of Egomotion Using an Image Interpolation Technique.
Biological Cybernetics, 74(5), 405-411.
D’Errico, J. The Fminsearch bound, available at:
http://www.mathworks.com/matlabcentral/fileexchange/a
uthors/679.
Etienne, A.S., & Jeffery, K.J. (2004). Path Integration in
Mammals. In Hippocampus.,14(2), 180-192.
Franz, M.O., & Mallot, H.A. (2000). Biomimetic Robot
Navigation. In Elsevier, Robotics and Autonomous
Systems, 30, 133-153.
Gallistel, C.R. (1990). The organization of learning. In
Cambridge, MA: Bradford books, MIT press.
Gretton, A. Borgwardt, K.M., Rasch, M., Smola, A., &
Schölkopf, B. (2007). A Kernel Method for the twosample problem. In Advances in Neural Information
Processing Systems, 19, 513-520. (Eds.) Schölkopf, B.,
Platt, J., Hoffman, T., MIT Press, Cambridge, MA, USA.
Lagarias, J.C., Reeds, J.A., Wright, M.H., & Wright, P.E.
(1998). Convergence Properties of the Nelder-Mead
Simplex Method in Low Dimensions. In SIAM Journal of
Optimization, 9, 112-147.
Lambrinos, D., Kobayashi, H., Pfeifer, R., Maris, M.,
Labhart, T., & Wehner, R. (1997). An Autonomous Agent
Navigation with a Polarized Light Compass. In Adaptive
Behavior, 6, 131-161.
Levitt, T.S. & Lawton, D.T. (1990). Qualitative Navigation
for Mobile Robots. In Artificial Intelligence, 44, 305-360.
McKerrow, P.J. (1991). Introduction to Robotics. Addison
Wesly, New-York.
Merkle, T. (2007). Orientation and Search Strategies of
Desert Arthropods: Path Integration Models and
Experiments with Desert Ants, Cataglyphis Fortis (Forel
1902). Dissertation for PhD, University of Bonn.
Mittelstaedt, M.L., & Mittelstaedt, H. (1980) Homing by
Path Integration. In Avian Navigation, 290-297 (Eds.)
Papi, F. Wallraff, H.G., Springer, Berlin.
Möller, R., Lambrinos, D., Pfeifer, R, Labhart, T., Wehner,
R. (1998) Modeling Ant Navigation with an Autonomous
Agent. In Proc. 5th Conference of Simulation of adaptive
behavior.

1449

Riecke, B.E., Van Veen, H.A.C., & Bülthoff, H.H. (2002).
Visual Homing is Possible Without Landmarks: a Pass
Integration Study in Virtual Reality. In Presence MIT, 11
(5), 443-473.
Séguinot, V., Cattet, J., & Benhamou, S. (1998). Path
Integration in Dogs. In Animal Behavior, 55, 787-797.
Weber, K. Venkatesh, S., & Srinivasan, M.V. (1997). Insect
Inspired Behaviors for the Autonomous Control of
Mobile Robots. In From Living Eyes to Seeing Machines.
(Eds.) Srinivasan, M.V., Verkantesh, S. Oxford University
Press, Oxford, 226-248.
Wiener, J.M., and Mallot, H.A. (2006). Path Complexity
Does not Impair Visual Path Integration. Spatial cognition
and computation, 6(4), 333-346.

Figure 3. Homing performance in the Landmarks experiment. The data is pooled over the turning direction (left/right) as it
had no significance influence on homing performance. Plotted are the mean (centroid), the 95% confidence ellipse (outer
ellipse with thick line), and the standard ellipse (inner ellipse with thin line) for the homing endpoints (Reicke et al, 2002).

Figure 5: The results of sensor noise with absolute standard deviation production in the polar coordinate system.

1450

Table 1: An example of how the home-ending distributions change with respect to the parameters of the Monte Carlo
simulation. Entries are shown for increments of 0.01 for both σx, σy, in Cartesian coordinates. Note how the generated
Monte Carlo distributions change smoothly with σ1, σ2. The confidence interval over 30 runs is reported. The rotation angle
of the path is 120˚.
σx
σy
0.01
0.02
0.03
0.04
0.05

0.01
σ1, σ2
1.63±0.01,0.77±0.01
1.63±0.03,0.77±0.01
1.64±0.01,0.79±0.01
1.65±0.02,0.81±0.02
1.64±0.03,0.81±0.01

0.02
σ1, σ2
3.24±0.02,1.55±0.03
3.27±0.03,1.56±0.01
3.27±0.03,1.59±0.03
3.24±0.04,1.59±0.04
3.25±0.06,1.60±0.02

0.03
σ1, σ2
4.77±0.02,2.37±0.03
4.77±0.01,2.37±0.02
4.75±0.10,2.37±0.01
4.78±0.06,2.38±0.04
4.80±0.11,2.40±0.06

0.04
σ1, σ2
6.26±0.05,3.28±0.02
6.32±0.06,3.30±0.02
6.28±0.02,3.29±0.08
6.25±0.09,3.21±0.08
6.27±0.06,3.25±0.05

0.05
σ1, σ2
7.66±0.1,4.21±0.08
7.65±0.13,4.23±0.03
7.61±0.15,4.25±0.08
7.61±0.11,4.22±0.05
7.64±0.10,4.32±0.05

Table 2: Comparison between simulated distributions around the initial point of the navigation path (Cartesian coordinates,
various noise types). The σx,,and σy to generate the Monte Carlo distributions are 0.1 and 1.6 respectively. The null
hypothesis H0, means the two distributions are similar.
Rotation
Angel
30˚
60˚
90˚
120˚
150˚

Simulated
dist. Cartesian
(µx, σx, µy, σy)
0.12, 2.41,0.09,3.29

Simulated
dist. Polar
(µx, σx, µy, σy)
-0.04,2.36,0.02,3.28

MMD

σ = 3.3
Accept H0
0.09,3.29,-0.01,3.09 0.06,3.22,-0.07,3.08 σ = 3.72
Accept H0
-0.01, 3.42,-.09,3.37 0.18,3.42,-0.03,3.31 σ = 3.89
Accept H0
0.12,3.11, 0.15,3.79 0.05,3.11,0.24,3.89 σ = 3.95
Accept H0
-0.06,2.60,-0.01,4.51 0.15,2.54,0.19,4.66 σ = 4.10
Accept H0

Table 3: Comparison of simulated distributions around the initial point of the navigation path (polar coordinates, various
noise types). The σx,, and σy to generated the Monte Carlo distributions are both 0.01. The null hypothesis H0, means the two
distributions are similar.
Rotation
Angel
30˚
60˚
90˚
120˚
150˚

Simulated
dist. Cartesian
(µx, σx, µy, σy)
-0.15, 6.3, 0.21,6.50
1.02, 6.82, 2.02, 5.14

Simulated
dist. Polar
(µx, σx, µy, σy)
-.05,6.55,0.19,6.31

MMD

σ = 7.59
Accept H0
0.82, 6.82,1.85,5.33 σ = 6.75
Accept H0
0.87, 6.04, 0.86,4.19 0.29, 6.99,1,4.25
σ = 5.58
Accept H0
0.82, 6.75, 0.75, 4.88 0.29,6.99,0.96,4.7
σ = 6.67
Accept H0
-0.03,8.64, 0.31,8.61 -0.03, 8.76,0.27,8.7 σ = 10.23
Accept H0

1451

