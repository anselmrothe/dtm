UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
Mapping Self-Similar Structure: Commutative Expressions in Structure Mapping
Permalink
https://escholarship.org/uc/item/8jp7b2ph
Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 25(25)
Author
Ferguson, Ronald W.
Publication Date
2003-01-01
Peer reviewed
 eScholarship.org                                 Powered by the California Digital Library
                                                                    University of California

                                               Mapping Self-Similar Structure:
                                Commutative Expressions in Structure Mapping
                                               Ronald W. Ferguson (rwf@cc.gatech.edu)
                                           College of Computing, Georgia Institute of Technology
                                                               Atlanta, GA 30332
                                 Abstract
                                                                         Why commutative expressions make structure
   Comparisons over commutative expressions constitute a                 mapping difficult
   special problem in analogical mapping. The unique character
   of these comparisons stems from the nature of commutative             The difficulty of commutative matches is a byproduct of
   expressions themselves, which encapsulate particular                  how structure mapping constraints are enforced by SME and
   dimensions of similarity between their arguments. In this             other structure mapping models. SME creates a mapping as
   paper, we describe commutative matching mechanisms for                a set of alignments between expressions and entities in two
   two analogical mapping systems (SME and MAGI), and                    descriptions (the base and target). The constraints of
   demonstrate how use of these mechanisms can allow                     structure mapping are as follows:
   analogical mapping to scale over descriptions with lots of                Identicality: Only expressions with identical predicates,
   self-similar relational structure. We also discuss the cognitive
                                                                         or functional expressions that share a parent match, may be
   implications of these mechanisms.
                                                                         matched to one another.
                                                                             One-to-one: Each base item must match only one target
                             Introduction                                item, and vice-versa.
There are currently several models of analogy and similarity                 Parallel connectivity: Each matched expression must
that utilize some form of structural mapping (Falkenhainer,              also map all its arguments.
Forbus, & Gentner, 1989; Ferguson, 1994; Forbus,                             Systematicity: Mappings should encourage deeper,
Ferguson, & Gentner, 1994; French, 1995; Gentner, 1983;                  interconnected systems of matches over shallow, less
Holyoak & Thagard, 1989; Hummel & Holyoak, 1997;                         connected sets of matches.
Keane & Brayshaw, 1988; Kokinov & Petrov, 2001;                              To enforce these constraints, SME constructs mappings
Mitchell, 1993; Veale & Keane, 1997). These systems have                 in a local-to-global process. SME begins by building local
been used to model a wide variety of phenomena, including                match hypotheses (MHs) between potentially matching
analogy, similarity, metaphor, and symmetry detection. In                expressions. These MHs are then gathered into rooted trees
all these systems, comparison is understood as a process that            of matched expressions called kernel mappings. Kernel
looks for similar systems of relational structure.                       mappings are in turn used to construct global mappings.
     One type of relational structure, however, has only                     The “anatomy” of mapped expressions in SME is
received limited attention in the study of analogy: matches              demonstrated in Figure 1. SME builds an MH between each
of commutative relational expressions (hereafter called                  pair of expressions or entities that meet the identicality
commutative matches). This is unfortunate, because                       constraint (such as the two above relations and their paired
commutative matches appear to be an interesting and                      arguments). These MHs reflect the structure of the
unusual problem in analogical mapping systems. A                         expressions that they match, so that sets of MHs tend to
commutative expression, such as equal-length(line1,line2)                form rooted match trees (kernel mappings).
or group(circle1, circle2, circle3), by its very definition
represents a kind of encapsulated self-similarity, since all its
arguments are interchangeable and thus alike.
     Consequently, commutative expressions represent both                                ABOVE                      ABOVE
an opportunity and a problem for structure mapping
systems. If the encapsulated similarity can be harnessed
effectively in the mapping process, it adds to the power of                           L1        L2               L3            L4
the model. Alternatively, that encapsulated similarity can
also, as we shall see, severely hamper a structure mapping                                                LEGEND
model if not handled correctly. Either result also has                                      Relation               Match
                                                                                                                   hypothesis (MH)
implications for human analogical reasoning.
     In this paper, we describe the commutative matching                                    Relation
                                                                                            (commutative)           Kernel mapping
mechanisms built for two analogical mapping models: the
                                                                                            Entity
MAGI symmetry detection model (Ferguson, in
preparation) and the Structure Mapping Engine (SME;
                                                                             Figure 1: Anatomy of an SME mapping between
Forbus, Ferguson & Gentner, 1994, in preparation).
                                                                             base and target expressions (non-commutative).
                                                                    396

    Figure 1 shows a match between non-commutative                  all the child matches (shown as dotted lines) are structurally
relational expressions. SME’s representation language,              consistent with one another. One MH, for example, matches
however, defines both non-commutative and commutative               L1 to L3, while another matches L1 to L2. Together these
relations. 1                                                        matches violate the one-to-one constraint.
    It is at the kernel mapping stage that commutative                   This problem is exacerbated if there are multiple levels
matches introduce complications into the mapping process.           of commutative expressions—a common occurrence in
Kernels that map non-commutative expressions are                    visual representations such as the corner groups represented
guaranteed, once created, to be structurally consistent (i.e.,      in Figure 2-B. In this case, in which the grouped corner
to meet the one-to-one, identicality, and parallel                  expressions are matched, entity correspondences cannot be
connectivity constraints). Sets of consistent kernels are then      determined without choosing the particular corner
gathered via a greedy merge process (Forbus & Oblinger,             expressions to match, which in turn are indeterminate
1990) to maximize the systematicity of the resulting global         because the set expressions are also commutative.
mapping.                                                                 This problem is actually a special case of the much
    This system works well for sets of non-commutative              larger problem of mapping self-similar relational structure,
expressions. However, for commutative matches, the                  which we will return to in the discussion.
situation is more complex, because kernel mappings that                  Here we describe the commutative matching mechanism
contain commutative matches cannot guarantee structural             developed for the SME 3 (Forbus et al., 1994) and MAGI
consistency, since they must also maintain the                      (Ferguson, in preparation) mapping systems. As a contrast,
commutativity of the matched expressions themselves,                we also include a brief description of the mechanism used in
which in turn may violate the one-to-one constraint.                SME 2 (Falkenhainer et al., 1989), which is different and
    We can see the problem clearly in Figure 2, which               has not previously been described in depth (this description
depicts commutative matches in SME. In contrast to Figure           is based instead on the SME 2 source code).
1 where the parent match is structurally consistent with all
the child matches, in Figure 2-A’s commutative match, not           Commutative matches in SME 2
                                                                    The original Structure-Mapping Engine (Falkenhainer et al.,
                                                                    1989), or SME 2, handles commutative matches in three
                                                                    stages: 1) generating a set of child matches; 2) generating
                                                                    the argument match permutation sets; and 3) cloning the
                 CORNER                CORNER
                                                                    commutative MH for each match permutation set.
                                                                         In stage 1, SME creates match hypotheses for all
                                                                    possible pairings of the arguments sets. So, when two
               L1      L2            L3      L4                     commutative “parent” expressions with N arguments are
                                                                    matched, the match hypothesis for them creates N2 child
          (A) First-level commutative expression match              match hypotheses.
                                                                         In stage 2, SME generates the argument match
                                                                    permutation sets. This is designed to solve the child
                                                                    selection problem: exactly which N of the N2 child matches
                  SET                            SET                should be accepted in the global mapping? To handle this, it
                                                                    generates all consistent sets of N child matches from the set
                                                                    of N2 matches. For commutative matches with N arguments,
        CORNER       CORNER                        CORNER
                                                                    there are N! possible permutation sets.
                                         CORNER
                                                                         In the final stage, SME then “clones” the commutative
                                                                    match hypothesis. Instead of simply treating all the child
       L1        L2                     L4
                                                                    matches as children of the commutative match, SME creates
                           L3                   L5      L6
                                                                    a number of “clones” of the original commutative match,
                                                                    each of which contains a single permutation of the
                                                                    commutative match’s arguments.
                                                                         Each clone is by definition structurally inconsistent with
      (B) Second-level commutative expression match                 all the others (pairwise they violate the one-to-one
                                                                    constraint, since for each pair of permutations, there must be
 Figure 2: Why commutative matches in structure
                                                                    at least one base item that is mapped to different target
 mapping are problematic.
                                                                    items). For this reason, the clones will not interfere with
                                                                    each other in the construction of mappings—no more than
                                                                    one clone can be used in any particular kernel or global
    1
      A commutative predicate defined in SME assumes that all its   mapping.
arguments are interchangeable. Some frame-based representation           While this mechanism has a very high computational
languages (e.g., Kokinov & Petrov, 2001), allow a selected subset   cost, it is not without its advantages. While expensive, the
of the relation’s arguments to be interchangeable.
                                                                397

time and memory costs depend solely on the number and             Then MH(L1,L4) and MH(L2,L3) are true, and we can
arity of the commutative matches, which are commonly              create a consistent and complete match tree for the figure
used, but are often a small subset of any given base or           (Figure 5). Similarly, for a second-order commutative
target. In addition, for many commutative matches, the            match, we can determine the set of correspondences as
identicality constraint limits the number of interpretations to   particular possible matches are eliminated (Figure 6).
a handful early in the process, reducing processing cost.              The use of lazy resolution of commutative matches has
Finally, once the cloned matches are built, they are              some interesting implications. Suppose that the arguments
structurally consistent, which means that SME can treat the       do not fully resolve and are left partially or fully ambiguous.
cloned commutatives matches just like non-commutative             In SME 2, all permutations would be considered, and each
matches, greatly simplifying later processing.                    might be included in a mapping. In SME 3, however, the
                                                                  commutative match is purposely left unresolved, with the
Commutative matches in SME 3                                      assumption that it represents a many-to-many match where
The handling of commutative expressions was significantly         the particular individual correspondences are not only
revised in SME 3 (Forbus et al., 1994), although the exact        unknown, but also unimportant.
mechanism has not been previously published. SME 3 is                  It may seem strange that SME 3 simply keeps the
also known as incremental or I-SME.                               commutative matches unresolved, but this result appears to
    SME 3 takes a different approach than SME 2 to                be a closer fit to human comparisons than SME 2’s model.
commutative matches. For commutative matches, SME 3
does not attempt to solve the problem by ensuring that all
argument permutations are considered. Instead, it handles
                                                                                CORNER                                CORNER
permutation sets only when forced to, using lazy resolution
of commutative matches.                                                                              +
                                                                                                     +
    To avoid creating explicit match permutations, SME 3                                          +      +
uses a commutatives table to encode them implicitly (Figure                 L1            L2
                                                                                                     +          L3              L4
3). This method, which is similar to lazy evaluation methods
in associative-commutative unification (Lincoln &
Christian, 1989), creates a matrix of matching base and               Figure 4: A commutative match utilizing a
target items (Figure 3-A). Each table cell represents a               commutativity table
potential MH. By the one-to-one constraint, only one item
in each row and column can be true. To make this table
notation work better with our mapping notation, we tilt the                     CORNER                               CORNER
table clockwise into a diamond shape (B), and use “+” and
“-” to indicate valid and invalid MHs, respectively.
                                                                                                    +
                                                                                                    +
            L3                                L3                           L1            L2       -      -
                      L4              L1
                                                                                                    +          L3              L4
    L1   MH(L1,L3)  MH(L1,L4)
                                  L2      +
                                          +       L4
                                     +        +                       Figure 5: Resolved binary commutative match
    L2   MH(L2,L3) MH(L2,L4)              +
                 (A)                     (B)
Figure 3: A commutatives table represents all potential                           SET
                                                                                                                           SET
child matches for a single commutative match. (A)
shows the full table. (B) is a simplified version, rotated
                                                                                                      ++
clockwise to aid clarity.                                                                           + +
                                                                                                       +
                                                                                                                    CORNER     CORNER
    We can now easily demonstrate the utility of SME 3’s                 CORNER       CORNER
mechanism. For example, consider the match between the
                                                                                                      ++
commutative expressions corner(L1,L2) and corner(L3,L4)                                             +++
depicted in Figure 4. Here, the match table takes the place of
the multiple match hypotheses shown in Figure 2-A. The                                         ++           ++              L2        L3
                                                                    L1           L2        L3 +++          +++    L1
table itself is connected to the parent match by a possible-
children link (indicated by the double line).                                                        ++
                                                                                                    +++
    As soon as one match is chosen or eliminated, the
commutative match is fully constrained and can be
                                                                       Figure 6: Mapping of a second-order data structure
integrated into the rest of the match. Suppose that
                                                                                       using commutative tables
MH(L1,L3) (i.e., a match between L1 and L3) is invalid.
                                                              398

 Take, for example, an analogy that compares a basketball                      Solar-System:
 team with a baseball team. All five basketball players                          (cause (gravity (mass sun) (mass planet1))
                                                                                        (attracts sun planet1))
 correspond to all nine baseball players, and without further                    (greater (temperature sun)
 constraining matches, which baseball player corresponds to                               (temperatureplanet1))
 which basketball player is unimportant. If additional                           (cause
                                                                                    (and (greater (mass sun) (mass planet1))
 information is added, two players may be placed into a                                  (attracts sun planet1))
 specific match—for example, if a basketball guard and the                          (revolve-around planet1 sun))
 baseball pitcher had both suffered recent injuries. But in
                                                                                Rutherford-Atom:
 general, a person making this comparison would simply not                       (cause
 consider enforcing a one-to-one match.                                            (opposite-sign (charge nucleus)
                                                                                                   (charge electron))
     Along with being more cognitively plausible, we can                           (attracts nucleus electron))
 demonstrate how this commutative match mechanism                                  (cause
 makes analogical mapping more tractable. In addition, our                            (and (greater (mass nucleus)
                                                                                                     (mass electron))
 example shows how the commutative mechanism implicitly                                     (attracts nucleus electron))
 forms a group-based many-to-many mapping.                                              (revolve-around electron nucleus))
     Here, we use a modified version of the oft-used analogy
                                                                               Figure 7: Relational                       descriptions         used      for       the
 between an atom and a solar system (Falkenhainer et al.,
                                                                               simulation.
 1989). The original versions of these descriptions (Figure 7)
 have only one electron and one planet. Using these
 descriptions as the beginning template, we constructed two                   than 8 items, and in general takes a fraction of the
 description sets. Each set contained instances with 1 to 10                  computational resources of the mappings using repeated
 electrons (for the atom descriptions) or 1 to 10 planets (for                structure. Similar results were found for memory use. These
 the solar system descriptions). In the repeated structure set,               results show that, for large amounts of repeating relational
 each planet or electron is represented separately by                         structure, commutative expressions make mapping tractable,
 repeating the description for each repeating element. In the                 allowing it to scale in a way that repeated structure does not.
 commutative expression set, the electrons and planets were                       In addition, the repeating structure mappings attempted
 represented by a single commutative and relation.                            to match each electron and each planet specifically, while
     We ran each set of atom/solar-system comparisons using                   the code using the commutative expressions matched all the
 SME 3 on a 2.6 GHz Windows 2000 Workstation running                          relational structure found in the repeating structure
 Franz Allegro Common Lisp, recording for each run the                        condition, but did not resolve the mapping of the set of
 processing time, the number of MHs produced, and the                         planets to the set of electrons. In other words, while
 memory used.                                                                 retaining a structural match of the whole system of relations,
     The result was a clear victory for commutative                           it also saw the planets and electrons as a many-to-many
 expressions. As Figure 8 (processing time) and Figure 9                      group match, where there was no reason to match any
 (total MHs created) show, the use of repeating structure                     particular electron to any particular planet. Again, we argue
 scales poorly in SME. This is not unexpected—again, this                     that this is a cognitively plausible result.
 kind of self-similar structure is a problem for all structural                   This example, then, shows the utility and cognitive
 matchers, not just SME. In contrast, the performance of the                  plausibility of the mechanism.
 set using commutative expressions is relatively flat for less
                           500                                                                  1400
                                                                                                1200
  Processing time (msec)
                           400
                                                                                 MHs produced
                                                                                                1000
                           300                                                                  800
                                                                                                600
                           200                                                                  400
                                                                                                200
                           100
                                                                                                  0
                            0                                                                          1   2    3     4      5   6       7     8     9        10
                                           Num . item s                                                                   Num. item s
                                 Repeating structure      Commutative                                      Repeating structure       Commutative expression
Figure 8: Processing time (in msec) for comparisons with                       Figure 9: Number of match hypotheses produced for
repeating    structure     vs.   comparison     utilizing                      comparisons with repeating structure vs. comparisons
commutative expressions.                                                       utilizing commutative expressions.
                                                                        399

Commutative matching in MAGI                                             In this case, the commutatives for MAGI have to ensure
Commutative expressions are even more difficult to handle            that the limited self-match constraint is enforced—that an
in systems that, instead of mapping base and target                  expression not match to itself unless its parent or child
descriptions, find self-similarity within a single description.      matches are not self-matches.
    MAGI is a system that models symmetry and repetition                 Therefore, to enforce the proviso that the commutative
detection as structure mapping (Ferguson, 1994, in                   matches not completely self-match, binary commutatives
preparation). MAGI has been used in a variety of domains,            (such as the corner self-matches in Figure 10) are
including diagrams illustrating physical laws (Ferguson &            constrained so that their arguments map to one another.
Forbus, 1998), logic circuits diagrams (Ferguson, 1994),                 The result is that the mapping actually uses three
and children’s fables (Ferguson, 2001). It has also been used        commutative tables. The center table matches the corners to
to model perceptual symmetry phenomena, including effects            each other, and at the time depicted, the commutative match
of qualitative visual structure (Ferguson, Aminoff, &                is unresolved. In addition, each corner relation has a
Gentner, 1996) and the preference for symmetry about the             commutative table handling the match to itself. In each of
vertical axis (Ferguson, 2000).                                      those tables, however, the limited self-match over a binary
    MAGI performs symmetry mapping by mapping a                      predicate has automatically resolved them so that the self-
description back onto itself to find the maximal area of self-       match permutes its arguments.
similarity. It also utilizes two additional mapping                      The careful reader will notice that because of this,
constraints:                                                         commutative binary self-matches will always resolve.
    Limited self-matching: An expression is not allowed to           Given the frequency of binary commutative predicates in
map to itself unless that self-match is the result of two non-       visual representations (e.g., corner, parallel, perpendicular,
identical parent matches.                                            intersects, and beside) this greatly increases the efficiency
    Maximal differentiation: Symmetry mappings should                of MAGI’s mapping algorithm.
maximize the interconnectivity and size of structure on                  We note that the current implementation enforces the
either side of a symmetry mapping, and minimize the                  proviso only in the case of binary commutatives. Higher
amount of relational structure that crosses across the two           arities have thus far proved difficult and inefficient, and are
mapped portions.                                                     an area of future research. The proviso is difficult to enforce
    If commutative mapping in SME is difficult,                      because a local non-self match can have a global effect—if
commutative mapping in MAGI is doubly hard. We must                  one commutative somewhere in a kernel mapping does not
not only control for matches between commutative                     map an argument to itself, the entire kernel meets the
expressions, but also between a commutative expression and           limited self-matching constraint. However, the frequency of
itself. MAGI allows a commutative expression to match                binary commutatives in visual domains still makes the
itself, but only with the proviso that its arguments be              existing mechanism extremely useful.
permuted to avoid self-matching of its arguments. The
limited self-match constraint is designed to block the               Discussion
largest, and yet also most uninformative possible mapping:           It is interesting to note that the solution of commutative
a complete self-match, where every item maps to itself.              expression matches has often been overlooked in cognitive
    However, a simple extension of SME’s mechanism                   models of analogical mapping. Most existing systems ignore
suffices to handle these conditions. Figure 10 shows two             the problem entirely (Hofstadter & Mitchell, 1992; Holyoak
corner relations (assumed now to be in the same description          & Thagard, 1989; Hummel & Holyoak, 1997; Keane &
rather than in two descriptions). The corners can map to one         Brayshaw, 1988; Veale & Keane, 1997), although the
another, as before, but in a twist that only occurs in a             Copycat and Tabletop systems explicitly address grouping
symmetry mapping, they may also map to themselves.                   (Mitchell, 1993; French, 1995), and ACME addresses
                                   --          CORNER                         CORNER
                                 +    +                                                           -+
                                   -                            +
                                                                +
                                                                                               +     +
                                                              +    +                             -
                                            L1        L2
                                                                +          L3          L4
                   Figure 10: Example of commutative mapping in MAGI. Corners can map to each
                   other commutatives, but may also map to themselves with the proviso that their
                   arguments do not self-match.
                                                               400

many-to-many matches (Holyoak & Thagard, 1989).                    judgments, Proceedings of the Eighteenth Annual
    This is true even though descriptions in the analogical        Conference of the Cognitive Science Society (pp. 12).
mapping literature often involve domains that contain some         Hillsdale, NJ: Lawrence Erlbaum Associates.
form of symmetry or repetition. These domains include           Ferguson, R. W., & Forbus, K. D. (1998). Telling
solar systems (Gentner, 1983), multiple radiation beams or         juxtapositions: Using repetition and alignable difference
lasers (Holyoak & Thagard, 1989), arches (which are often          in diagram understanding. In K. Holyoak & D. Gentner
symmetric) (Winston, 1980), and series of turbines and             & B. Kokinov (Eds.), Advances in Analogy Research
batteries (Bhatta & Goel, 1997).                                   (pp. 109-117). Sofia, Bulgaria: New Bulgarian
    The problem of mapping commutative expressions is but          University.
one instance of a more general problem in analogical            Forbus, K. D., Ferguson, R. W., & Gentner, D. (1994).
reasoning, that of mapping descriptions that themselves are        Incremental structure mapping. In A. Ram & K. Eiselt
self-similar. Descriptions of everyday events and objects          (Eds.), Proceedings of the Sixteenth Annual Conference
often contain inner regularities and symmetries.                   of the Cognitive Science Society (pp. 313-318). Atlanta,
    While some researchers have usefully noted the NP-hard         GA: Lawrence Erlbaum Associates.
nature of structure-mapping (Veale & Keane, 1997), an           Forbus, K. D., & Oblinger, D. (1990). Making SME greedy
assessment of the effect of repeating relational structure         and pragmatic. Paper presented at the Conference of the
may prove to be a more pragmatic result in the long run.           Cognitive Science Society, Cambridge, MA.
Simply put, the complexity of structure mapping increases       French, R. M. (1995). The Subtlety of Sameness: A Theory
significantly as repeating structure is added, but the proper      and Computer Model of Analogy-Making. Cambridge,
use of commutative expressions (and perhaps other                  Massachusetts: Lawrence Erlbaum Associates.
grouping techniques as well!) can address that limitation.      Gentner, D. (1983). Structure-Mapping: A theoretical
                                                                   framework for analogy. Cognitive Science, 7, 155-170.
                      Acknowledgements                          Hofstadter, D. L., & Mitchell, M. (1992). An overview of
Special thanks to Ken Forbus, with whom the SME                    the Copycat project. In K. J. Holyoak & J. Barnden
commutatives algorithm was developed. Thanks also to               (Eds.), Connectionist Approaches to Analogy, Metaphor,
Dedre Gentner and the Qualitative Reasoning and Analogy            and Case-Based Reasoning. Norwood, NJ: Ablex.
Groups at Northwestern University for many productive           Holyoak, K. J., & Thagard, P. (1989). Analogical mapping
discussions on this topic, and to the anonymous reviewers.         by constraint satisfaction. Cognitive Science, 13, 295-
This research was supported by the Cognitive Science and           355.
Computer Science programs of the Office of Naval                Hummel, J. E., & Holyoak, K. J. (1997). Distributed
Research, and by the National Science Foundation under the         representations of structure: A theory of analogical
Learning and Intelligent Systems program                           access and mapping. Psychological Review, 104(3), 427-
                                                                   466.
                           References                           Keane, M., & Brayshaw, M. (1988). The Incremental
                                                                   Analogy Machine: A computational model of analogy.
Bhatta, S., & Goel, A. (1997). A functional theory of design       In D. Sleeman (Ed.), Proceedings of the Third European
    patterns, Proc. International Joint Conference on              Working Session on Learning (pp. 53-62). London:
    Artificial Intelligence       (IJCAI-97) (pp. 294-300).        Pitman.
    Nagoya, Japan.                                              Kokinov, B. N., & Petrov, A. A. (2001). Integrating
Falkenhainer, B., Forbus, K. D., & Gentner, D. (1989). The         memory and reasoning in analogy-making: The AMBR
    Structure-Mapping Engine: Algorithm and examples.              model. In D. Gentner & K. J. Holyoak & B. N. Kokinov
    Artificial Intelligence, 41, 1-63.                             (Eds.), The Analogical Mind: Perspectives from
Ferguson, R. W. (1994). MAGI: Analogy-based encoding               Cognitive Science (pp. 59-124). Cambridge, MA: The
    using symmetry and regularity. In A. Ram & K. Eiselt           MIT Press.
    (Eds.), Proceedings of the Sixteenth Annual Conference      Lincoln, P., & Christian, J. (1989). Adventures in
    of the Cognitive Science Society (pp. 283-288). Atlanta,       associative-commutative unification. Journal of
    GA: Lawrence Erlbaum Associates.                               Symbolic Computation, 8, 217--240.
Ferguson, R. W. (2000). Modeling orientation effects in         Mitchell, M. (1993). Analogy-Making as Perception.
    symmetry detection: The role of visual structure,              Cambridge, MA: MIT Press.
    Proceedings of the 22nd Conference of the Cognitive         Veale, T., & Keane, M. T. (1997). The competence of sub-
    Science Society (pp. 143). Hillsdale, NJ: Erlbaum.             optimal theories of structure mapping on hard analogies.
Ferguson, R. W. (2001). Symmetry: An Analysis of                   IJCAI.
    Cognitive and Diagrammatic Characteristics. Unpubl.         Winston, P. H. (1980). Learning and reasoning by analogy.
    Ph.D., Northwestern University, Evanston, IL.                  Communications of the ACM, 23(12).
Ferguson, R. W. (in preparation). MAGI: A model of
    symmetry and repetition detection.
Ferguson, R. W., Aminoff, A., & Gentner, D. (1996).
    Modeling qualitative differences in symmetry
                                                            401

