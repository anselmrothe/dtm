UC Merced
Proceedings of the Annual Meeting of the Cognitive Science
Society
Title
Toward a Unified Framework for Tracking Cognitive Processes
Permalink
https://escholarship.org/uc/item/19r9t5c9
Journal
Proceedings of the Annual Meeting of the Cognitive Science Society, 25(25)
Authors
Salvucci, Dario D.
Siedlecki, Timothy
Publication Date
2003-01-01
Peer reviewed
 eScholarship.org                                 Powered by the California Digital Library
                                                                    University of California

                Toward a Unified Framework for Tracking Cognitive Processes
                                       Dario D. Salvucci (salvucci@cs.drexel.edu)
                                       Department of Computer Science, Drexel University
                                           3141 Chestnut St., Philadelphia, PA 19104
                                          Timothy Siedlecki (ts62@drexel.edu)
                                       Department of Computer Science, Drexel University
                                           3141 Chestnut St., Philadelphia, PA 19104
                            Abstract                               on intelligent tutoring systems has utilized “model tracing”
                                                                   or “tracking” algorithms (see Anderson et al., 1995, for a
  In this paper we present an initial specification of a           review) that follow a student step-by-step in a problem
  general, robust, and efficient computational framework for       solution, in addition to “knowledge tracing” algorithms that
  tracking cognitive processes — that is, inferring a
                                                                   keep a current estimate of student knowledge and skill. As
  persons’ thoughts from their actions. Our framework,
  which we call the mind-tracking architecture, centers o n        successful as these systems have been in real-world
  two core processes: generating predicted cognitive and           deployment, the underlying model-tracing algorithms have
  action sequences using computational cognitive models,           two major assumptions that limit their generality: (1) all
  and tracking observed actions through robust matching            actions are discrete events without noise, and (2) each action
  with predicted actions. In essence, the mind-tracking            corresponds one-to-one to a skill-related rule without
  architecture “thinks along” with the person in predicting a      ambiguity and limited backtracking. Recent interesting
  set of possible thoughts and actions, and then matches           work on tutoring systems (e.g., Conati, Gertner, &
  these to the person’s observed actions to infer their most       VanLehn, 2002) and intelligent help systems (e.g., Horvitz
  likely thoughts. In the paper we provide a background of         et al., 1998) has used probabilistic Bayesian networks to
  related work (e.g., for intelligent tutoring systems),
                                                                   make inference more robust and flexible in the face of noise
  outline the basic components of the architecture, and
  demonstrate its usefulness for a sample real-world               and ambiguity; however, this work focuses more on the
  application — real-time inference of driver intentions.          “knowledge tracing” aspect and still relies on the
                                                                   assumption that observations are discrete and unambiguous.
                                                                   In contrast, a great deal of multimodal data collected in
                        Introduction                               empirical studies and real-world interactive systems are
Whenever people interact, they continually infer others’           continuous and noisy — for instance, mouse movements,
thoughts and intentions from their actions — sometimes in          hand positions and gestures, eye movements, even task-
mundane ways (e.g., watching a friend wave "hello"),               specific data such as steering and acceleration/braking for
sometimes in complex and subtle ways (e.g., watching a             driving (to be discussed later). A general framework for
poker player for signs of bluffing). This process of intent        tracking cognitive processes must be able to handle such
inference is not only a core component of human                    noisy, continuous data in order to use a full complement of
communication but also of human-computer interaction:              multimodal data for inference.
when human users and computer systems interact, the                     In this paper we propose a computational framework
systems must continually observe user actions and respond          called the mind-tracking architecture for modeling and
to the inferred thoughts and intentions behind these actions.      tracking human cognitive processes — that is, mapping
For example, the current generation of intelligent tutoring        observed actions to the unobservable thoughts that produced
systems center around the notion that the system can infer         them. The mind-tracking architecture centers on two core
student intentions and knowledge in order to adapt and             processes: model simulation and action tracking. First, at
personalize the learning experience (e.g., Anderson et al.,        each time step, the architecture generates a set of predicted
1995; Anderson & Gluck, 2001; Frederiksen & White,                 thought and action sequences by running computational
1990). As another example, adaptive help systems in                cognitive models in simulation. Second, the architecture
intelligent user interfaces monitor user behavior and provide      finds the best match between the predicted action sequences
focused contextual help when prompted or even                      and the actual observed sequence, thereby inferring the most
spontaneously (e.g., Horvitz et al., 1998). Such systems           likely cognitive process (i.e., thought sequence) that
essentially mimic the role of human tutors, assistants, etc.       generated the observed actions. Thus, the mind-tracking
in continually inferring another’s intentions to best adapt        architecture “thinks” along with people as they behave,
and respond to another’s communication.                            mirroring their thoughts and actions and providing a
     Researchers have addressed the problem of intent              continual estimation of the person’s current cognitive state,
inference using a variety of techniques that integrate             including intentions, goals, knowledge, etc. In doing so,
cognitive validity with pattern matching algorithms. Work          the architecture provides a unified framework for robustly
                                                              1023

                                      1
                  Human
                                               ?        ?         ?          ?       ?        ?
                                      2
                           1                                                                                  4
                                                                                                        3
                           2
                  Models
                           3
                                                    (and more...)
                                     Figure 1: Overview of the mind-tracking architecture.
relating observable, low-level multimodal actions to high-            with a person’s observed actions and thus infer their
level cognitive processes.                                            predicted thoughts.
     This paper outlines the mind-tracking architecture and
demonstrates the core ideas in the context of a real-world            Model Representation
application domain: driving. Inference of driver intentions           Because the mind-tracking architecture is a computational
is essential for the development of future intelligent vehicle        framework in which to infer thoughts, we require some
systems that warn and assist drivers in critical situations,          computational representation for thoughts or more precisely
very much analogous to inference of student intentions and            “cognitive state” — including a person’s goals, intentions,
knowledge in an intelligent tutoring system. However,                 knowledge, perhaps even mood, etc. While we might
driver intent inference must handle an inundating stream of           imagine a number of existing models and frameworks
multimodal data — including steering, acceleration,                   serving this role, we have chosen the ACT-R cognitive
braking, eye movements, even facial expressions — which               architecture (Anderson & Lebiere, 1998), a production-
are notoriously rife with noise and individual variability,           system architecture based on condition-action rules and
making current model-tracing techniques very inadequate for           separate declarative (factual) and procedural (skill)
the driving domain. Using a rigorous model of human                   knowledge stores. The ACT-R architecture has been used
driver behavior (Salvucci, Boer, & Liu, 2001) developed in            to model behavior in tasks ranging from simpler laboratory
the ACT-R architecture (Anderson & Lebiere, 1998), we                 tasks (e.g., memory and recall: Anderson & Matessa, 1997)
demonstrate how the mind-tracking architecture allows for             to more complex dynamic real-world tasks (e.g., air-traffic
robust, accurate inference of driver behavior, specifically the       control: Lee & Anderson, 2001).
problem of detecting driver lane changes.                                  Due to space limitations, we must refer interested
                                                                      readers to Anderson and Lebiere (1998) for more details on
         The Mind-Tracking Architecture                               the ACT-R architecture. However, we note three important
In its essence, the mind-tracking architecture continually            features of ACT-R (and similar cognitive architectures such
maps a person’s observed actions to their inferred thoughts           as Soar: Laird, Newell, & Rosenbloom, 1987, and EPIC:
and intentions. We first outline the representation of the            Meyer & Kieras, 1997) that make it an excellent choice for
computational cognitive models that allows us to represent            purposes of mind tracking. First, the architecture allows for
cognitive state as well as generate sequences of predicted            computational models that run in simulation and generate
thoughts and actions. We then describe the process by                 temporal sequences of “thoughts,” namely rule firings. At
which the architecture uses these models to follow along              any point in time, the current state of the model serves as
                                                            1024

the current “cognitive state” in that it embodies all current    state as the human data sequence, each model is run for a
knowledge and skills, including symbolic knowledge (e.g.,        period of time to generate its unique model simulation
whether a given fact is known at all) as well as subsymbolic     trace. Each trace includes both a thought sequence and an
knowledge (e.g., whether a given fact can be readily             action sequence, where the thought sequence comprises
recalled). Second, ACT-R can produce interaction with real-      states of the cognitive model and the action sequence
world or simulated stimuli though realistic perceptual and       comprises vectors of observable data. The model action
motor modules (Byrne & Anderson, 2001), often running in         sequences should be completely analogous to the human
identical environments as human subjects. This feature           action sequence in terms of the amount and type of data, the
allows for direct comparison between human behavior and          sampling rate, and the total sampled time.
model predictions for real-world metrics. Third, the
architecture facilitates modeling at multiple grain sizes and    (3) Action Tracking: identifying the model whose
levels of details — for instance, both at the level of lower-    predicted action sequence best matches the person’s
level control (e.g., steering and braking) and higher-level      observed action sequence. Action tracking could be
cognition (e.g., decision making and planning). These and        performed using any of a number of techniques. For this
other features allow for direct integration of ACT-R models      initial treatment of mind tracking, we assume that all
into the mind-tracking framework.                                features in the multimodal data are continuous values and
     Mind tracking runs not one but many cognitive models        compute the sum of squared error between the observed and
simultaneously. Roughly speaking, the set of cognitive           predicted action sequences; thus, the best-matching model is
models approximates the variability of strategies and            the model with the least error between its predicted actions
behaviors seen in a population of human performers such          and the person’s actions. (For future work, we are currently
that the models represent as many different behaviors and        investigating more complex methods of action tracking —
strategies as possible. The issue of variability and             for instance, using a sequence-distance metric or complex
individual differences is an extremely involved one that         probabilistic models.)
raises many questions concerning where the variability
arises (e.g., “hardware” versus “software” differences: see
Meyer et al., 2001) and how much to represent explicitly in      (4) Thought Inference: identifying the inferred thought
the models. A rigorous treatment of variability and              sequence. Given the best-matching model from action
individual differences is beyond the scope of this paper;        tracking, this model’s action sequence is associated with its
however, as we will see in the application to driving, the       corresponding predicted thought sequence, resulting in the
architecture offers several broad choices for handling           desired inferred thoughts given the observed actions. We
variability: explicitly representing different strategies in     can then analyze the cognitive state embodied in this
different models, implicitly representing different behaviors    sequence to determine current goals, intentions, etc. For
by varying model parameters, and allowing the matching           instance, by using ACT-R as our model representation, we
process in action tracking to account for unexplained noise.     can determine the person’s inferred intentions at the end of
                                                                 the tracking time period by looking at the final cognitive
Mind Tracking                                                    model’s “goal buffer” (a buffer that contains a link to the
                                                                 current declarative goal chunk). As another example, we
Given the desired set of cognitive models, the mind-             could check whether a particular unit of knowledge is
tracking process operates in four stages: (1) data collection:   currently in memory, such as declarative chunk for factual
recording the person’s observed actions; (2) model               knowledge or a production rule for skill knowledge.
simulation: generating predicted thoughts and actions for all
models; (3) action tracking: finding the best matching
predicted actions for the observed actions; (4) thought          Taking the final state (or any intermediate state) as the new
inference: identifying the inferred thoughts before cycling      current state, the system cycles the mind-tracking process,
the process in the next time step. We now describe each          repeating all four steps at this next time increment.
step of this process, as illustrated in Figure 1.
                                                                 Discussion
(1) Data Collection: recording the person’s observed action      As mentioned, the core idea of the mind-tracking
sequence for a given period of time. The actions recorded        architecture is similar to a large body of work in intelligent
would include any multimodal data relevant to the task,          tutoring, namely work on model tracing (Anderson et al.,
stored as a vector of numerical or categorical information.      1995) and tracking (Frederiksen & White, 1990). For
The period of time is also task-specific and related to the      example, the model-tracing cognitive tutors developed at
temporal grain size of the multimodal data, though a value       Carnegie Mellon (Anderson et al., 1995) use a single
around one half to several seconds should suffice for most       cognitive model with multiple decision points and follow a
purposes. Of course, as illustrated in the figure, the thought   student step-by-step through the problem-solving process.
sequence that generated these actions is unknown and will        However, the cognitive tutors assume a direct mapping
be inferred through the mind-tracking process.                   between observed actions and cognitive rules — for
                                                                 instance, a mapping between the student subtracting a
                                                                 number from both sides of an equation to a rule that
(2) Model Simulation: generating the models’ predicted
                                                                 embodies this skill in the equation-solving domain. In
thought and action sequences. Starting at the same initial
                                                                 addition, the tutors do not handle ambiguity when an
                                                            1025

observed action could potentially map to multiple rules; in     driver model runs in simulation using “eyes” for perception
such a situation, the tutor is forced to prompt the user to     and “hands” and “feet” for steering and pedaling.
determine which rule is intended. The mind-tracking             Simulations produce identical protocols to human drivers
architecture generalizes the model tracing process to allow     navigating the same environment in a driving simulator (see
for arbitrary mapping between observable actions and rule       Salvucci, Boer, & Liu, 2001). The model has been
firings even in the presence of data noise.                     validated with respect to lane changing, curve negotiation,
     Another body of work closely related to mind tracking      and even the effects of driver distraction (e.g., Salvucci,
is that of sequential protocol analysis, with origins as far    2001). This well-validated model thus serves well as the
back as Newell and Simon’s (1972) seminal work on human         basis for our mind-tracking study of driving.
problem solving. Others have explored interpreting specific
types of protocol data, such as verbal protocols (Waterman      Setup and Procedure
& Newell, 1971) and eye movements (Salvucci &                   Using the driver model as a basis, we began the setup of the
Anderson, 2001), with such techniques as sequence-distance      mind-tracking architecture by specifying the model sets with
matching and hidden Markov models (see Salvucci &               which to detect lane changes:
Anderson, 2001, for a review). Mind tracking integrates the
core ideas of these areas of literature and integrates them        • Driver-Only: This set contained only the default driver
into a unified framework for high-density streams of                 model with no modifications. The mind-tracking
multimodal data.                                                     architecture has no choice but to select the same model
                                                                     in action tracking, thus this set represents a baseline for
      Sample Application: Driver Intentions                          inference in that it tells us how accurate the driver
To put the mind-tracking architecture in context and to              model reflects human performance.
demonstrate its usefulness in a real-world domain, we
performed a study of how to apply the architecture in the          • Stayer-Changer: This set explicitly represented the
domain of driving — in particular, recognizing drivers’              two possible intentions by including two models: a
intent to change lanes. This task may seem small at first in         “stayer” model that always tries to remain in its current
comparison to the generality of the architecture; however,           lane, and a “changer” model that always tries to change
lane-change recognition is in fact quite difficult and serves        lanes. After a lane change, both models are re-
as an excellent first test for two important reasons. First,         synchronized to drive in the correct lane.
lane-change recognition has proven very difficult even for
complex probabilistic models intended for just such a              • Variable-16: This set implicitly represented the set of
purpose. For instance, Pentland and Liu (1999) developed             possible behaviors by creating a set of 42=16 models
hidden Markov models (HMMs) to recognize lane changes                representing variations of the model’s four task-specific
with reasonable accuracy, but this work analyzed discrete            parameters: the desired time-headway (THW) for
time steps and was not easily generalizable to continuous,           following a lead car, the desired THW before starting a
real-time recognition. Second, the driving domain involves           pass maneuver, the minimum cut-in distance from other
a large amount of noisy multimodal data (e.g., steering,             cars when changing lanes, and a parameter describing
pedal depression, etc.) that cannot be handled by earlier            how aggressively the model steers into the other lane.
model tracing algorithms. Thus, inference of driver lane             In this set, each parameter was varied by either 1.5 or
changes serves as an excellent challenge for the mind-               0.75 times its default value, thus producing 16 driver
tracking architecture on a difficult problem and an excellent        models with unique parameter settings.
demonstration of its advantages over earlier methods.
                                                                   • All-19: This set represented a combination of the
Driver Model                                                         Driver-Only, Stayer-Changer, and Variable-16 sets, for
                                                                     a total of 19 unique driver models.
Mind tracking requires that we have a computational model
capable of performing the given task and predicting the         Using each of these model sets, we ran the mind-tracking
same types of action data collected from human subjects.        process on driving data collected in a previous study
For this purpose, we used a version of the ACT-R                (Salvucci, Boer, & Liu, 2001). In this previous study, 11
integrated driver model (Salvucci, Boer, & Liu, 2001), a        human drivers navigated a highway environment with
computational model of highway driving; specifically, we        moderate traffic for approximately 30 minutes and could
used a C++ implementation of the original LISP model            change lanes whenever they desired. In our study, we used
with the same core architecture and task-specific knowledge     only 6 of the 11 subjects for which turn-signal data was
base. The driver model navigates in a simulated multi-lane      available (due to a glitch in the original data collection).
highway environment and incorporates three primary              One important feature of this data set was the inclusion of
modules: control for lower-level perception, steering, and      verbal reports, specifically markings for when drivers voiced
acceleration; monitoring for perception of the environment      their intentions to begin (and end) a lane change; this feature
and maintenance of situation awareness; and decision            allowed us to compare directly between when the driver
making for choice actions that depend on the current            started a lane change and when the mind tracking first
perceptual and environmental variables. Because of its          recognized the change of intention.
implementation in the ACT-R cognitive architecture, the
                                                           1026

     For mind tracking, we used three primary features from              Table 1: Delay times for recognition, in seconds.
the original driving data: steering angle (in radians),
accelerator depression [0-1], and brake depression [0-1]. In                 Model Set          Without TS      With TS
addition, for some of the tests, we also included both turn                  Driver-Only            1.17           1.17
signals with a value of 1 for on and 0 for off. To compute                 Stayer-Changer           .69            .54
the error needed for action tracking, we weighted steering
angle by a multiplicative factor of 5 (to compensate for its                 Variable-16            1.07           .93
smaller relative value) and then added the squared errors for                  All-19               .70            .57
each feature to arrive at the total error.
Results                                                             Table 2: Lateral distance before recognition for right-to-left
                                                                     (R‡L) and left-to-right (L‡R) lane changes, in meters.
We analyzed three aspects of how the mind-tracking                   (Note that the lane width in the original study was 4 m.)
architecture recognized driver lane changes, all with separate
analyses without turn signals and with turn signals to                                        Without TS          With TS
examine the signals’ contribution to tracking. First, Table              Model Set
                                                                                            R‡L       L‡R      R‡L L‡R
1 shows the delay time as the time (in seconds) needed for
the model to detect a lane change. Delay time was                       Driver-Only          1.12      .72     1.12       .72
calculated as the elapsed time between (1) the driver stating          Stayer-Changer        .52       .12      .20       .28
an intention to change lanes (as noted in the verbal protocol
markings) and (2) the first time the best-matching model                 Variable-16         1.08      .40      .96       .36
indicated a lane change, or the first time the vehicle crossed             All-19            .64       .08      .40       .12
into the other lane (the ground truth). The Driver-Only and
Variable-16 sets both required over 1 second to detect a lane
change; the average time for an entire lane change was 5                   Table 3: Time ratios for correct prediction for
seconds, and thus even these methods recognized the lane                    lane keeping (LK) and lane changing (LC).
change approximately one-fifth of the way through the                                         Without TS          With TS
maneuver. The Stayer-Changer and All-19 sets both                        Model Set
performed much better without turn signals, with delay                                       LK        LC       LK        LC
times around .70 s. All sets performed better with turn                 Driver-Only          .70       .40      .70       .40
signals than without (except the Driver-Only set, which
                                                                       Stayer-Changer        .92       .57      .84       .61
always chooses its one model), and the Stayer-Changer and
All-19 sets again performed particularly well with delay                 Variable-16         .84       .39      .87       .45
times around .55 s with turn signals.                                      All-19            .91       .53      .96       .61
     While delay time is a reasonable indication of the speed
of lane-change recognition, it may be deceptive in that the
vehicle may have not shifted far during the delay, making it
hard to fault the recognition system for lack of detection.       correct intention. Again, the Stayer-Changer and All-19
To clarify this point, Table 2 shows the lateral distance         sets outperform the others both without and with turn
traveled before recognition — that is, the distance traveled      signals. Overall, the process does not perform perfect
across the lane (i.e., orthogonally to the direction of travel)   recognition, but the numbers do show some promise: a real-
during the delay time — with separate results included for        world system would not rely on or even expect perfect
lane changes to the left and those to the right. Once again       predictions, but rather would use the predictions as a
the Stayer-Changer and All-19 sets outperform the Driver-         suggestion for how to proceed or possibly integrate the
Only and Variable-16 sets across the board, for right-to-left     predictions into a downstream probabilistic system that can
(R‡ L) and left-to-right (L‡ R) changes and with and              alleviate the variability in the process.
without turn signals. Turn signals again aided recognition,
although not as clearly: distances were higher for right lane     Discussion
changes for the two best sets. Interestingly, lateral distances   Overall, we were very pleased with this first attempt at
for R‡L changes (to pass a lead car) were generally much          applying the mind-tracking architecture to a real-world
larger than those for L‡R changes (to return to the travel        practical problem. Although there is little previous work
lane). The explanation arises in where drivers started their      with which to compare our results, two previous attempts at
lane changes: on average, they started R‡L changes exactly        lane-change recognition come to mind, both using a very
in the center of the right lane (position 0.50 for lane           different technique (hidden Markov models). First,
position [0,1]) but started L‡R changes on the right side of      Pentland and Liu (1999) reported that their recognizer could
the left lane (position 0.36); the larger resulting discrepancy   detect changes in the first half second of the maneuver; their
between steering signals needed to change lanes versus stay       recognizer performs only analysis of discrete segments, as
in the lane make the L‡R changes easier to detect quickly.        opposed to continuous recognition (as we do), but
     Table 3 shows the time ratios for correct predictions,       nevertheless this result maps well onto our best recognition
namely the ratio of time during either lane keeping (LK) or       times. Second, Kuge et al. (2000) reported similar findings
lane changing (LC) for which mind tracking generated the          for their continuous recognition system; however, their
                                                             1027

system uses only steering-based features and has no               Byrne, M. D., & Anderson, J. R. (2001). Serial modules
knowledge of the surrounding environment, which clearly             in parallel: The psychological refractory period and perfect
affects whether and when people make lane changes. The              time-sharing.. Psychological Review, 108, 847-869.
mind-tracking architecture implicitly takes environment into      Conati, C., Gertner, A., & VanLehn, K. (2002). Using
account in that the model predictions are based on                  Bayesian networks to manage uncertainty in student
perception of the current environment. Thus, mind tracking          modeling. Journal of User Modeling and User-Adapted
offers a novel method of inferring driver intent that               Interaction, 12.
compares well with previous results and generalizes well to       Frederiksen, J. R., & White, B. Y. (1990). Intelligent
other complex intentions for lower-level maneuvers (e.g.,           tutors as intelligent testers. In N. Frederiksen, R. Glaser,
turns) and higher-level decisions (e.g., route planning).           A. Lesgold, & M. G. Shafto (Eds.), D i a g n o s t i c
                                                                    Monitoring of Skill and Knowledge Acquisition (pp. 1-
                       Conclusions                                  25). Hillsdale, NJ: Lawrence Erlbaum Associates.
                                                                  Horvitz, E., Breese, J., Heckerman, D., Hovel, D., &
The mind-tracking architecture provides a unified framework         Rommelse, K. (1998). The Lumiere project: Bayesian
for inferring people’s thoughts from their actions. As such,        user modeling for inferring the goals and needs of
it represents an extremely broad area of work with many             software users. In Proceedings of the Fourteenth
degrees of freedom, and this initial treatment only scratches       Conference on Uncertainty in Artificial Intelligence (pp.
the surface of a potentially fruitful area of research. As just     256-265). San Francisco, CA: Morgan Kaufmann.
one example, we have chosen the ACT-R architecture as the         Kuge, N., Yamamura, T., Shimoyama, O., & Liu, A.
cognitive model representation; however, we might just as           (2000). A driver behavior recognition method based on a
easily employ another cognitive architecture (e.g., Soar:           drive model framework. In Proceedings of the Society of
Laird, Newell, & Rosenbloom, 1987, or EPIC: Meyer &                 Automotive Engineers World Congress 2000.
Kieras, 1997) and use models developed for these                  Laird, J. E., Newell, A., & Rosenbloom, P. S. (1987).
architectures — for instance, Aasman’s (1995) Soar driver           Soar: An architecture for general intelligence. Artificial
model. Our upcoming work will explore many of these                 Intelligence, 33, 1-64.
degrees of freedom and continue applying this theoretical         Lee, F. J., & Anderson, J. R. (2001). Does learning of a
work to practical domains such as driving, intelligent              complex task have to be complex? A study in learning
tutoring, etc. For now, this initial work shows good                decomposition. Cognitive Psychology, 42, 267-316.
promise for the mind-tracking architecture in providing a         Meyer, D. E., Glass, J. M., Mueller, S. T., Seymour, T.
novel way of representing and thinking about the inference          L., & Kieras, D. E. (2001). Executive-process interactive
of human thoughts and intentions.                                   control: A unified computational theory for answering
                                                                    twenty questions (and more) about cognitive ageing.
                    Acknowledgments                                 European Journal of Cognitive Psychology, 13, 123-164.
This work was supported in part by National Science               Meyer, D. E., & Kieras, D. E. (1997). A computational
Foundation Grant #IIS-0133083 and a grant from Nissan               theory of executive cognitive processes and multiple-task
Motor Company, both to the first author.                            performance: Part 1. Basic mechanisms. Psychological
                                                                    Review, 104, 3-65.
                                                                  Newell, A., & Simon, H. A. (1972). Human problem
                        References                                  solving. Englewood Cliffs, NJ: Prentice Hall.
Aasman, J. (1995). Modelling driver behaviour in Soar.            Pentland, A., & Liu, A. (1999). Modeling and prediction
   Leidschendam, The Netherlands: KPN Research.                     of human behavior. Neural Computation, 11, 229-242.
Anderson, J. R., Corbett, A. T., Koedinger, K., &                 Salvucci, D. D. (2001). Predicting the effects of in-car
   Pelletier, R. (1995). Cognitive tutors: Lessons learned.         interface use on driver performance: An integrated model
   The Journal of the Learning Sciences, 4, 167-207.                approach. International Journal of Human-Computer
Anderson, J. R., & Gluck, K. A. (2001). What role do                Studies, 55, 85-107.
   cognitive architectures play in intelligent tutoring           Salvucci, D. D., & Anderson, J. R. (2001). Automated
   systems?. In D. Klahr & S. M. Carver (Eds.), Cognition           eye-movement protocol analysis. Human-Computer
   and Instruction: 25 Years of Progress. Hillsdale, NJ:            Interaction, 16, 39-86.
   Lawrence Erlbaum Associates.                                   Salvucci, D. D., Boer, E. R., & Liu, A. (2001). Toward an
Anderson, J. R., & Lebiere, C. (1998). The atomic                   integrated model of driver behavior in a cognitive
   components of thought. Hillsdale, NJ: Erlbaum.                   architecture. Transportation Research Record, 1779.
Anderson, J. R., & Matessa, M. P. (1997). A production            Waterman, D. A., & Newell, A. (1971). Protocol analysis
   system theory of serial memory. Psychological Review,            as a task for artificial intelligence. Artificial Intelligence,
   104, 728-748.                                                    2, 285-318.
                                                             1028

